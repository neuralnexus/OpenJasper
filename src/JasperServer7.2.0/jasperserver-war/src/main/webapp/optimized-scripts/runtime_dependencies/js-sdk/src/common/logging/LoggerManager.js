!function(e,t,n){"function"==typeof define&&define.amd?define(["underscore","common/logging/Log","common/logging/Level","common/logging/appender/ConsoleAppender"],e):(t.logging||(t.logging={}),t.logging.LoggerManager=e(n,t.logging.Log,t.logging.Level,t.logging.appender.ConsoleAppender))}(function(e,t,n,i){var s={console:i},o=function(e){this.initialize(e||{})};return e.extend(o.prototype,{defaults:function(){return{enabled:!1,level:"error",appenders:{},appenderInstances:{},loggers:{}}},initialize:function(t){this.attributes=e.defaults(t,this.defaults());var n={};e.each(s,function(e,t){n[t]=new e}),this.set("appenderInstances",n)},get:function(e){return this.attributes[e]},set:function(e,t){this.attributes[e]=t},register:function(n){var i={id:"root"};if("string"==typeof n&&""!==n?i.id=n:n&&n.hasOwnProperty("id")&&(i.id=n.id),!this.get("loggers").hasOwnProperty(i.id)){var s=this.get("loggers");s[i.id]=new t(i,e.bind(this._processLogItem,this)),this.set("loggers",s)}return this.get("loggers")[i.id]},disable:function(){this.set("enabled",!1)},enable:function(e){e&&this.set("level",n.getLevel(e)),this.set("enabled",!0)},setLevel:function(e){this.set("level",e)},_processLogItem:function(e){this.get("enabled")&&e.level.isGreaterOrEqual(this.get("level"))&&this._appendLogItem(e)},_appendLogItem:function(e){var t=this.get("appenders"),n=this.get("appenderInstances");for(var i in t)n.hasOwnProperty(t[i])&&n[t[i]].write(e)}}),o},this,this._);