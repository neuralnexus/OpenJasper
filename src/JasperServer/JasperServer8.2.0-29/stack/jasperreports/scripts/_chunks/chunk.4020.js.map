{"version":3,"sources":["webpack://jrs-ui/./runtime_dependencies/backbone-validation/dist/backbone-validation-amd.js","webpack://jrs-ui/./runtime_dependencies/jquery-ui/ui/scroll-parent.js"],"names":["factory","Backbone","_","Validation","validateAttr","mixin","bindModel","unbindModel","collectionAdd","collectionRemove","trim","isNumber","hasValue","defaultOptions","forceUpdate","selector","labelFormatter","valid","Function","prototype","invalid","formatFunctions","formatLabel","attrName","model","defaultLabelFormatters","format","args","Array","slice","call","arguments","text","shift","replace","match","number","flatten","obj","into","prefix","each","val","key","hasOwnProperty","Date","RegExp","Model","Collection","attr","value","computed","reduce","attrValidationSet","validation","result","isFunction","isString","fn","isArray","memo","attrValidation","without","keys","validator","push","defaultValidators","msg","getValidators","ctx","extend","view","options","validate","preValidate","isValid","this","version","configure","bind","defaultCallbacks","collection","unbind","error","self","isObject","isEmpty","undefined","attributes","option","flattened","_isValid","attrs","setOptions","validateAll","opt","validatedAttrs","getValidatedAttrs","allAttrs","changedAttrs","invalidAttrs","clone","validateModel","changed","defer","trigger","intersection","length","callbacks","$","removeClass","removeAttr","addClass","defaultPatterns","patterns","digits","email","url","defaultMessages","messages","required","acceptance","min","max","range","minLength","maxLength","rangeLength","oneOf","equalTo","inlinePattern","labelFormatters","none","sentenceCase","index","toUpperCase","toLowerCase","label","labels","validators","String","toString","isNull","isUndefined","isRequired","accept","isBoolean","minValue","maxValue","values","include","join","pattern","exports","module","require","define","scrollParent","includeHidden","position","css","excludeStaticParent","overflowRegex","parents","filter","parent","test","eq","ownerDocument","document"],"mappings":"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","file":"_chunks/chunk.4020.js","sourcesContent":["// Backbone.Validation v0.9.1\n//\n// Copyright (c) 2011-2014 Thomas Pedersen\n// Distributed under MIT License\n//\n// Documentation and full license available at:\n// http://thedersen.com/projects/backbone-validation\n(function (factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory(require('backbone'), require('underscore'));\n  } else if (typeof define === 'function' && define.amd) {\n    define(['backbone', 'underscore'], factory);\n  }\n}(function (Backbone, _) {\n  Backbone.Validation = (function(_){\n    'use strict';\n  \n    // Default options\n    // ---------------\n  \n    var defaultOptions = {\n      forceUpdate: false,\n      selector: 'name',\n      labelFormatter: 'sentenceCase',\n      valid: Function.prototype,\n      invalid: Function.prototype\n    };\n  \n  \n    // Helper functions\n    // ----------------\n  \n    // Formatting functions used for formatting error messages\n    var formatFunctions = {\n      // Uses the configured label formatter to format the attribute name\n      // to make it more readable for the user\n      formatLabel: function(attrName, model) {\n        return defaultLabelFormatters[defaultOptions.labelFormatter](attrName, model);\n      },\n  \n      // Replaces nummeric placeholders like {0} in a string with arguments\n      // passed to the function\n      format: function() {\n        var args = Array.prototype.slice.call(arguments),\n            text = args.shift();\n        return text.replace(/\\{(\\d+)\\}/g, function(match, number) {\n          return typeof args[number] !== 'undefined' ? args[number] : match;\n        });\n      }\n    };\n  \n    // Flattens an object\n    // eg:\n    //\n    //     var o = {\n    //       address: {\n    //         street: 'Street',\n    //         zip: 1234\n    //       }\n    //     };\n    //\n    // becomes:\n    //\n    //     var o = {\n    //       'address.street': 'Street',\n    //       'address.zip': 1234\n    //     };\n    var flatten = function (obj, into, prefix) {\n      into = into || {};\n      prefix = prefix || '';\n  \n      _.each(obj, function(val, key) {\n        if(obj.hasOwnProperty(key)) {\n          if (val && typeof val === 'object' && !(\n            val instanceof Array ||\n            val instanceof Date ||\n            val instanceof RegExp ||\n            val instanceof Backbone.Model ||\n            val instanceof Backbone.Collection)\n          ) {\n            flatten(val, into, prefix + key + '.');\n          }\n          else {\n            into[prefix + key] = val;\n          }\n        }\n      });\n  \n      return into;\n    };\n  \n    // Validation\n    // ----------\n  \n    var Validation = (function(){\n  \n      // Returns an object with undefined properties for all\n      // attributes on the model that has defined one or more\n      // validation rules.\n      var getValidatedAttrs = function(model) {\n        return _.reduce(_.keys(_.result(model, 'validation') || {}), function(memo, key) {\n          memo[key] = void 0;\n          return memo;\n        }, {});\n      };\n  \n      // Looks on the model for validations for a specified\n      // attribute. Returns an array of any validators defined,\n      // or an empty array if none is defined.\n      var getValidators = function(model, attr) {\n        var attrValidationSet = model.validation ? _.result(model, 'validation')[attr] || {} : {};\n  \n        // If the validator is a function or a string, wrap it in a function validator\n        if (_.isFunction(attrValidationSet) || _.isString(attrValidationSet)) {\n          attrValidationSet = {\n            fn: attrValidationSet\n          };\n        }\n  \n        // Stick the validator object into an array\n        if(!_.isArray(attrValidationSet)) {\n          attrValidationSet = [attrValidationSet];\n        }\n  \n        // Reduces the array of validators into a new array with objects\n        // with a validation method to call, the value to validate against\n        // and the specified error message, if any\n        return _.reduce(attrValidationSet, function(memo, attrValidation) {\n          _.each(_.without(_.keys(attrValidation), 'msg'), function(validator) {\n            memo.push({\n              fn: defaultValidators[validator],\n              val: attrValidation[validator],\n              msg: attrValidation.msg\n            });\n          });\n          return memo;\n        }, []);\n      };\n  \n      // Validates an attribute against all validators defined\n      // for that attribute. If one or more errors are found,\n      // the first error message is returned.\n      // If the attribute is valid, an empty string is returned.\n      var validateAttr = function(model, attr, value, computed) {\n        // Reduces the array of validators to an error message by\n        // applying all the validators and returning the first error\n        // message, if any.\n        return _.reduce(getValidators(model, attr), function(memo, validator){\n          // Pass the format functions plus the default\n          // validators as the context to the validator\n          var ctx = _.extend({}, formatFunctions, defaultValidators),\n              result = validator.fn.call(ctx, value, attr, validator.val, model, computed);\n  \n          if(result === false || memo === false) {\n            return false;\n          }\n          if (result && !memo) {\n            return _.result(validator, 'msg') || result;\n          }\n          return memo;\n        }, '');\n      };\n  \n      // Loops through the model's attributes and validates them all.\n      // Returns and object containing names of invalid attributes\n      // as well as error messages.\n      var validateModel = function(model, attrs) {\n        var error,\n            invalidAttrs = {},\n            isValid = true,\n            computed = _.clone(attrs),\n            flattened = flatten(attrs);\n  \n        _.each(flattened, function(val, attr) {\n          error = validateAttr(model, attr, val, computed);\n          if (error) {\n            invalidAttrs[attr] = error;\n            isValid = false;\n          }\n        });\n  \n        return {\n          invalidAttrs: invalidAttrs,\n          isValid: isValid\n        };\n      };\n  \n      // Contains the methods that are mixed in on the model when binding\n      var mixin = function(view, options) {\n        return {\n  \n          // Check whether or not a value, or a hash of values\n          // passes validation without updating the model\n          preValidate: function(attr, value) {\n            var self = this,\n                result = {},\n                error;\n  \n            if(_.isObject(attr)){\n              _.each(attr, function(value, key) {\n                error = self.preValidate(key, value);\n                if(error){\n                  result[key] = error;\n                }\n              });\n  \n              return _.isEmpty(result) ? undefined : result;\n            }\n            else {\n              return validateAttr(this, attr, value, _.extend({}, this.attributes));\n            }\n          },\n  \n          // Check to see if an attribute, an array of attributes or the\n          // entire model is valid. Passing true will force a validation\n          // of the model.\n          isValid: function(option) {\n            var flattened = flatten(this.attributes);\n  \n            if(_.isString(option)){\n              return !validateAttr(this, option, flattened[option], _.extend({}, this.attributes));\n            }\n            if(_.isArray(option)){\n              return _.reduce(option, function(memo, attr) {\n                return memo && !validateAttr(this, attr, flattened[attr], _.extend({}, this.attributes));\n              }, true, this);\n            }\n            if(option === true) {\n              this.validate();\n            }\n            return this.validation ? this._isValid : true;\n          },\n  \n          // This is called by Backbone when it needs to perform validation.\n          // You can call it manually without any parameters to validate the\n          // entire model.\n          validate: function(attrs, setOptions){\n            var model = this,\n                validateAll = !attrs,\n                opt = _.extend({}, options, setOptions),\n                validatedAttrs = getValidatedAttrs(model),\n                allAttrs = _.extend({}, validatedAttrs, model.attributes, attrs),\n                changedAttrs = flatten(attrs || allAttrs),\n  \n                result = validateModel(model, allAttrs);\n  \n            model._isValid = result.isValid;\n  \n            // After validation is performed, loop through all validated attributes\n            // and call the valid callbacks so the view is updated.\n            _.each(validatedAttrs, function(val, attr){\n              var invalid = result.invalidAttrs.hasOwnProperty(attr);\n              if(!invalid){\n                opt.valid(view, attr, opt.selector);\n              }\n            });\n  \n            // After validation is performed, loop through all validated and changed attributes\n            // and call the invalid callback so the view is updated.\n            _.each(validatedAttrs, function(val, attr){\n              var invalid = result.invalidAttrs.hasOwnProperty(attr),\n                  changed = changedAttrs.hasOwnProperty(attr);\n  \n              if(invalid && (changed || validateAll)){\n                opt.invalid(view, attr, result.invalidAttrs[attr], opt.selector);\n              }\n            });\n  \n            // Trigger validated events.\n            // Need to defer this so the model is actually updated before\n            // the event is triggered.\n            _.defer(function() {\n              model.trigger('validated', model._isValid, model, result.invalidAttrs);\n              model.trigger('validated:' + (model._isValid ? 'valid' : 'invalid'), model, result.invalidAttrs);\n            });\n  \n            // Return any error messages to Backbone, unless the forceUpdate flag is set.\n            // Then we do not return anything and fools Backbone to believe the validation was\n            // a success. That way Backbone will update the model regardless.\n            if (!opt.forceUpdate && _.intersection(_.keys(result.invalidAttrs), _.keys(changedAttrs)).length > 0) {\n              return result.invalidAttrs;\n            }\n          }\n        };\n      };\n  \n      // Helper to mix in validation on a model\n      var bindModel = function(view, model, options) {\n        _.extend(model, mixin(view, options));\n      };\n  \n      // Removes the methods added to a model\n      var unbindModel = function(model) {\n        delete model.validate;\n        delete model.preValidate;\n        delete model.isValid;\n      };\n  \n      // Mix in validation on a model whenever a model is\n      // added to a collection\n      var collectionAdd = function(model) {\n        bindModel(this.view, model, this.options);\n      };\n  \n      // Remove validation from a model whenever a model is\n      // removed from a collection\n      var collectionRemove = function(model) {\n        unbindModel(model);\n      };\n  \n      // Returns the public methods on Backbone.Validation\n      return {\n  \n        // Current version of the library\n        version: '0.9.1',\n  \n        // Called to configure the default options\n        configure: function(options) {\n          _.extend(defaultOptions, options);\n        },\n  \n        // Hooks up validation on a view with a model\n        // or collection\n        bind: function(view, options) {\n          options = _.extend({}, defaultOptions, defaultCallbacks, options);\n  \n          var model = options.model || view.model,\n              collection = options.collection || view.collection;\n  \n          if(typeof model === 'undefined' && typeof collection === 'undefined'){\n            throw 'Before you execute the binding your view must have a model or a collection.\\n' +\n                  'See http://thedersen.com/projects/backbone-validation/#using-form-model-validation for more information.';\n          }\n  \n          if(model) {\n            bindModel(view, model, options);\n          }\n          else if(collection) {\n            collection.each(function(model){\n              bindModel(view, model, options);\n            });\n            collection.bind('add', collectionAdd, {view: view, options: options});\n            collection.bind('remove', collectionRemove);\n          }\n        },\n  \n        // Removes validation from a view with a model\n        // or collection\n        unbind: function(view, options) {\n          options = _.extend({}, options);\n          var model = options.model || view.model,\n              collection = options.collection || view.collection;\n  \n          if(model) {\n            unbindModel(model);\n          }\n          else if(collection) {\n            collection.each(function(model){\n              unbindModel(model);\n            });\n            collection.unbind('add', collectionAdd);\n            collection.unbind('remove', collectionRemove);\n          }\n        },\n  \n        // Used to extend the Backbone.Model.prototype\n        // with validation\n        mixin: mixin(null, defaultOptions)\n      };\n    }());\n  \n  \n    // Callbacks\n    // ---------\n  \n    var defaultCallbacks = Validation.callbacks = {\n  \n      // Gets called when a previously invalid field in the\n      // view becomes valid. Removes any error message.\n      // Should be overridden with custom functionality.\n      valid: function(view, attr, selector) {\n        view.$('[' + selector + '~=\"' + attr + '\"]')\n            .removeClass('invalid')\n            .removeAttr('data-error');\n      },\n  \n      // Gets called when a field in the view becomes invalid.\n      // Adds a error message.\n      // Should be overridden with custom functionality.\n      invalid: function(view, attr, error, selector) {\n        view.$('[' + selector + '~=\"' + attr + '\"]')\n            .addClass('invalid')\n            .attr('data-error', error);\n      }\n    };\n  \n  \n    // Patterns\n    // --------\n  \n    var defaultPatterns = Validation.patterns = {\n      // Matches any digit(s) (i.e. 0-9)\n      digits: /^\\d+$/,\n  \n      // Matches any number (e.g. 100.000)\n      number: /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/,\n  \n      // Matches a valid email address (e.g. mail@example.com)\n      email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n  \n      // Mathes any valid url (e.g. http://www.xample.com)\n      url: /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\n    };\n  \n  \n    // Error messages\n    // --------------\n  \n    // Error message for the build in validators.\n    // {x} gets swapped out with arguments form the validator.\n    var defaultMessages = Validation.messages = {\n      required: '{0} is required',\n      acceptance: '{0} must be accepted',\n      min: '{0} must be greater than or equal to {1}',\n      max: '{0} must be less than or equal to {1}',\n      range: '{0} must be between {1} and {2}',\n      length: '{0} must be {1} characters',\n      minLength: '{0} must be at least {1} characters',\n      maxLength: '{0} must be at most {1} characters',\n      rangeLength: '{0} must be between {1} and {2} characters',\n      oneOf: '{0} must be one of: {1}',\n      equalTo: '{0} must be the same as {1}',\n      digits: '{0} must only contain digits',\n      number: '{0} must be a number',\n      email: '{0} must be a valid email',\n      url: '{0} must be a valid url',\n      inlinePattern: '{0} is invalid'\n    };\n  \n    // Label formatters\n    // ----------------\n  \n    // Label formatters are used to convert the attribute name\n    // to a more human friendly label when using the built in\n    // error messages.\n    // Configure which one to use with a call to\n    //\n    //     Backbone.Validation.configure({\n    //       labelFormatter: 'label'\n    //     });\n    var defaultLabelFormatters = Validation.labelFormatters = {\n  \n      // Returns the attribute name with applying any formatting\n      none: function(attrName) {\n        return attrName;\n      },\n  \n      // Converts attributeName or attribute_name to Attribute name\n      sentenceCase: function(attrName) {\n        return attrName.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(match, index) {\n          return index === 0 ? match.toUpperCase() : ' ' + match.toLowerCase();\n        }).replace(/_/g, ' ');\n      },\n  \n      // Looks for a label configured on the model and returns it\n      //\n      //      var Model = Backbone.Model.extend({\n      //        validation: {\n      //          someAttribute: {\n      //            required: true\n      //          }\n      //        },\n      //\n      //        labels: {\n      //          someAttribute: 'Custom label'\n      //        }\n      //      });\n      label: function(attrName, model) {\n        return (model.labels && model.labels[attrName]) || defaultLabelFormatters.sentenceCase(attrName, model);\n      }\n    };\n  \n  \n    // Built in validators\n    // -------------------\n  \n    var defaultValidators = Validation.validators = (function(){\n      // Use native trim when defined\n      var trim = String.prototype.trim ?\n        function(text) {\n          return text === null ? '' : String.prototype.trim.call(text);\n        } :\n        function(text) {\n          var trimLeft = /^\\s+/,\n              trimRight = /\\s+$/;\n  \n          return text === null ? '' : text.toString().replace(trimLeft, '').replace(trimRight, '');\n        };\n  \n      // Determines whether or not a value is a number\n      var isNumber = function(value){\n        return _.isNumber(value) || (_.isString(value) && value.match(defaultPatterns.number));\n      };\n  \n      // Determines whether or not a value is empty\n      var hasValue = function(value) {\n        return !(_.isNull(value) || _.isUndefined(value) || (_.isString(value) && trim(value) === '') || (_.isArray(value) && _.isEmpty(value)));\n      };\n  \n      return {\n        // Function validator\n        // Lets you implement a custom function used for validation\n        fn: function(value, attr, fn, model, computed) {\n          if(_.isString(fn)){\n            fn = model[fn];\n          }\n          return fn.call(model, value, attr, computed);\n        },\n  \n        // Required validator\n        // Validates if the attribute is required or not\n        // This can be specified as either a boolean value or a function that returns a boolean value\n        required: function(value, attr, required, model, computed) {\n          var isRequired = _.isFunction(required) ? required.call(model, value, attr, computed) : required;\n          if(!isRequired && !hasValue(value)) {\n            return false; // overrides all other validators\n          }\n          if (isRequired && !hasValue(value)) {\n            return this.format(defaultMessages.required, this.formatLabel(attr, model));\n          }\n        },\n  \n        // Acceptance validator\n        // Validates that something has to be accepted, e.g. terms of use\n        // `true` or 'true' are valid\n        acceptance: function(value, attr, accept, model) {\n          if(value !== 'true' && (!_.isBoolean(value) || value === false)) {\n            return this.format(defaultMessages.acceptance, this.formatLabel(attr, model));\n          }\n        },\n  \n        // Min validator\n        // Validates that the value has to be a number and equal to or greater than\n        // the min value specified\n        min: function(value, attr, minValue, model) {\n          if (!isNumber(value) || value < minValue) {\n            return this.format(defaultMessages.min, this.formatLabel(attr, model), minValue);\n          }\n        },\n  \n        // Max validator\n        // Validates that the value has to be a number and equal to or less than\n        // the max value specified\n        max: function(value, attr, maxValue, model) {\n          if (!isNumber(value) || value > maxValue) {\n            return this.format(defaultMessages.max, this.formatLabel(attr, model), maxValue);\n          }\n        },\n  \n        // Range validator\n        // Validates that the value has to be a number and equal to or between\n        // the two numbers specified\n        range: function(value, attr, range, model) {\n          if(!isNumber(value) || value < range[0] || value > range[1]) {\n            return this.format(defaultMessages.range, this.formatLabel(attr, model), range[0], range[1]);\n          }\n        },\n  \n        // Length validator\n        // Validates that the value has to be a string with length equal to\n        // the length value specified\n        length: function(value, attr, length, model) {\n          if (!_.isString(value) || value.length !== length) {\n            return this.format(defaultMessages.length, this.formatLabel(attr, model), length);\n          }\n        },\n  \n        // Min length validator\n        // Validates that the value has to be a string with length equal to or greater than\n        // the min length value specified\n        minLength: function(value, attr, minLength, model) {\n          if (!_.isString(value) || value.length < minLength) {\n            return this.format(defaultMessages.minLength, this.formatLabel(attr, model), minLength);\n          }\n        },\n  \n        // Max length validator\n        // Validates that the value has to be a string with length equal to or less than\n        // the max length value specified\n        maxLength: function(value, attr, maxLength, model) {\n          if (!_.isString(value) || value.length > maxLength) {\n            return this.format(defaultMessages.maxLength, this.formatLabel(attr, model), maxLength);\n          }\n        },\n  \n        // Range length validator\n        // Validates that the value has to be a string and equal to or between\n        // the two numbers specified\n        rangeLength: function(value, attr, range, model) {\n          if (!_.isString(value) || value.length < range[0] || value.length > range[1]) {\n            return this.format(defaultMessages.rangeLength, this.formatLabel(attr, model), range[0], range[1]);\n          }\n        },\n  \n        // One of validator\n        // Validates that the value has to be equal to one of the elements in\n        // the specified array. Case sensitive matching\n        oneOf: function(value, attr, values, model) {\n          if(!_.include(values, value)){\n            return this.format(defaultMessages.oneOf, this.formatLabel(attr, model), values.join(', '));\n          }\n        },\n  \n        // Equal to validator\n        // Validates that the value has to be equal to the value of the attribute\n        // with the name specified\n        equalTo: function(value, attr, equalTo, model, computed) {\n          if(value !== computed[equalTo]) {\n            return this.format(defaultMessages.equalTo, this.formatLabel(attr, model), this.formatLabel(equalTo, model));\n          }\n        },\n  \n        // Pattern validator\n        // Validates that the value has to match the pattern specified.\n        // Can be a regular expression or the name of one of the built in patterns\n        pattern: function(value, attr, pattern, model) {\n          if (!hasValue(value) || !value.toString().match(defaultPatterns[pattern] || pattern)) {\n            return this.format(defaultMessages[pattern] || defaultMessages.inlinePattern, this.formatLabel(attr, model), pattern);\n          }\n        }\n      };\n    }());\n  \n    // Set the correct context for all validators\n    // when used from within a method validator\n    _.each(defaultValidators, function(validator, key){\n      defaultValidators[key] = _.bind(defaultValidators[key], _.extend({}, formatFunctions, defaultValidators));\n    });\n  \n    return Validation;\n  }(_));\n  return Backbone.Validation;\n}));","/*!\n * jQuery UI Scroll Parent 1.13.2\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: scrollParent\n//>>group: Core\n//>>description: Get the closest ancestor element that is scrollable.\n//>>docs: http://api.jqueryui.com/scrollParent/\n\n( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\nreturn $.fn.scrollParent = function( includeHidden ) {\n\tvar position = this.css( \"position\" ),\n\t\texcludeStaticParent = position === \"absolute\",\n\t\toverflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\n\t\tscrollParent = this.parents().filter( function() {\n\t\t\tvar parent = $( this );\n\t\t\tif ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\n\t\t\t\tparent.css( \"overflow-x\" ) );\n\t\t} ).eq( 0 );\n\n\treturn position === \"fixed\" || !scrollParent.length ?\n\t\t$( this[ 0 ].ownerDocument || document ) :\n\t\tscrollParent;\n};\n\n} );\n"],"sourceRoot":""}