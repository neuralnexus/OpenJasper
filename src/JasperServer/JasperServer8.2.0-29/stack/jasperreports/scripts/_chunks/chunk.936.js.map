{"version":3,"sources":["webpack://jrs-ui/../js-sdk/src/common/extension/jQueryDatepickerExtension.js","webpack://jrs-ui/../js-sdk/src/common/extension/jQueryTimepickerExtension.js","webpack://jrs-ui/../js-sdk/src/common/util/datetime/RelativeDate.js","webpack://jrs-ui/../js-sdk/src/common/util/datetime/RelativeTimestamp.js","webpack://jrs-ui/../js-sdk/src/common/util/parse/date.js"],"names":["_jasperPrefix","_mainDivId","$","_jasperPopupClass","originalNewInst","result","apply","arguments","dpDiv","removeClass","addClass","originalGoToToday","id","call","this","_selectDate","$input","opts","onChangeMonthYear","year","month","datepicker","timepicker","currentYear","selectedYear","currentMonth","selectedMonth","currentDay","selectedDay","_updateDateTime","instance","originalOnTimeChange","_onTimeChange","$timeObj","setSelectionRange","RelativeDate","keyword","sign","number","setKeyword","setSign","setNumber","prototype","toUpperCase","_","value","parseInt","isNaN","toString","PATTERNS","DAY","WEEK","MONTH","QUARTER","SEMI","YEAR","parse","relativeDateString","isValid","pattern","exec","length","relativeDate","test","RelativeTimestamp","F","constructor","relativeTimestampString","relativeTimestamp","localeSettingsObject","jrsConfigs","userTimezone","ISO_8601_TIMESTAMP_PATTERN","ISO_8601_DATE_PATTERN","ISO_8601_TIME_PATTERN","toMomentDatePattern","dateFormat","indexOf","replace","fromJavaToMomentDatePattern","toMomentTimePattern","timeFormat","toLowerCase","fromJavaToMomentTimePattern","toMomentTimestampPattern","separator","dateStringToMoment","moment","timestampStringToMoment","timestampSeparator","isDate","isTimestamp","compareMoments","moment1","moment2","isBefore","isAfter","localizedTimestampToIsoTimestamp","localizedTimestampString","convert","localizedDateToIsoDate","localizedDateString","fromPattern","toPattern","momentValue","format","isRelativeDate","isRelativeTimestamp","isIso8601Timestamp","compareDates","value1","value2","compareTimestamps","iso8601DateToMoment","isoDateString","momentToIso8601Date","momentDate","momentToLocalizedDate","dateObjectToIso8601Timestamp","iso8601TimestampToDateObject","toDate","isoTimestampToLocalizedTimestamp","isoTimestampString","isoDateToLocalizedDate","localizedTimeToIsoTime","localizedTimeString","isoTimeToLocalizedTime","isoTimeString","toMomentDateOrTimeOrTimestampPattern","dateOrTimeOrTimestampFormat","dateTimeSeparator","fromJava","formatAsArray","split","toDatePattern","toTimePattern","isoDateToLocalizedDateByTimezone","timezone","tz","localizedDateToIsoDateByTimezone","utc","isoTimeToLocalizedTimeByTimezone","duration","utcMoment","hours","minutes","seconds","localizedTimeToIsoTimeByTimezone","timezoneMoment","isoTimestampToLocalizedTimestampByTimezone","localizedTimestampToIsoTimestampByTimezone","momentTimestamp"],"mappings":"wHAyBIA,G,SAAgB,MAIhBC,EAAaD,MADEE,0BAAwB,MAG3CA,0BAA0BD,EAE1BC,0BAAwB,KAAMD,GAE9BC,mCAMAA,8BAJiBC,8GAMjB,IAAIC,EAAkBF,wBAEtBA,wBAAwB,WACpB,IAAIG,EAASD,EAAgBE,MAAMJ,eAAcK,WAKjD,OAHAF,EAAOG,MAAMC,YAAYT,GACzBK,EAAOG,MAAME,SAASV,GAEfK,GAGX,IAAIM,EAAoBT,0BAExBA,0BAA0B,SAASU,GAC/BD,EAAkBE,KAAKC,KAAMF,GAC7BE,KAAKC,YAAYH,I,6BC/BjBR,EAAkBF,wBAEtBA,wBAAwB,SAASc,EAAQC,GAChCA,EAAKC,oBACND,EAAKC,kBAAoB,SAASC,EAAMC,EAAOC,EAAYC,GACvDD,EAAWE,YAAcF,EAAWG,aACpCH,EAAWI,aAAeJ,EAAWK,cACrCL,EAAWM,WAAaN,EAAWO,YAEnCN,EAAWO,gBAAgBR,KAInC,IAAIS,EAAW1B,EAAgBS,KAAKX,eAAcc,EAAQC,GAEtDc,EAAuBD,EAASE,cAQpC,OANAF,EAASE,cAAgB,WAGrB,OAFAlB,KAAKmB,SAAS,GAAGC,kBAAoB,KAE9BH,EAAqBzB,MAAMQ,KAAMP,YAGrCuB,I,sEC5BPK,EAAe,SAAUC,EAASC,EAAMC,GACxCxB,KAAKyB,WAAWH,GAChBtB,KAAK0B,QAAQH,GACbvB,KAAK2B,UAAUH,IAEnBH,EAAaO,UAAUH,WAAa,SAAUH,GAC1CtB,KAAKsB,QAAUA,EAAQO,eAE3BR,EAAaO,UAAUF,QAAU,SAAUH,GACvCvB,KAAKuB,KAAOA,GAEhBF,EAAaO,UAAUD,UAAY,SAAUH,GACzC,GAAIM,aAAWN,GACXxB,KAAKwB,OAASA,MACX,CACH,IAAIO,EAAQC,SAASR,EAAQ,IACxBS,MAAMF,GAGP/B,KAAKwB,OAAS,EAFdxB,KAAKwB,OAASO,IAM1BV,EAAaO,UAAUM,SAAW,WAC9B,OAAIJ,aAAW9B,KAAKwB,UAAYS,MAAMjC,KAAKwB,SAAWxB,KAAKwB,OAAS,IAAoB,MAAdxB,KAAKuB,MAA8B,MAAdvB,KAAKuB,OAAiBvB,KAAKsB,WAAWD,EAAac,SACvInC,KAAKsB,QAAUtB,KAAKuB,KAAOvB,KAAKwB,OAAOU,WACvClC,KAAKsB,WAAWD,EAAac,SAC7BnC,KAAKsB,QAEL,IAGfD,EAAac,SAAW,CACpBC,IAAK,+BACLC,KAAM,gCACNC,MAAO,iCACPC,QAAS,mCACTC,KAAM,gCACNC,KAAM,iCAEVpB,EAAaqB,MAAQ,SAAUC,GAC3B,GAAItB,EAAauB,QAAQD,GACrB,IAAK,IAAIE,KAAWxB,EAAac,SAAU,CACvC,IAAI5C,EAAS8B,EAAac,SAASU,GAASC,KAAKH,GACjD,GAAe,OAAXpD,GAAmBuC,YAAUvC,IAA6B,IAAlBA,EAAOwD,OAC/C,OAAO,IAAI1B,EAAa9B,EAAO,GAAIA,EAAO,GAAIA,EAAO,MAMrE8B,EAAauB,QAAU,SAAUI,GAC7B,GAAIA,aAAwB3B,EACxB,MAAmC,KAA5B2B,EAAad,WACjB,GAAIJ,aAAWkB,GAClB,IAAK,IAAIH,KAAWxB,EAAac,SAC7B,GAAId,EAAac,SAASU,GAASI,KAAKD,GACpC,OAAO,EAInB,OAAO,GAEX,W,gHC9DIE,EAAoB,WACpB7B,UAAmBrB,KAAMP,YAEzB0D,EAAI,aAERA,EAAEvB,UAAYP,eACd6B,EAAkBtB,UAAY,IAAIuB,GACNC,YAAcF,EAC1CA,EAAkBf,SAAW,CACzBC,IAAK,+BACLC,KAAM,gCACNC,MAAO,iCACPC,QAAS,mCACTC,KAAM,gCACNC,KAAM,iCAEVS,EAAkBR,MAAQ,SAAUW,GAChC,GAAIH,EAAkBN,QAAQS,GAC1B,IAAK,IAAIR,KAAWK,EAAkBf,SAAU,CAC5C,IAAI5C,EAAS2D,EAAkBf,SAASU,GAASC,KAAKO,GACtD,GAAe,OAAX9D,GAAmBuC,YAAUvC,IAA6B,IAAlBA,EAAOwD,OAC/C,OAAO,IAAIG,EAAkB3D,EAAO,GAAIA,EAAO,GAAIA,EAAO,MAM1E2D,EAAkBN,QAAU,SAAUU,GAClC,GAAIA,aAA6BJ,EAC7B,MAAwC,KAAjCI,EAAkBpB,WACtB,GAAIJ,aAAWwB,GAClB,IAAK,IAAIT,KAAWK,EAAkBf,SAClC,GAAIe,EAAkBf,SAASU,GAASI,KAAKK,GACzC,OAAO,EAInB,OAAO,GAEX,UCnCA,IAAIC,EAAuBC,mBAEvBC,EAAeD,iBAEfE,EAA6B,wBAC7BC,EAAwB,aACxBC,EAAwB,WAE5B,SAASC,EAAoBC,GACzB,IAAIvE,EAASuE,EAiCb,OA7BIvE,EADAuE,EAAWC,QAAQ,OAAS,EACnBxE,EAAOyE,QAAQ,KAAM,QAErBzE,EAAOyE,QAAQ,IAAK,MAK7BF,EAAWC,QAAQ,OAAS,EAC5BxE,EAASA,EAAOyE,QAAQ,KAAM,MACvBF,EAAWC,QAAQ,OAAS,EACnCxE,EAASA,EAAOyE,QAAQ,KAAM,QACvBF,EAAWC,QAAQ,MAAQ,EAClCxE,EAASA,EAAOyE,QAAQ,IAAK,KACtBF,EAAWC,QAAQ,MAAQ,IAClCxE,EAASA,EAAOyE,QAAQ,IAAK,QAK7BF,EAAWC,QAAQ,OAAS,EAC5BxE,EAASA,EAAOyE,QAAQ,KAAM,MACvBF,EAAWC,QAAQ,OAAS,EACnCxE,EAASA,EAAOyE,QAAQ,KAAM,QACvBF,EAAWC,QAAQ,MAAQ,EAClCxE,EAASA,EAAOyE,QAAQ,IAAK,KACtBF,EAAWC,QAAQ,MAAQ,IAClCxE,EAASA,EAAOyE,QAAQ,IAAK,QAG1BzE,EAGX,SAAS0E,EAA4BH,GACjC,OAAOA,EAAWjC,cAGtB,SAASqC,EAAoBC,GACzB,OAAOA,EAAWC,cAAcJ,QAAQ,KAAM,KAGlD,SAASK,EAA4BF,GACjC,OAAOA,EAAWH,QAAQ,MAAO,KAGrC,SAASM,EAAyBR,EAAYK,EAAYI,GAItD,OAHkBV,EAAoBC,IAGH,MAAbS,EAAoBA,EAAY,KAFpCL,EAAoBC,GAsC1C,SAASK,EAAmBzC,GACxB,OAAO0C,IAAO1C,EAAO8B,EAAoBN,EAAqBO,aAAa,GAG/E,SAASY,EAAwB3C,GAC7B,OAAO0C,IAAO1C,EAAOuC,EACjBf,EAAqBO,WACrBP,EAAqBY,WACrBZ,EAAqBoB,qBAAqB,GAWlD,SAASC,EAAO7C,GACZ,OAAQD,WAASC,IAAU0C,IAAO1C,GAAOa,WACjCd,aAAWC,IAAoB,KAAVA,GAAgByC,EAAmBzC,GAAOa,UAG3E,SAASiC,EAAY9C,GACjB,OAAQD,WAASC,IAAU0C,IAAO1C,GAAOa,WACjCd,aAAWC,IAAoB,KAAVA,GAAgB2C,EAAwB3C,GAAOa,UA6BhF,SAASkC,EAAeC,EAASC,GAC7B,OAAID,EAAQE,SAASD,IACT,EACDD,EAAQG,QAAQF,GAChB,EAEA,EAwBf,SAASG,EAAiCC,GACtC,OAAOC,EAAQD,EAA0Bd,EACrCf,EAAqBO,WACrBP,EAAqBY,WACrBZ,EAAqBoB,oBAAqBjB,GAUlD,SAAS4B,EAAuBC,GAC5B,OAAOF,EAAQE,EAAqB1B,EAAoBN,EAAqBO,YAAaH,GAe9F,SAAS0B,EAAQtD,EAAOyD,EAAaC,GACjC,GAAIpE,YAAqBU,GAErB,OAAOA,EAEX,IAAI2D,EAAcjB,IAAO1C,EAAOyD,GAAa,GAC7C,OAAIE,EAAY9C,UAEL8C,EAAYC,OAAOF,GAGnB1D,EA4Gf,SACI6D,eAhOJ,SAAwB7D,GACpB,OAAOV,YAAqBU,IAgO5B8D,oBA7NJ,SAA6B9D,GACzB,OAAOmB,UAA0BnB,IA6NjC6C,OAAQA,EACRC,YAAaA,EACbiB,mBAlNJ,SAA4B/D,GACxB,OAAO0C,IAAO1C,EAAO2B,GAA4B,GAAMd,WAkNvDmD,aA/MJ,SAAsBC,EAAQC,GAC1B,GAAKrB,EAAOoB,IAAYpB,EAAOqB,GAO/B,OAAOnB,EAHOhD,WAASkE,GAAUvB,IAAOuB,GAAUxB,EAAmBwB,GACvDlE,WAASmE,GAAUxB,IAAOwB,GAAUzB,EAAmByB,KA0MrEC,kBArMJ,SAA2BF,EAAQC,GAC/B,GAAKpB,EAAYmB,IAAYnB,EAAYoB,GAOzC,OAAOnB,EAHOhD,WAASkE,GAAUvB,IAAOuB,GAAUtB,EAAwBsB,GAC5DlE,WAASmE,GAAUxB,IAAOwB,GAAUvB,EAAwBuB,KAgM1EE,oBAhHJ,SAA6BC,GACzB,OAAO3B,IAAO2B,EAAezC,GAAuB,IAgHpD0C,oBA9GJ,SAA6BC,GACzB,OAAOA,EAAWX,OAAOhC,IA8GzB4C,sBA5GJ,SAA+BD,GAC3B,OAAOA,EAAWX,OAAO9B,EAAoBN,EAAqBO,cA4GlE0C,6BApLJ,SAAsCzE,GAClC,IAAIuE,EAAa7B,IAAO1C,GAExB,GAAID,WAASC,IAAUuE,EAAW1D,UAC9B,OAAO0D,EAAWX,OAAOjC,IAiL7B+C,6BA3KJ,SAAsC1E,GAClC,IAAIuE,EAAa7B,IAAO1C,EAAO2B,GAA4B,GAE3D,GAAI4C,EAAW1D,UACX,OAAO0D,EAAWI,UAwKtBvB,iCAAkCA,EAClCwB,iCA5JJ,SAA0CC,GACtC,OAAOvB,EAAQuB,EAAoBlD,EAA4BY,EAC3Df,EAAqBO,WACrBP,EAAqBY,WACrBZ,EAAqBoB,sBAyJzBW,uBAAwBA,EACxBuB,uBAnJJ,SAAgCT,GAC5B,OAAOf,EAAQe,EAAezC,EAAuBE,EAAoBN,EAAqBO,cAmJ9FgD,uBAhJJ,SAAgCC,GAC5B,OAAO1B,EAAQ0B,EAAqB7C,EAAoBX,EAAqBY,YAAaP,IAgJ1FoD,uBA7IJ,SAAgCC,GAC5B,OAAO5B,EAAQ4B,EAAerD,EAAuBM,EAAoBX,EAAqBY,cA6I9F+C,qCA9RJ,SAA8CC,EAA6BC,EAAmBC,GAC1FA,OAA+B,IAAbA,GAA2BA,EAC7CD,EAAoBA,GAAqB,IAEzC,IAAIE,EAAgBH,EAA4BI,MAAMH,GAClDtD,EAAawD,EAAc,GAC3BnD,EAAamD,EAAcvE,OAAS,EAAIuE,EAAc,GAAK,KAE3DE,EAAgBH,EAAWpD,EAA8BJ,EACzD4D,EAAgBJ,EAAWhD,EAA8BH,GAExDJ,EAAWC,QAAQ,MAAQ,GAAOD,EAAWC,QAAQ,MAAQ,GAAMD,EAAWC,QAAQ,MAAQ,KAC/FI,EAAaL,EACbA,EAAa,MAGjB,IAAIvE,EAAS,GAcb,OAZIuE,IACAvE,GAAUiI,EAAc1D,IAGxBK,IACI5E,IACAA,GAAU6H,GAGd7H,GAAUkI,EAActD,IAGrB5E,GAiQPmI,iCAlHJ,SAA0C3F,EAAO4F,GAS7C,OANIA,EACalD,OAAU1C,EAAO4F,GAAUC,GAAGnE,GAE9BgB,QAAW1C,GAAO6F,GAAGnE,IAGpBkC,OAAO9B,EAAoBN,EAAqBO,cA0GlE+D,iCAxEJ,SAA0C9F,EAAO4F,GAC7C5F,EAAQuD,EAAuBvD,GAE/B,IAAIuE,EAAa7B,OAAU1C,EAAO0B,GAQlC,OALI6C,EADAqB,EACarB,EAAWsB,GAAGD,GAEdrB,EAAWwB,OAGVnC,OAAOhC,IA8DzBoE,iCAxGJ,SAA0ChG,EAAO4F,GAC7C,IAAIK,EAAWvD,aAAgB1C,GAE3BkG,EAAYxD,UAUhB,OARIkD,GACAM,EAAUL,GAAGD,GAGjBM,EAAUC,MAAMF,EAASE,SACzBD,EAAUE,QAAQH,EAASG,WAC3BF,EAAUG,QAAQJ,EAASI,WAEpBH,EAAUL,GAAGnE,GAAckC,OAAOzB,EAAoBX,EAAqBY,cA4FlFkE,iCA5DJ,SAA0CtG,EAAO4F,GAC7C,IAAIK,EAAWvD,aAAgB1C,GAI3BuG,EAFY7D,UAEemD,GAAGnE,GAelC,OAbA6E,EAAeJ,MAAMF,EAASE,SAC9BI,EAAeH,QAAQH,EAASG,WAChCG,EAAeF,QAAQJ,EAASI,YAI5BT,EACaW,EAAeV,GAAGD,GAElBW,EAAeR,OAIdnC,OAAO/B,IAyCzB2E,2CA1FJ,SAAoDxG,EAAO4F,GASvD,OANIA,EACkBlD,OAAU1C,EAAO4F,GAAUC,GAAGnE,GAE9BgB,QAAW1C,GAAO6F,GAAGnE,IAGpBkC,OAAOrB,EAC1Bf,EAAqBO,WACrBP,EAAqBY,WACrBZ,EAAqBoB,sBA+EzB6D,2CAvCJ,SAAoDzG,EAAO4F,GACvD5F,EAAQoD,EAAiCpD,GAEzC,IAAI0G,EAAkBhE,OAAU1C,EAAO0B,GAQvC,OALIgF,EADAd,EACkBc,EAAgBb,GAAGD,GAEnBc,EAAgBX,OAGfnC,OAAOjC","file":"_chunks/chunk.936.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\n\nimport 'jquery-ui/ui/widgets/datepicker';\n\nvar _jasperPrefix = \"jr\";\nvar _jasperPopupClass = \"jr-jDatepickerPopupContainer\";\n\nvar datepickerId = $.datepicker.dpDiv.attr(\"id\"),\n    _mainDivId = _jasperPrefix + \"-\" + datepickerId;\n\n$.datepicker._mainDivId = _mainDivId;\n\n$.datepicker.dpDiv.attr(\"id\", _mainDivId);\n\n$.datepicker.dpDiv.removeClass();\n\nvar dpDivClass = _jasperPopupClass\n    + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all '\n    + _jasperPrefix;\n\n$.datepicker.dpDiv.addClass(dpDivClass);\n\nvar originalNewInst = $.datepicker._newInst;\n\n$.datepicker._newInst = function() {\n    var result = originalNewInst.apply($.datepicker, arguments);\n\n    result.dpDiv.removeClass(_jasperPrefix);\n    result.dpDiv.addClass(_jasperPrefix);\n\n    return result;\n};\n\nvar originalGoToToday = $.datepicker._gotoToday;\n\n$.datepicker._gotoToday = function(id) {\n    originalGoToToday.call(this, id);\n    this._selectDate(id);\n};\n\nexport default $;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\n\nimport './jQueryDatepickerExtension';\nimport './jQueryUiSliderAccessExtension';\nimport 'jqueryui-timepicker-addon/dist/jquery-ui-timepicker-addon';\n\nvar originalNewInst = $.timepicker._newInst;\n\n$.timepicker._newInst = function($input, opts) {\n    if (!opts.onChangeMonthYear) {\n        opts.onChangeMonthYear = function(year, month, datepicker, timepicker) {\n            datepicker.currentYear = datepicker.selectedYear;\n            datepicker.currentMonth = datepicker.selectedMonth;\n            datepicker.currentDay = datepicker.selectedDay;\n\n            timepicker._updateDateTime(datepicker);\n        };\n    }\n\n    var instance = originalNewInst.call($.timepicker, $input, opts);\n\n    var originalOnTimeChange = instance._onTimeChange;\n\n    instance._onTimeChange = function() {\n        this.$timeObj[0].setSelectionRange = null;\n\n        return originalOnTimeChange.apply(this, arguments);\n    };\n\n    return instance;\n};\n\nexport default $;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nvar RelativeDate = function (keyword, sign, number) {\n    this.setKeyword(keyword);\n    this.setSign(sign);\n    this.setNumber(number);\n};\nRelativeDate.prototype.setKeyword = function (keyword) {\n    this.keyword = keyword.toUpperCase();\n};\nRelativeDate.prototype.setSign = function (sign) {\n    this.sign = sign;\n};\nRelativeDate.prototype.setNumber = function (number) {\n    if (_.isNumber(number)) {\n        this.number = number;\n    } else {\n        var value = parseInt(number, 10);\n        if (!isNaN(value)) {\n            this.number = value;\n        } else {\n            this.number = 0;\n        }\n    }\n};\nRelativeDate.prototype.toString = function () {\n    if (_.isNumber(this.number) && !isNaN(this.number) && this.number > 0 && (this.sign === '+' || this.sign === '-') && this.keyword in RelativeDate.PATTERNS) {\n        return this.keyword + this.sign + this.number.toString();\n    } else if (this.keyword in RelativeDate.PATTERNS) {\n        return this.keyword;\n    } else {\n        return '';\n    }\n};\nRelativeDate.PATTERNS = {\n    DAY: /^(DAY)(([+|\\-])(\\d{1,9}))?$/i,\n    WEEK: /^(WEEK)(([+|\\-])(\\d{1,9}))?$/i,\n    MONTH: /^(MONTH)(([+|\\-])(\\d{1,9}))?$/i,\n    QUARTER: /^(QUARTER)(([+|\\-])(\\d{1,9}))?$/i,\n    SEMI: /^(SEMI)(([+|\\-])(\\d{1,9}))?$/i,\n    YEAR: /^(YEAR)(([+|\\-])(\\d{1,9}))?$/i\n};\nRelativeDate.parse = function (relativeDateString) {\n    if (RelativeDate.isValid(relativeDateString)) {\n        for (var pattern in RelativeDate.PATTERNS) {\n            var result = RelativeDate.PATTERNS[pattern].exec(relativeDateString);\n            if (result !== null && _.isArray(result) && result.length === 5) {\n                return new RelativeDate(result[1], result[3], result[4]);\n            }\n        }\n    }\n    return undefined;\n};\nRelativeDate.isValid = function (relativeDate) {\n    if (relativeDate instanceof RelativeDate) {\n        return relativeDate.toString() !== '';\n    } else if (_.isString(relativeDate)) {\n        for (var pattern in RelativeDate.PATTERNS) {\n            if (RelativeDate.PATTERNS[pattern].test(relativeDate)) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\nexport default RelativeDate;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport RelativeDate from './RelativeDate';\nimport _ from 'underscore';\nvar RelativeTimestamp = function () {\n    RelativeDate.apply(this, arguments);\n};\nvar F = function () {\n};\nF.prototype = RelativeDate.prototype;\nRelativeTimestamp.prototype = new F();\nRelativeTimestamp.prototype.constructor = RelativeTimestamp;\nRelativeTimestamp.PATTERNS = {\n    DAY: /^(DAY)(([+|\\-])(\\d{1,9}))?$/i,\n    WEEK: /^(WEEK)(([+|\\-])(\\d{1,9}))?$/i,\n    MONTH: /^(MONTH)(([+|\\-])(\\d{1,9}))?$/i,\n    QUARTER: /^(QUARTER)(([+|\\-])(\\d{1,9}))?$/i,\n    SEMI: /^(SEMI)(([+|\\-])(\\d{1,9}))?$/i,\n    YEAR: /^(YEAR)(([+|\\-])(\\d{1,9}))?$/i\n};\nRelativeTimestamp.parse = function (relativeTimestampString) {\n    if (RelativeTimestamp.isValid(relativeTimestampString)) {\n        for (var pattern in RelativeTimestamp.PATTERNS) {\n            var result = RelativeTimestamp.PATTERNS[pattern].exec(relativeTimestampString);\n            if (result !== null && _.isArray(result) && result.length === 5) {\n                return new RelativeTimestamp(result[1], result[3], result[4]);\n            }\n        }\n    }\n    return undefined;\n};\nRelativeTimestamp.isValid = function (relativeTimestamp) {\n    if (relativeTimestamp instanceof RelativeTimestamp) {\n        return relativeTimestamp.toString() !== '';\n    } else if (_.isString(relativeTimestamp)) {\n        for (var pattern in RelativeTimestamp.PATTERNS) {\n            if (RelativeTimestamp.PATTERNS[pattern].test(relativeTimestamp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\nexport default RelativeTimestamp;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport moment from 'moment';\nimport jrsConfigs from \"../../../jrs.configs\";\nimport _ from 'underscore';\nimport RelativeDate from '../datetime/RelativeDate';\nimport RelativeTimestamp from '../datetime/RelativeTimestamp';\n\nlet localeSettingsObject = jrsConfigs.localeSettings;\n\nvar userTimezone = jrsConfigs.userTimezone;\n\nvar ISO_8601_TIMESTAMP_PATTERN = \"YYYY-MM-DD[T]HH:mm:ss\",\n    ISO_8601_DATE_PATTERN = \"YYYY-MM-DD\",\n    ISO_8601_TIME_PATTERN = \"HH:mm:ss\";\n\nfunction toMomentDatePattern(dateFormat) {\n    var result = dateFormat;\n\n    //convert year part of the format\n    if (dateFormat.indexOf(\"yy\") > -1) {\n        result = result.replace(\"yy\", \"YYYY\"); // four digit year: 2015\n    } else {\n        result = result.replace(\"y\", \"YY\"); // two digit year: 15\n    }\n\n\n    //convert month part of the format\n    if (dateFormat.indexOf(\"mm\") > -1) {\n        result = result.replace(\"mm\", \"MM\"); // two digit month with leading zero: 02\n    } else if (dateFormat.indexOf(\"MM\") > -1) {\n        result = result.replace(\"MM\", \"MMMM\"); // Long month name: February\n    } else if (dateFormat.indexOf(\"m\") > -1) {\n        result = result.replace(\"m\", \"M\"); // two digit month withoud leading zero: 2\n    } else if (dateFormat.indexOf(\"M\") > -1) {\n        result = result.replace(\"M\", \"MMM\"); // Short month name: Feb\n    }\n\n\n    //convert day part of the format\n    if (dateFormat.indexOf(\"dd\") > -1) {\n        result = result.replace(\"dd\", \"DD\"); // day of month (two digit): 02\n    } else if (dateFormat.indexOf(\"DD\") > -1) {\n        result = result.replace(\"DD\", \"dddd\"); // week day name long: Monday\n    } else if (dateFormat.indexOf(\"d\") > -1) {\n        result = result.replace(\"d\", \"D\"); // day of month (two digit) without leading zero: 2\n    } else if (dateFormat.indexOf(\"D\") > -1) {\n        result = result.replace(\"D\", \"ddd\"); // week day short day name: Mon\n    }\n\n    return result;\n}\n\nfunction fromJavaToMomentDatePattern(dateFormat) {\n    return dateFormat.toUpperCase();\n}\n\nfunction toMomentTimePattern(timeFormat) {\n    return timeFormat.toLowerCase().replace(/h/g, \"H\");\n}\n\nfunction fromJavaToMomentTimePattern(timeFormat) {\n    return timeFormat.replace(\"aaa\", \"a\");\n}\n\nfunction toMomentTimestampPattern(dateFormat, timeFormat, separator) {\n    var datePattern = toMomentDatePattern(dateFormat),\n        timePattern = toMomentTimePattern(timeFormat);\n\n    return datePattern + (separator != null ? separator : \" \") + timePattern;\n}\n\nfunction toMomentDateOrTimeOrTimestampPattern(dateOrTimeOrTimestampFormat, dateTimeSeparator, fromJava) {\n    fromJava = typeof fromJava !== \"undefined\" ? fromJava : false;\n    dateTimeSeparator = dateTimeSeparator || \" \";\n\n    var formatAsArray = dateOrTimeOrTimestampFormat.split(dateTimeSeparator);\n    var dateFormat = formatAsArray[0];\n    var timeFormat = formatAsArray.length > 1 ? formatAsArray[1] : null;\n\n    var toDatePattern = fromJava ? fromJavaToMomentDatePattern : toMomentDatePattern;\n    var toTimePattern = fromJava ? fromJavaToMomentTimePattern : toMomentTimePattern;\n\n    if ((dateFormat.indexOf('h') >= 0) || (dateFormat.indexOf('H') >= 0) || dateFormat.indexOf(\"s\") >= 0) {\n        timeFormat = dateFormat;\n        dateFormat = null;\n    }\n\n    var result = \"\";\n\n    if (dateFormat) {\n        result += toDatePattern(dateFormat);\n    }\n\n    if (timeFormat) {\n        if (result) {\n            result += dateTimeSeparator;\n        }\n\n        result += toTimePattern(timeFormat);\n    }\n\n    return result;\n}\n\nfunction dateStringToMoment(value) {\n    return moment(value, toMomentDatePattern(localeSettingsObject.dateFormat), true);\n}\n\nfunction timestampStringToMoment(value) {\n    return moment(value, toMomentTimestampPattern(\n        localeSettingsObject.dateFormat,\n        localeSettingsObject.timeFormat,\n        localeSettingsObject.timestampSeparator), true);\n}\n\nfunction isRelativeDate(value) {\n    return RelativeDate.isValid(value);\n}\n\nfunction isRelativeTimestamp(value) {\n    return RelativeTimestamp.isValid(value);\n}\n\nfunction isDate(value) {\n    return (_.isDate(value) && moment(value).isValid())\n        || (_.isString(value) && value !== \"\" && dateStringToMoment(value).isValid());\n}\n\nfunction isTimestamp(value) {\n    return (_.isDate(value) && moment(value).isValid())\n        || (_.isString(value) && value !== \"\" && timestampStringToMoment(value).isValid());\n}\n\nfunction isIso8601Timestamp(value) {\n    return moment(value, ISO_8601_TIMESTAMP_PATTERN, true).isValid();\n}\n\nfunction compareDates(value1, value2) {\n    if (!isDate(value1) || !isDate(value2)) {\n        return;\n    }\n\n    var moment1 = _.isDate(value1) ? moment(value1) : dateStringToMoment(value1),\n        moment2 = _.isDate(value2) ? moment(value2) : dateStringToMoment(value2);\n\n    return compareMoments(moment1, moment2);\n}\n\nfunction compareTimestamps(value1, value2) {\n    if (!isTimestamp(value1) || !isTimestamp(value2)) {\n        return;\n    }\n\n    var moment1 = _.isDate(value1) ? moment(value1) : timestampStringToMoment(value1),\n        moment2 = _.isDate(value2) ? moment(value2) : timestampStringToMoment(value2);\n\n    return compareMoments(moment1, moment2);\n}\n\nfunction compareMoments(moment1, moment2) {\n    if (moment1.isBefore(moment2)) {\n        return -1;\n    } else if (moment1.isAfter(moment2)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nfunction dateObjectToIso8601Timestamp(value) {\n    var momentDate = moment(value);\n\n    if (_.isDate(value) && momentDate.isValid()) {\n        return momentDate.format(ISO_8601_TIMESTAMP_PATTERN);\n    }\n\n    return undefined;\n}\n\nfunction iso8601TimestampToDateObject(value) {\n    var momentDate = moment(value, ISO_8601_TIMESTAMP_PATTERN, true);\n\n    if (momentDate.isValid()) {\n        return momentDate.toDate();\n    }\n\n    return undefined;\n}\n\nfunction localizedTimestampToIsoTimestamp(localizedTimestampString){\n    return convert(localizedTimestampString, toMomentTimestampPattern(\n        localeSettingsObject.dateFormat,\n        localeSettingsObject.timeFormat,\n        localeSettingsObject.timestampSeparator), ISO_8601_TIMESTAMP_PATTERN);\n}\n\nfunction isoTimestampToLocalizedTimestamp(isoTimestampString){\n    return convert(isoTimestampString, ISO_8601_TIMESTAMP_PATTERN, toMomentTimestampPattern(\n        localeSettingsObject.dateFormat,\n        localeSettingsObject.timeFormat,\n        localeSettingsObject.timestampSeparator));\n}\n\nfunction localizedDateToIsoDate(localizedDateString){\n    return convert(localizedDateString, toMomentDatePattern(localeSettingsObject.dateFormat), ISO_8601_DATE_PATTERN);\n}\n\nfunction isoDateToLocalizedDate(isoDateString){\n    return convert(isoDateString, ISO_8601_DATE_PATTERN, toMomentDatePattern(localeSettingsObject.dateFormat));\n}\n\nfunction localizedTimeToIsoTime(localizedTimeString){\n    return convert(localizedTimeString, toMomentTimePattern(localeSettingsObject.timeFormat), ISO_8601_TIME_PATTERN);\n}\n\nfunction isoTimeToLocalizedTime(isoTimeString){\n    return convert(isoTimeString, ISO_8601_TIME_PATTERN, toMomentTimePattern(localeSettingsObject.timeFormat));\n}\n\nfunction convert(value, fromPattern, toPattern) {\n    if (RelativeDate.isValid(value)) {\n        // return original value if it's relative date\n        return value;\n    }\n    var momentValue = moment(value, fromPattern, true);\n    if (momentValue.isValid()) {\n        // return formatted value if valid date\n        return momentValue.format(toPattern);\n    } else {\n        // return original value if invalid\n        return value;\n    }\n}\n\nfunction iso8601DateToMoment(isoDateString) {\n    return moment(isoDateString, ISO_8601_DATE_PATTERN, true);\n}\nfunction momentToIso8601Date(momentDate) {\n    return momentDate.format(ISO_8601_DATE_PATTERN);\n}\nfunction momentToLocalizedDate(momentDate) {\n    return momentDate.format(toMomentDatePattern(localeSettingsObject.dateFormat));\n}\n\nfunction isoDateToLocalizedDateByTimezone(value, timezone) {\n    var momentDate;\n\n    if (timezone) {\n        momentDate = moment.tz(value, timezone).tz(userTimezone);\n    } else {\n        momentDate = moment.utc(value).tz(userTimezone);\n    }\n\n    return momentDate.format(toMomentDatePattern(localeSettingsObject.dateFormat));\n}\n\nfunction isoTimeToLocalizedTimeByTimezone(value, timezone) {\n    var duration = moment.duration(value);\n\n    var utcMoment = moment.utc();\n\n    if (timezone) {\n        utcMoment.tz(timezone);\n    }\n\n    utcMoment.hours(duration.hours());\n    utcMoment.minutes(duration.minutes());\n    utcMoment.seconds(duration.seconds());\n\n    return utcMoment.tz(userTimezone).format(toMomentTimePattern(localeSettingsObject.timeFormat));\n}\n\nfunction isoTimestampToLocalizedTimestampByTimezone(value, timezone) {\n    var momentTimestamp;\n\n    if (timezone) {\n        momentTimestamp = moment.tz(value, timezone).tz(userTimezone);\n    } else {\n        momentTimestamp = moment.utc(value).tz(userTimezone);\n    }\n\n    return momentTimestamp.format(toMomentTimestampPattern(\n        localeSettingsObject.dateFormat,\n        localeSettingsObject.timeFormat,\n        localeSettingsObject.timestampSeparator));\n}\n\nfunction localizedDateToIsoDateByTimezone(value, timezone) {\n    value = localizedDateToIsoDate(value);\n\n    var momentDate = moment.tz(value, userTimezone);\n\n    if (timezone) {\n        momentDate = momentDate.tz(timezone);\n    } else {\n        momentDate = momentDate.utc();\n    }\n\n    return momentDate.format(ISO_8601_DATE_PATTERN);\n}\n\nfunction localizedTimeToIsoTimeByTimezone(value, timezone) {\n    var duration = moment.duration(value);\n\n    var utcMoment = moment.utc();\n\n    var timezoneMoment = utcMoment.tz(userTimezone);\n\n    timezoneMoment.hours(duration.hours());\n    timezoneMoment.minutes(duration.minutes());\n    timezoneMoment.seconds(duration.seconds());\n\n    var momentTime;\n\n    if (timezone) {\n        momentTime = timezoneMoment.tz(timezone);\n    } else {\n        momentTime = timezoneMoment.utc();\n    }\n\n\n    return momentTime.format(ISO_8601_TIME_PATTERN);\n}\n\nfunction localizedTimestampToIsoTimestampByTimezone(value, timezone) {\n    value = localizedTimestampToIsoTimestamp(value);\n\n    var momentTimestamp = moment.tz(value, userTimezone);\n\n    if (timezone) {\n        momentTimestamp = momentTimestamp.tz(timezone);\n    } else {\n        momentTimestamp = momentTimestamp.utc();\n    }\n\n    return momentTimestamp.format(ISO_8601_TIMESTAMP_PATTERN);\n}\n\nexport default {\n    isRelativeDate: isRelativeDate,\n    isRelativeTimestamp: isRelativeTimestamp,\n    isDate: isDate,\n    isTimestamp: isTimestamp,\n    isIso8601Timestamp: isIso8601Timestamp,\n    compareDates: compareDates,\n    compareTimestamps: compareTimestamps,\n    iso8601DateToMoment: iso8601DateToMoment,\n    momentToIso8601Date: momentToIso8601Date,\n    momentToLocalizedDate: momentToLocalizedDate,\n    dateObjectToIso8601Timestamp: dateObjectToIso8601Timestamp,\n    iso8601TimestampToDateObject: iso8601TimestampToDateObject,\n    localizedTimestampToIsoTimestamp: localizedTimestampToIsoTimestamp,\n    isoTimestampToLocalizedTimestamp: isoTimestampToLocalizedTimestamp,\n    localizedDateToIsoDate: localizedDateToIsoDate,\n    isoDateToLocalizedDate: isoDateToLocalizedDate,\n    localizedTimeToIsoTime: localizedTimeToIsoTime,\n    isoTimeToLocalizedTime: isoTimeToLocalizedTime,\n    toMomentDateOrTimeOrTimestampPattern: toMomentDateOrTimeOrTimestampPattern,\n    isoDateToLocalizedDateByTimezone: isoDateToLocalizedDateByTimezone,\n    localizedDateToIsoDateByTimezone: localizedDateToIsoDateByTimezone,\n    isoTimeToLocalizedTimeByTimezone: isoTimeToLocalizedTimeByTimezone,\n    localizedTimeToIsoTimeByTimezone: localizedTimeToIsoTimeByTimezone,\n    isoTimestampToLocalizedTimestampByTimezone: isoTimestampToLocalizedTimestampByTimezone,\n    localizedTimestampToIsoTimestampByTimezone: localizedTimestampToIsoTimestampByTimezone\n}"],"sourceRoot":""}