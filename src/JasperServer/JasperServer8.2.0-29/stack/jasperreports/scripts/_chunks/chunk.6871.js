(self.webpackChunkjrs_ui=self.webpackChunkjrs_ui||[]).push([[6871],{76431:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var a=n(91292),s=n(71914);const i=function(){var e=s.Z.userLocale.replace(/_/g,"-"),t=(0,a.Z)();return Object.assign({},t,{headers:Object.assign({},t.headers,{"Accept-Language":e})})}},11129:(e,t,n)=>{"use strict";n.d(t,{m0:()=>l,Po:()=>c,mr:()=>d});var a=n(52687),s=n(94277),i=n(72157),r=n.n(i);function o(e,t){(e&&e.indexOf("sessionAttributeMissingException"))>-1?a.Z.clusterErrorPopup.show(e):a.Z.errorPopup.show(e,!1,t)}function l(e){if(500==e.status)return o(e.responseText),!0;if(e.getResponseHeader("LoginRequested")){return document.location=".",!0}if(e.getResponseHeader("JasperServerError")){if(!e.getResponseHeader("SuppressError"))if(1==r()(".dashboardViewFrame").length)r()(document.body).html(e.responseText),r()("#"+s.hl.fid,window.parent.document).removeClass("hidden").show();else o(e.responseText);return!0}return!1}function c(){}function d(){}},10165:(e,t,n)=>{"use strict";n.d(t,{Z:()=>mt});var a=n(15892),s=n.n(a),i=n(97836),r=n.n(i),o=n(72157),l=n.n(o),c=n(29562);let d;"all"!==c.t?(c.h.all=c.h.all||{},d=c.h.all):d=Object.keys(c.h).reduce(((e,t)=>({...e,...c.h[t]})),{});const u=d;var p=n(47269),h=n(71914),m=n(236),v=n(52687);const f=p.Z.extend({defaults:(g={},r().extend(g,p.Z.prototype.defaults,{connectionType:void 0}),g),validation:{},initialize:function(e,t){t=r().defaults(t||{},{contextPath:h.Z.contextPath}),this.options=t,this.isNew()&&t.parentFolderUri&&this.set("parentFolderUri",t.parentFolderUri,{silent:!0});var n=t.parentFolderUri?t.parentFolderUri:e.parentFolderUri;e.name&&n&&!e.uri&&!0===t.isEditMode&&this.set("uri",p.Z.constructUri(n,e.name),{silent:!0}),p.Z.prototype.initialize.call(this,e,t)},testConnection:function(){if(this.validate(),this._isValid){var e=l().Deferred(),t=l()("#"+m.hj.LOADING_ID)[0],n=!1,a=window.setTimeout((function(){n=!0,v.Z.popup.show(t,!0)}),m.w8.prototype.MAX_WAIT_TIME),i=this.toJSON();return s().ajax({type:"POST",url:h.Z.contextPath+"/rest_v2/connections",contentType:i.connectionType,headers:{Accept:"application/json"},data:JSON.stringify(i)}).always((function(){window.clearTimeout(a),n&&v.Z.popup.hide(t)})).done(e.resolve).fail(e.reject),e.promise()}}});var g,b=n(11364);const S={supportsTouch:"ontouchstart"in window||navigator.msMaxTouchPoints},D=function(e){window.location.href=e};var y=n(64155);const w=function(e){-1===document.referrer.indexOf("login.html")&&new y.NXu(e,encodeURIComponent(document.referrer))},T=function(e,t){var n=encodeURIComponent(document.location.href),a=new y.NXu(e).value;if(a&&a!==n){var s=decodeURIComponent(a);if(s)return void D(s)}t=t||"/",D(h.Z.contextPath+t)};var C=n(88317),A=n(24777);A.Z.userTimeZones=A.Z.userTimeZones||{};const x=A.Z.userTimeZones;var _,E,N=n(59772);const j=s().View.extend({PAGE_TITLE_NEW_MESSAGE_CODE:void 0,PAGE_TITLE_EDIT_MESSAGE_CODE:void 0,modelConstructor:f,events:{"keyup input[type='text'], input[type='password'], textarea, select":"updateModelProperty","change input[type='text'], input[type='password'], input[type='radio'], input[type='checkbox'], textarea, select":"updateModelProperty","click #testDataSource":"testConnection","click [name=testConnectionMessageDetails]":"showTestConnectionMessageDetails"},initialize:function(e){this.options=e,this.isEditMode=e.isEditMode,this.timezones=e.timezones?e.timezones:x;var t={};if(e.dataSource&&(t=r().extend(t,e.dataSource)),this.model=new this.modelConstructor(t,e),N.Z.bind(this,{valid:this.fieldIsValid,invalid:this.fieldIsInvalid,forceUpdate:!0,selector:"name"}),this.model.initialization){var n=this;this.model.initialization.done((function(){n.render.apply(n)}))}else this.render();this.setPageTitle()},testConnection:function(){if(!0!==_){var e,t,n=this.model.testConnection(),a=this;n&&(_=!0,(t=a.$el.find("#testDataSource")).addClass("disabled"),(e=this.$el.find("[name=testConnectionMessage]")).removeClass("warning success").addClass("hidden"),e.parent().addClass("error"),e.find("a").addClass("hidden"),n.done((function(){e.addClass("success").find("span").text(C.Z["resource.dataSource.connectionState.passed"])})).fail((function(t){var n=a.getTestConnectionErrorMessage(t);e.addClass("warning").find("span").text(n.text),n.details&&(e.find("a").removeClass("hidden"),E=n.details)})).always((function(){_=!1,e.removeClass("hidden"),t.removeClass("disabled")})))}},showTestConnectionMessageDetails:function(){v.Z.errorPopup.show(E)},getTestConnectionErrorMessage:function(e){var t=!1,n=C.Z["resource.dataSource.connectionState.failed"],a=!1;try{t=JSON.parse(e.responseText)}catch(t){a=e.responseText}return t&&(t.parameters&&t.parameters[2]&&(n=t.parameters[2]),t.parameters&&t.parameters[3]&&(a=t.parameters[3])),{text:n,details:a}},updateModelProperty:function(e){var t=l()(e.target),n={},a=t.attr("name"),s="checkbox"===t.attr("type")?t.is(":checked"):l().trim(t.val());if(n[a]=s,this.model.set(n),!this.isEditMode)if("name"===a)s!==p.Z.generateResourceName(this.model.get("label"))&&(this._idUpdatedManually=!0);else if("label"===a&&!this._idUpdatedManually){var i=p.Z.generateResourceName(s);this.model.set("name",i),this.$("input[name='name']").val(i)}this.model.validate(n)},render:function(){return this.$el.empty(),this},renderTimezoneSection:function(){this.$el.append(r().template('<fieldset class="group shortFields">\n\n    <js-templateNonce></js-templateNonce>\n    <label title="{{- i18n[\'resource.analysisConnection.timeZone\'] }}" class="control select">\n        <span class="wrap">{{- i18n["resource.dataSource.timezone"] }}</span>\n        <select class="fnormal timeZone" name="timezone">\n            <option {{ if (modelAttributes.timezone === "") { }}selected="selected"{{ } }} value="">{{- i18n["jsp.jdbcPropsForm.timezone.default.option"] }}</option>\n            {{ _.each(timezones, function(timezone) { }}\n            <option value="{{- timezone.code }}" {{ if (timezone.code === modelAttributes.timezone) { }}selected="selected"{{ } }}>\n                {{- i18n[\'timezone.option\'].replace(\'{0}\', timezone.code).replace(\'{1}\', timezone.description) }}\n            </option>\n            {{ }); }}\n        </select>\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n["resource.dataSource.hint3"] }}</span>\n    </label>\n</fieldset>',this.templateData()))},renderTestConnectionSection:function(){this.$el.append(r().template('<fieldset class="group">\n\n    <js-templateNonce></js-templateNonce>\n\n    <span id="testDataSource" class="button action up"><span class="wrap">{{- i18n[\'button.testConnection\']}}</span></span>\n    <div class="message warning" name="testConnectionMessage">\n        <span></span>\n        <a class="details" name="testConnectionMessageDetails" href="#">{{- i18n[\'button.details\']}}</a>\n    </div>\n\n</fieldset>\n\n<br/>',this.templateData()))},renderOrAddAnyBlock:function(e,t){if(r().isString(t)){try{t=l()(t)}catch(e){t=!1}if(!t)return!1}var n=t.first().attr("name");return!!n&&(e.find("[name="+n+"]").length>0?e.find("[name="+n+"]").empty().append(t.children()):e.append(t),!0)},templateData:function(){return{_:r(),i18n:C.Z,modelAttributes:r().clone(this.model.attributes),timezones:this.timezones,isEditMode:this.isEditMode}},setPageTitle:function(){var e,t=l()("#display .showingToolBar > .content > .header > .title");e=this.isEditMode?C.Z[this.PAGE_TITLE_EDIT_MESSAGE_CODE]+": "+this.model.get("label"):C.Z[this.PAGE_TITLE_NEW_MESSAGE_CODE],t.text(e)},fieldIsValid:function(e,t,n){var a=e.$("["+n+'="'+t+'"]').parent();a.removeClass("error"),a.find(".message.warning").text("")},fieldIsInvalid:function(e,t,n,a){if(!0!==n){var s=e.$("["+a+'="'+t+'"]').parent();s.addClass("error"),s.find(".message.warning").text(n)}},validField:function(e){var t=this.$(e).parent();t.removeClass("error"),t.find(".message.warning").text("")},invalidField:function(e,t){var n=this.$(e).parent();n.addClass("error"),n.find(".message.warning").text(t.toString())},remove:function(){return l()("div[id^='selectFromRepository1'], div[id^='selectFromRepository2']").remove(),N.Z.unbind(this),s().View.prototype.remove.call(this),this}});var I=n(76431);const L="application/repository.awsDataSource+json",U="application/repository.azureSqlDataSource+json",P="application/repository.beanDataSource+json",O="application/repository.jdbcDataSource+json",R="application/repository.jndiJdbcDataSource+json",M="application/repository.customDataSource+json";var B=n(35826);let F;"jasperserver_config"!==c.t?(c.h.jasperserver_config=c.h.jasperserver_config||{},F=c.h.jasperserver_config):F=Object.keys(c.h).reduce(((e,t)=>({...e,...c.h[t]})),{});const Z=F,k="{{- message }}\n\n{{\nvar errorLbl = (typeof errorLabel !== 'undefined' ? errorLabel : 'The reason is');\n}}\n\n{{ if (typeof message2 !== 'undefined') { }}\n<br/>{{- errorLbl }}: {{- message2 }}\n{{ } else if (errorCode) { }}\n<br/>{{- errorLbl }}: {{- errorCode }}\n{{ } else if (errorMsg) { }}\n<br/>{{- errorLbl }}: {{- errorMsg }}\n{{ } }}\n\n{{ var respTextLbl = (typeof respTextLabel  !== 'undefined' ? respTextLabel : 'The full response from the server is') }}\n<br/><br/>{{- respTextLbl }}: {{- respText }}";var z=f.extend({type:B.Z.CUSTOM_DATA_SOURCE,constructor:function(e,t){this.defaults=r().extend({},this.defaults,{dataSourceName:t.dataSourceType,connectionType:M}),f.prototype.constructor.apply(this,arguments)},initialize:function(e,t){var n=f.prototype.initialize.apply(this,arguments);return this.customFields=[],this.testable=!1,this.queryTypes=null,this.initialization=l().Deferred(),this.getCustomFieldsDefinition(),n},getCustomFieldsDefinition:function(){var e={};return r().extend(e,(0,I.Z)(),{Accept:"application/json"}),l().ajax({type:"GET",headers:e,url:h.Z.contextPath+"/rest_v2/customDataSources/"+this.get("dataSourceName")}).done(r().bind(this.getCustomFieldsDefinitionDone,this)).fail(r().bind(this.getCustomFieldsDefinitionFail,this))},getCustomFieldsDefinitionDone:function(e){var t=this;e&&e.propertyDefinitions&&r().isArray(e.propertyDefinitions)&&(this.resetValidation(),this.testable=!!e.testable,this.queryTypes=e.queryTypes?e.queryTypes:null,r().each(e.propertyDefinitions,(function(e){var n={};e.properties&&(e.properties=r()(e.properties).reduce((function(e,t){return e[t.key]=t.value,e}),{})),t.customFields.push(e),t.defaults[e.name]=e.defaultValue,t.options.isEditMode||t.set(e.name,e.defaultValue),"password"===e.name&&t.options.isEditMode&&!t.isNew()&&t.set("password",Z["input.password.substitution"]),e.properties&&e.properties.mandatory&&(n[e.name]={required:!0,msg:u[t.get("dataSourceName")+"."+e.name+".required"]||u["required.field.specify.value"]},r().extend(t.validation,n))}))),this.options.isEditMode||this.set(this.parse(this.attributes),{silent:!0}),this.initialization.resolve()},getCustomFieldsDefinitionFail:function(e){var t=!1;try{t=JSON.parse(e.responseText)}catch(e){}var n=r().template(k,{message:"Failed to load custom data source definition. ",errorCode:t&&t[0]?t[0].errorCode:null,errorMsg:t&&t.message,respText:e.responseText});v.Z.errorPopup.show(n)},parse:function(e){var t=f.prototype.parse.apply(this,arguments);return t=r().extend(t,this.parseProperties(e.properties)),delete e.properties,t},parseProperties:function(e){var t={};return r().isEmpty(e)||r().each(e,(function(e){t[e.key]="password"===e.key?Z["input.password.substitution"]:e.value})),t},toJSON:function(){var e=f.prototype.toJSON.apply(this,arguments);return this.customFieldsToJSON(e,this.customFields)},customFieldsToJSON:function(e,t){return r().isEmpty(t)||(e.properties=[],r().each(t,(function(t){var n=e[t.name],a="password"===t.name;r().isUndefined(n)||(!a||a&&n!==Z["input.password.substitution"])&&(e.properties.push({key:t.name,value:n}),delete e[t.name])}))),e},resetValidation:function(){this.validation=r().clone(z.prototype.validation)}});const V=z,q=j.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.custom.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.custom.page.title.edit",modelConstructor:V,customFieldsTemplate:'<fieldset name="customFieldsContainer" class="group shortFields">\n\n    <js-templateNonce></js-templateNonce>\n\n\t<legend class="offLeft"><span>{{- i18n[\'resource.dataSource.accessProp\']}}</span></legend>\n\n\t{{\n\n\tvar buildAttrs = function(attrs) {\n\t\treturn _.map(attrs, function(v, k){\n\t\t\tv = v.toString().replace(/"/g, "\\&quot\\;");\n\t\t\treturn k + \'="\' + _.xssHardEscape(v) + \'"\';\n\t\t}).join(" ");\n\t};\n\n\t_.each(customFields, function(field){\n\n\t\tvar\n\t\t\tattrs = {},\n\t\t\tlabel = i18n[field.label] || field.label;\n\n\t\tif (field.mandatory) {\n\t\t\tlabel = label + " (" + i18n["required.field"] + ")";\n\t\t}\n\t}}\n\n\t\t<label title="{{- label }}" class="control input text">\n\t\t\t<span class="wrap">{{- label }}:</span>\n\t\t\t{{\n\n\t\t\t\tvar properties = field.properties || {};\n                var value = modelAttributes[field.name] ? modelAttributes[field.name] : "";\n                if("password" === field.name && value !== ""){\n                    value = i18n[\'input.password.substitution\']\n                }\n\n\t\t\t\tif (properties.type === "boolean") {\n\t\t\t\t\tattrs.name = field.name;\n\t\t\t\t\tattrs.type = "checkbox";\n\t\t\t\t\tif (value == \'on\' || value == \'true\') {\n\t\t\t\t\t\tattrs.checked = "true";\n\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\t<input {{ print(buildAttrs(attrs)) }} />\n\t\t\t\t\t{{\n\t\t\t\t} else if (properties.displayHeight != null) {\n\t\t\t\t\tattrs.name = field.name;\n\t\t\t\t\tattrs.rows = properties.displayHeight;\n\t\t\t\t\tattrs.cols = properties.displayWidth != null ? properties.displayWidth : 40;\n\t\t\t\t\tattrs["class"] = "fnormal";\n\t\t\t\t\t}}\n\t\t\t\t\t<textarea {{ print(buildAttrs(attrs)) }} >{{- value }}</textarea>\n\t\t\t\t\t{{\n\t\t\t\t} else {\n\t\t\t\t\tattrs.name = field.name;\n\t\t\t\t\tattrs.type = field.name === "password" ? "password" : "text";\n\t\t\t\t\tattrs.size = properties.displayWidth != null ? properties.displayWidth : 40;\n\t\t\t\t\tattrs["class"] = "fnormal";\n\t\t\t\t\tattrs.value = value;\n\t\t\t\t\t}}\n\t\t\t\t\t<input {{ print(buildAttrs(attrs)) }} />\n\t\t\t\t\t{{\n\t\t\t\t} }}\n\n\t\t\t<span class="message hint"></span>\n\t\t\t<span class="message warning"></span>\n\t\t</label>\n\n\t{{ }); }}\n\n</fieldset>\n',render:function(){return this.$el.empty(),this.renderCustomFieldsSection(),this.model.testable&&this.renderTestConnectionSection(),this},templateData:function(){return r().extend({},j.prototype.templateData.apply(this,arguments),{i18n:u,customFields:this.model.customFields})},renderCustomFieldsSection:function(){var e=r().template(this.customFieldsTemplate,this.templateData()),t=this.$el.find("[name=customFieldsContainer]");t.length>0?t.empty().append(l()(e).children()):this.$el.append(e)}},{}),$={JDBC:"jdbcDataSource",AWS:"awsDataSource",AZURE_SQL:"azureSqlDataSource",JNDI:"jndiJdbcDataSource",VIRTUAL:"virtualDataSource",CUSTOM:"customDataSource",BEAN:"beanDataSource",MONGODB:"MongoDbDataSource",MONGODBJDBC:"mongoDbJDBCDataSource"};var J=n(8121),G=n.n(J);A.Z.dataSourcePatterns=A.Z.dataSourcePatterns||{};const K=A.Z.dataSourcePatterns,W=function(e,t){return r().reduce(t,(function(t,n,a){return t[a]=e[a]?r().defaults(e[a],n):n,t}),{})};var H=s().Model.extend({idAttribute:"jdbcDriverClass",defaults:{defaultValues:{},jdbcDriverClass:"",label:"",available:!1,isDefault:!1,jdbcUrl:"",uploaded:!1},initialize:function(e,t){var n=W(t,{dataSourcePatterns:K});H.DYNAMIC_URL_PART_PATTERN=n.dataSourcePatterns.dynamicUrlPartPattern,H.DYNAMIC_Address_PATTERN=n.dataSourcePatterns.dynamicServerAddressPattern,H.OAUTH_SERVICE_EMAIL_PATTERN=n.dataSourcePatterns.dynamicServiceAcctEmailPattern,H.OAUTH_PVTKEY_PATH_PATTERN=n.dataSourcePatterns.dynamicPvtKeyPathPattern,H.ACCESS_KEY=n.dataSourcePatterns.dynamicAccessKey,H.ARN=n.dataSourcePatterns.dynamicARN,H.AWS_Region=n.dataSourcePatterns.dynamicAwsRegion,H.S3OUTPUT_LOCATION=n.dataSourcePatterns.dynamicS3OutputLocation,H.SECRET_KEY=n.dataSourcePatterns.dynamicSecretKey,H.ROLE=n.dataSourcePatterns.dynamicRole,H.VIRTUAL_WAREHOUSE=n.dataSourcePatterns.dynamicWarehouse,H.SNOWFLAKE_DB=n.dataSourcePatterns.dynamicSnowflakeDB,H.VALIDATION_PATTERNS=r().reduce(n.dataSourcePatterns,(function(e,t,n){return e[n]=G()(t),e}),{})},isOtherDriver:function(){return this.get("jdbcDriverClass")===H.OTHER_DRIVER},isUploadedDriver:function(){return!0===this.get("uploaded")},getCustomAttributes:function(){if(this.isOtherDriver())return[];var e=this._getRegExpFieldGroupsFromConnectionUrlTemplate(),t=[];return r().each(e,(function(e){return t.push(e[1])})),t},convertUrlTemplateToRegex:function(){var e,t=this.get("jdbcUrl");t=(t=t.replace(/\?/g,"\\?")).replace(/\[TMPDIR\/\]/g,"\\[TMPDIR/\\]");var n={serverAddress:function(t){return t.replace(e,H.DYNAMIC_Address_PATTERN)},oAuthServiceAcctEmail:function(t){return t.replace(e,H.OAUTH_SERVICE_EMAIL_PATTERN)},oAuthPvtKeyPath:function(t){return t.replace(e,H.OAUTH_PVTKEY_PATH_PATTERN)},accessKey:function(t){return t.replace(e,H.ACCESS_KEY)},secretKey:function(t){return t.replace(e,H.SECRET_KEY)},arn:function(t){return t.replace(e,H.ARN)},awsRegion:function(t){return t.replace(e,H.AWS_Region)},s3OutputLocation:function(t){return t.replace(e,H.S3OUTPUT_LOCATION)},role:function(t){return t.replace(e,H.ROLE)},warehouse:function(t){return t.replace(e,H.VIRTUAL_WAREHOUSE)},snowflakeDB:function(t){return t.replace(e,H.SNOWFLAKE_DB)}};for(var a in H.VALIDATION_PATTERNS){e=new RegExp("\\$\\["+a+"\\]","g");var s=n[a];t=s?s(t):t.replace(e,H.DYNAMIC_URL_PART_PATTERN)}return"^"+t},parse:function(e){return e.isDefault=!!e.isDefault,e.defaultValues&&(e.defaultValues=r().reduce(e.defaultValues,(function(e,t){return e[t.key]=t.value,e}),{})),e},_getRegExpFieldGroupsFromConnectionUrlTemplate:function(){for(var e,t=[],n=[];!r().isNull(e=H.FIELD_TEMPLATE_REGEXP.exec(this.get("jdbcUrl")));)r().isArray(e)&&2===e.length&&-1===n.indexOf(e[0])&&(t.push(e),n.push(e[0]));return t}},{FIELD_TEMPLATE_REGEXP:/\$\[([^\]]+)\]/g,OTHER_DRIVER:"other"});const Y=H,X=s().Collection.extend({model:Y,url:h.Z.contextPath+"/rest_v2/jdbcDrivers",initialize:function(e,t){this.options=t,this.driverUploadEnabled=!1},getDefaultDriver:function(){var e=this.find((function(e){return!r().isUndefined(e.get("isDefault"))&&!1!==e.get("isDefault")}));return e||this.first()},set:function(e,t){return void 0===t&&(t={}),r().extend(t,this.options),s().Collection.prototype.set.call(this,e,t)},getDriverByClass:function(e){var t=this.findWhere({jdbcDriverClass:e});return t||this.findWhere({jdbcDriverClass:Y.OTHER_DRIVER})},getDriverByName:function(e){return this.findWhere({name:e})},getAllPossibleCustomAttributes:function(){return r().keys(Y.VALIDATION_PATTERNS)},fetch:function(e){return r().defaults(e||(e={}),{headers:{Accept:"application/hal+json"}}),s().Collection.prototype.fetch.call(this,e)},parse:function(e){var t=s().Collection.prototype.parse.apply(this,arguments);return t._links&&t._links.create&&t._links.edit&&(this.driverUploadEnabled=!0),t.jdbcDrivers?t.jdbcDrivers:t},markDriverAsAvailable:function(e){this.models.find((function(t){return t.id===e})).set("available",!0)}});var Q,ee=G()(K.forbidWhitespacesPattern),te=(G()(K.oAuthPvtKeyPath),Q={},r().extend(Q,f.prototype.validation,{connectionUrl:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.connectionUrl"]},{fn:function(e,t,n){if(!this.drivers.getDriverByClass(n.selectedDriverClass).get("allowSpacesInDbName")&&!ee.test(e))return C.Z["ReportDataSourceValidator.error.invalid.chars.reportDataSource.connectionUrl"]}}]}),Q);const ne=f.extend({JDBC_BUNDLE_PREFIX:"resource.dataSource.jdbc.",otherDriverIsPresent:!0,type:B.Z.JDBC_DATA_SOURCE,defaults:function(){var e={};return r().extend(e,f.prototype.defaults,{driverClass:"",selectedDriverClass:"",username:"",password:"",timezone:"",connectionUrl:"",isOtherDriver:!1,connectionType:O}),e}(),validation:r().extend({},te),initialize:function(e,t){f.prototype.initialize.apply(this,arguments),this.initialization=l().Deferred(),this.drivers=new X([],this.options);var n=this;this.fetchDrivers().then((function(){n.isNew()?n.setCustomAttributesDefaultValues(n.drivers.getDefaultDriver()):(n.set("selectedDriverClass",n.get("driverClass")),n.set(n.getCustomAttributeValuesFromConnectionUrl()),n.set("password",Z["input.password.substitution"]),n.extendValidation());var e=r().map(n.drivers.getAllPossibleCustomAttributes(),(function(e){return"change:"+e})).join(" ");n.on(e,n.setConnectionUrlFromCustomAttributes),n.on("change:connectionUrl",n.setCustomAttributesFromConnectionUrl),n.on("change:selectedDriverClass",n.changeSelectedDriver),n.initialization.resolve()}))},fetchDrivers:function(){var e=this;return this.drivers.fetch({reset:!0}).done((function(){var t=r().groupBy(e.drivers.models,(function(e){return e.attributes.available}));r().each(t,(function(e,n){t[n]=r().sortBy(e,(function(e){return e.attributes.label}))}));var n=[];t.true&&(n=n.concat(t.true)),t.false&&(n=n.concat(t.false)),e.drivers.models=n,e.drivers.driverUploadEnabled&&e.otherDriverIsPresent&&e.drivers.add({defaultValues:{},jdbcDriverClass:Y.OTHER_DRIVER,label:C.Z["resource.dataSource.jdbc.otherDriver"],available:!1,default:!1,jdbcUrl:"",uploaded:!1})}))},getCurrentDriver:function(){return this.drivers.getDriverByClass(this.get("selectedDriverClass"))},changeSelectedDriver:function(){var e=this.drivers.getDriverByClass(this.get("selectedDriverClass"));e&&(this.setCustomAttributesDefaultValues(e),this.setConnectionUrlFromCustomAttributes(),this.trigger("driverClassChange",this))},setCustomAttributesFromConnectionUrl:function(){var e=this.getCustomAttributeValuesFromConnectionUrl();this.set(e,{silent:!0}),this.trigger("customAttributesUpdate",this)},setConnectionUrlFromCustomAttributes:function(){var e=this.getCurrentDriver(),t=e.getCustomAttributes(),n=this.pick(t),a=this.replaceConnectionUrlTemplatePlaceholdersWithValues(e.get("jdbcUrl"),n);this.set("connectionUrl",a,{silent:!0}),this.trigger("connectionUrlUpdate",this)},getAttributeValueFromUrl:function(e,t){var n=t.exec(e);return[].slice.call(n||[],1)},getCustomAttributeValuesFromConnectionUrl:function(){var e,t=this.getCurrentDriver();"mysql"===t.get("name")&&-1!=t.get("jdbcDriverClass").indexOf("mariadb")&&this.addMissingProperties(t,this.get("connectionUrl"));var n=this.get("connectionUrl"),a=G()(t.convertUrlTemplateToRegex()),s=t.getCustomAttributes(),i={};return e=this.getAttributeValueFromUrl(n,a),r().each(e,(function(e,t){i[s[t]]=e})),i},addMissingProperties:function(e,t){t&&-1==t.indexOf("allowPublicKeyRetrieval")&&-1!=e.get("jdbcUrl").indexOf("allowPublicKeyRetrieval")&&this.set("connectionUrl",t+"&allowPublicKeyRetrieval=true")},setCustomAttributesDefaultValues:function(e){this.unsetCustomAttributes();var t={};e.isOtherDriver()?(t.selectedDriverClass=e.get("jdbcDriverClass"),t.driverClass="",t.isOtherDriver=!0):(r().extend(t,e.get("defaultValues")),t.selectedDriverClass=e.get("jdbcDriverClass"),t.driverClass=e.get("jdbcDriverClass"),t.isOtherDriver=!1,t.connectionUrl=this.replaceConnectionUrlTemplatePlaceholdersWithValues(e.get("jdbcUrl"),e.get("defaultValues"))),this.set(t,{silent:!0}),this.extendValidation()},unsetCustomAttributes:function(){var e=this;r().each(this.drivers.getAllPossibleCustomAttributes(),(function(t){e.unset(t,{silent:!0})}))},replaceConnectionUrlTemplatePlaceholdersWithValues:function(e,t){var n=this.getRegExpFieldGroupsFromConnectionUrlTemplate(e);return r().each(n,(function(n){e=e.replace(n[0],r().isUndefined(t[n[1]])?"":t[n[1]])})),e},getRegExpFieldGroupsFromConnectionUrlTemplate:function(e){for(var t,n=[];!r().isNull(t=Y.FIELD_TEMPLATE_REGEXP.exec(e));)r().isArray(t)&&2===t.length&&n.push(t);return n},extendValidation:function(){var e=this,t={},n=this.getCurrentDriver().getCustomAttributes();r().extend(t,te),r().each(n,(function(n){t[n]=[{xRegExpPattern:Y.VALIDATION_PATTERNS[n],msg:C.Z[e.JDBC_BUNDLE_PREFIX+"invalidField"].replace("{0}",C.Z[e.JDBC_BUNDLE_PREFIX+n])}]})),this.validation=t},toJSON:function(){var e=f.prototype.toJSON.apply(this,arguments);return this.options.isEditMode&&e.password===Z["input.password.substitution"]&&(e.password=null),e}}),ae=s().View.extend({events:{"click button.action.primary":"primaryButtonOnClick","click button.action:not(.primary)":"secondaryButtonOnClick"},isModal:!0,TITLE:"",PRIMARY_BUTTON_LABEL:"",SECONDARY_BUTTON_LABEL:"",el:function(){return r().template('<div id="select" class="panel dialog select overlay moveable centered_horz centered_vert hidden">\n\n    <js-templateNonce></js-templateNonce>\n    <div class="sizer diagonal"></div>\n    <div class="content hasFooter">\n        <div class="header mover">\n            <div class="title">{{- title }}</div>\n        </div>\n        <div class="body"></div>\n        <div class="footer ">\n            <button class="button action primary up"><span class="wrap">{{- primaryButtonLabel }}</span><span class="icon"></span></button>\n            <button class="button action up"><span class="wrap">{{- secondaryButtonLabel }}</span><span class="icon"></span></button>\n        </div>\n    </div>\n</div>',{title:this.TITLE,primaryButtonLabel:this.PRIMARY_BUTTON_LABEL,secondaryButtonLabel:this.SECONDARY_BUTTON_LABEL})},initialize:function(){l()("body").append(this.render().$el)},show:function(){v.Z.popup.show(this.el,this.isModal)},hide:function(){v.Z.popup.hide(this.el)},render:function(){return this},primaryButtonOnClick:function(){throw new Error("Method not implemented")},secondaryButtonOnClick:function(){this.hide()}});var se=n(12473);function ie(e){var t,n=null;return e.firstChild.innerText&&""!==e.firstChild.innerText&&e.body?((t=new window.ActiveXObject("Microsoft.XMLDOM")).async=!1,t.loadXML(e.firstChild.innerText.replace("\r\n-","\r\n"))):t=e,t.firstChild&&(n=t.firstChild.nodeName.toLowerCase()),n&&"html"!==n&&"#comment"!==n?re("xml"===t.firstChild.nodeName.toLowerCase()?t.firstChild.nextSibling:t.firstChild):{errorCode:"unexpected.error"}}function re(e){var t,n;if(e.children)t=e.children;else{t=[];for(var a=0,s=e.childNodes.length;a<s;a++)null===e.childNodes[a].nodeValue&&t.push(e.childNodes[a])}if(0===t.length&&1===e.childNodes.length)return e.childNodes[0].nodeValue;if(t.length>1&&t[0].nodeName===t[1].nodeName){n=[];for(var i=0,r=t.length;i<r;i++)n[i]=re(t[i])}else{n={};for(var o=0,l=t.length;o<l;o++)n[t[o].nodeName]=re(t[o])}return n}var oe=function(e,t,n,a){this.name=r().uniqueId("uploadTarget"),this.form=l()(e),t&&this.form.attr("action",t),n&&this.form.attr("method",n),a&&this.form.attr("enctype",a),this.parceXmlDocToObject=ie};oe.prototype.submit=function(){return window.FormData?(e=this.form,t=new(l().Deferred),e.submit((function(n){n.preventDefault(),(0,se.Z)({url:e.attr("action"),type:e.attr("method"),data:new FormData(e[0]),cache:!1,contentType:!1,processData:!1,headers:{Accept:"application/json"}}).done((function(e){t.resolve(e)})).fail((function(e){e=e.responseJSON||e||{},r().defaults(e,{errorCode:"error.load.error"}),t.reject(e)})),e.off("submit")})),e.submit(),t):function(e,t){var n=l().Deferred(),a=l()("<iframe style='display:none' name='"+t+"'></iframe>");return e.append(a).attr("target",t),a.on("load",(function(){try{n.resolve(ie(this.contentWindow.document))}catch(e){n.reject({errorCode:"error.invalid.response"})}a.remove()})),a.on("abort",(function(){n.reject({errorCode:"error.load.aborted"}),a.remove()})),a.on("error",(function(){n.reject({errorCode:"error.load.error"}),a.remove()})),e.submit(),n}(this.form,this.name);var e,t};const le=oe,ce=s().View.extend({template:r().template('<div class="jr-mSpinner jr-mSpinnerDatatable jr-isHidden jr">\n\n    <js-templateNonce></js-templateNonce>\n</div>\n<div class="jr-mOverlay jr-isHidden jr"></div>'),initialize:function(e){this.delay=e.delay,this.render()},render:function(){return this.$el.append(this.template()),this.$elSpinner=this.$(".jr-mSpinnerDatatable"),this.$elOverlay=this.$(".jr-mOverlay"),this},show:function(e){var t=this,n=function(){t.$elSpinner.show(),t.$elOverlay.show()};this.delay||e?this._timer||(this._timer=setTimeout(n,this.delay||e)):n()},hide:function(){this._timer&&(clearTimeout(this._timer),this._timer=null),this.$elSpinner.hide(),this.$elOverlay.hide()},remove:function(){return this.$elSpinner.remove(),this.$elOverlay.remove(),this.stopListening(),this}}),de=ae.extend({TITLE:C.Z["resource.dataSource.jdbc.selectDriverTitle"],PRIMARY_BUTTON_LABEL:C.Z["button.upload"],SECONDARY_BUTTON_LABEL:C.Z["button.cancel"],events:function(){return r().extend({},ae.prototype.events,{"change input[type='file']":"onFileChange"})},initialize:function(e){this.driverClass=e.driverClass,this.driverAvailable=e.driverAvailable,this.fileIndex=0,this._overlay=new ce({delay:1e3}),ae.prototype.initialize.apply(this,arguments),l()(this.el).addClass("jr jr-uploadJdbcDriverDialog")},onFileChange:function(e){var t=l()(e.target),n=t.next(".message.warning");if(n.parent().removeClass("error"),t.val().match(/.jar$/)){if(t.is(this.$("input[type='file']:last-of-type"))){var a=0,s=this.$("input[type='file']");r().each(s,(function(e,t){a+=t+1})),a>=s.length&&this.addFileInput(),this.$("button.primary").removeClass("disabled").attr("disabled",null)}}else n.text(C.Z["resource.dataSource.jdbc.upload.wrongExtension"]).parent().addClass("error")},render:function(){var e=this;return this.$(".body").html(r().template('<form method="post" enctype="multipart/form-data" action="rest_v2/jdbcDrivers">\n\n    <js-templateNonce></js-templateNonce>\n    <input name="className" type="hidden" value="{{- className }}"/>\n    <div class="control groupBox fillParent">\n        <div class="content">\n            <div class="header">\n                <div class="title"></div>\n            </div>\n            <div class="body">\n                <ul title="Locate local file"></ul>\n                <div class="errorMessageContainer">\n                    <span class="message warning"></span>\n                </div>\n                <div class="hidden warningMessageContainer">\n                    <span class="message textAccent"></span>\n                </div>\n                <br/>\n                <a class="fsection" target="_blank" rel="noopener noreferrer" href="http://community.jaspersoft.com/wiki/downloading-and-installing-database-drivers">{{- i18n["resource.dataSource.jdbc.upload.downloading"]}}</a>\n            </div>\n        </div>\n    </div>\n</form>',{className:this.driverClass,i18n:C.Z})),r().defer((function(){e.addFileInput(),e.driverAvailable?e.$(".warningMessageContainer").removeClass("hidden").find(".message").text(C.Z["resource.dataSource.jdbc.upload.overwriteWarning"]):e.$(".warningMessageContainer").addClass("hidden").find(".message").text("")})),this.$("button.primary").addClass("disabled").attr("disabled","disabled"),this},onSuccessCallback:function(e){this.trigger("driverUpload",e),this.hide(),v.Z.systemConfirm.show(C.Z["resource.dataSource.jdbc.upload.driverUploadSuccess"]),r().defer(r().bind(this.remove,this))},onErrorCallback:function(e){var t;"illegal.parameter.value.error"===(e=e.responseJSON?e.responseJSON:e).errorCode&&e.parameters&&e.parameters.length&&"className"===e.parameters[0]?t=C.Z["resource.dataSource.jdbc.classNotFound"].replace("{0}",this.driverClass):e.message?t=e.message:"error.invalid.response"===(t=e.errorCode)&&(t="The required driver class ("+this.driverClass+") is not found in uploaded files"),this.$(".errorMessageContainer").addClass("error").find(".message").text(t)},addFileInput:function(){this.$("ul").append(r().template('<li class="leaf">\n\n    <js-templateNonce></js-templateNonce>\n    <input type="file" name="file_{{- fileIndex}}" size="60" accept="jar/jar" />\n    <span class="message warning"></span>\n</li>',{fileIndex:this.fileIndex})),this.fileIndex++},primaryButtonOnClick:function(){var e=this;this.$(".errorMessageContainer").removeClass("error").find(".message").text(""),this.$("button.primary").addClass("disabled").attr("disabled","disabled"),l()("body").append(this._overlay.$el),this._overlay.show();var t=this.$("form");new le(t[0]).submit().done((function(t){t.errorCode?e.onErrorCallback(t):e.onSuccessCallback(t)})).fail((function(t){e.onErrorCallback(t)})).always((function(){e._overlay.hide(),l()("body").detach(e._overlay.$el),e.$("button.primary").removeClass("disabled").attr("disabled",null)}))},secondaryButtonOnClick:function(){this._overlay.hide(),l()("body").detach(this._overlay.$el),this.hide(),r().defer(r().bind(this.remove,this))}}),ue='<label class="control input text" title="{{- title}}">\n\n    <js-templateNonce></js-templateNonce>\n    <span class="wrap">{{- label}} ({{- i18n["required.field"] }}):</span>\n    <input name="{{- name}}" type="{{- type}}" value="{{- value }}"/>\n    <span class="message warning"></span>\n    <span class="message hint">{{- hint }}</span>\n</label>';var pe=n(43852);var he=n(41447);const me='<div class="panel dialog selectFromRepository overlay moveable sizeable centered_horz centered_vert hidden">\n\n    <js-templateNonce></js-templateNonce>\n\t<div class="sizer diagonal"></div>\n\t<div class="content hasFooter">\n\t\t<div class="header mover">\n\t\t\t<div class="title">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="body">\n\t\t\t<div class="control groupBox fillParent">\n\t\t\t\t<div class="content">\n\t\t\t\t\t<div class="header">\n\t\t\t\t\t\t<div class="title">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="body">\n\t\t\t\t\t\t<ul id="selectFromRepoTree"></ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="footer">\n\t\t\t<button id="selectFromRepoBtnSelect" class="button action primary up"><span class="wrap">{{- i18n["button.select"] }}</span><span class="icon"></span></button>\n\t\t\t<button id="selectFromRepoBtnCancel" class="button action up"><span class="wrap">{{- i18n["button.cancel"] }}</span><span class="icon"></span></button>\n\t\t</div>\n\t</div>\n</div>\n';A.Z.awsSettings=A.Z.awsSettings||{};const ve=A.Z.awsSettings,fe='<label class="control input text" title="{{- title}}">\n\n    <js-templateNonce></js-templateNonce>\n    <span class="wrap">{{- label}}:</span>\n    <input name="{{- name}}" type="{{- type}}" value="{{- value }}"/>\n    <span class="message warning"></span>\n    <span class="message hint">{{- hint }}</span>\n</label>',ge=j.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.jdbc.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.jdbc.page.title.edit",modelConstructor:ne,events:(be={},r().extend(be,j.prototype.events,{"keyup input[type='text'][name!='driverClass'], input[type='password'], textarea":"updateModelProperty","change input[type='text'][name!='driverClass'], input[type='password'], textarea, select":"updateModelProperty","keyup input[type='text'][name='driverClass']":"manuallySetDriverClass","change input[type='text'][name='driverClass']":"manuallySetDriverClass","click #driverUploadButton":"uploadDriver"}),be),initialize:function(e){j.prototype.initialize.apply(this,arguments),this.deepDefaults=W(e,{awsSettings:ve}),this.listenTo(this.model,"connectionUrlUpdate",this.updateConnectionUrl),this.listenTo(this.model,"customAttributesUpdate",this.updateCustomAttributes),this.listenTo(this.model,"driverClassChange",this.changeDriver),this.listenTo(this.model.drivers,"change",this.updateDriverOption),this.listenTo(this.model.drivers,"add",this.addDriverOption)},updateDriverOption:function(e){var t=this.$("select[name='selectedDriverClass'] option[value='"+e.get("jdbcDriverClass")+"']"),n=e.get("label")+" ("+e.get("jdbcDriverClass")+")";e.get("available")||(n=C.Z["resource.dataSource.jdbc.driverMissing"]+" "+n),t.text(n),this.model.getCurrentDriver()===e&&this.changeUploadDriverButtonState()},addDriverOption:function(e){if(!e.isOtherDriver){var t=this.$("select[name='selectedDriverClass'] option[value='"+Y.OTHER_DRIVER+"']"),n=e.get("jdbcDriverClass"),a=this;e.get("available")||(n=C.Z["resource.dataSource.jdbc.driverMissing"]+" "+n),t.before("<option value='"+e.get("jdbcDriverClass")+"'>"+n+"</option>"),r().defer((function(){a.$("select[name='selectedDriverClass']").val(e.get("jdbcDriverClass")),a.model.trigger("change:driverClass")}))}},manuallySetDriverClass:function(){var e={driverClass:this.$("input[type='text'][name='driverClass']").val()};this.model.set(e,{silent:!0}),this.model.validate(e),this.changeUploadDriverButtonState()},updateConnectionUrl:function(){this.$("input[name='connectionUrl']").val(this.model.get("connectionUrl"));var e=this.model.getCurrentDriver();e.isOtherDriver()||e.isUploadedDriver()||this.model.validate({connectionUrl:this.model.get("connectionUrl")})},updateCustomAttributes:function(){var e=this,t=this.model.getCurrentDriver().getCustomAttributes();r().each(t,(function(t){e.$("input[name='"+t+"']").val(e.model.get(t))}));var n=this.model.pick(t);this.model.validate(n)},changeDriver:function(){this.renderDriverCustomAttributeFields(),this.changeUploadDriverButtonState()},changeUploadDriverButtonState:function(){var e=this.model.getCurrentDriver(),t=this.$("#driverUploadButton");pe.Z.enable(t[0]);var n=e.get("available")?C.Z["resource.dataSource.jdbc.upload.editDriverButton"]:C.Z["resource.dataSource.jdbc.upload.addDriverButton"];t.find(".wrap").text(n)},uploadDriver:function(){this.model.drivers.driverUploadEnabled&&this.model.get("driverClass")?(this.fieldIsValid(this,"driverClass","name"),this.driverUploadDialog&&this.stopListening(this.driverUploadDialog),delete this.driverUploadDialog,this.initDriverUploadDialog(),this.driverUploadDialog.show()):this.fieldIsInvalid(this,"driverClass",C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.driverClass"],"name")},initDriverUploadDialog:function(){this.driverUploadDialog=new de({driverAvailable:this.model.getCurrentDriver().get("available"),driverClass:this.model.get("isOtherDriver")?this.model.get("driverClass"):this.model.getCurrentDriver().get("jdbcDriverClass")}),this.listenTo(this.driverUploadDialog,"driverUpload",this._onDriverUploadFinished)},_onDriverUploadFinished:function(e){var t=this;this.model.fetchDrivers().then((function(){t.model.drivers.markDriverAsAvailable(e.jdbcDriverClass),r().defer((function(){t.model.validate(),t.render()}))}))},render:function(){return this.$el.empty(),this.renderJdbcSpecificSection(),this.renderTimezoneSection(),this.renderTestConnectionSection(),this},templateData:function(){var e=j.prototype.templateData.apply(this,arguments);return r().extend(e,{i18n:C.Z,drivers:this.model.drivers.toJSON(),otherDriverValue:Y.OTHER_DRIVER,driverUploadEnabled:this.model.drivers.driverUploadEnabled,awsRegions:this.deepDefaults.awsSettings.awsRegions}),e},renderJdbcSpecificSection:function(){this.$el.append(r().template('<fieldset class="group shortFields">\n\n    <js-templateNonce></js-templateNonce>\n    <legend class="offLeft"><span>{{- i18n[\'resource.dataSource.accessProp\']}}</span></legend>\n\n    <label title="{{- i18n[\'resource.dataSource.jdbc.selectDriverTitle\']}}" class="control select">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.driver\']}}:</span>\n        <select name="selectedDriverClass">\n            {{ _.each(drivers, function(driver) { }}\n                <option value="{{- driver.jdbcDriverClass }}"\n                {{ if (modelAttributes.selectedDriverClass === driver.jdbcDriverClass) { }}\n                    selected="selected"\n                {{ } }}>\n                    {{ if (!driver.available && driver.jdbcDriverClass !== otherDriverValue) { }}\n                        {{- i18n["resource.dataSource.jdbc.driverMissing"] }}\n                    {{ } }}\n                    {{- driver.label }}\n                    {{ if (driver.jdbcDriverClass !== otherDriverValue && typeof (driver.label) !== "undefined" && driver.label !== "") { }}\n                        ({{- driver.jdbcDriverClass }})\n                    {{ } else if (driver.jdbcDriverClass !== otherDriverValue && (typeof driver.label === "undefined" || driver.label === "")) { }}\n                        {{- driver.jdbcDriverClass }}\n                    {{ } }}\n                </option>\n            {{ }); }}\n        </select>\n\n        {{ if (driverUploadEnabled) { }}\n\t\t<button class="button action up" id="driverUploadButton">\n\t\t\t<span class="wrap">{{- i18n[\'resource.dataSource.jdbc.upload.editDriverButton\']}}</span>\n\t\t</button>\n        {{ } }}\n    </label>\n\n    <div name="jdbcSpecificFieldsContainer"></div>\n    <label title="{{- i18n[\'resource.analysisConnection.url\']}}" class="control input text">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.url\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.connectionUrl }}" name="connectionUrl">\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n[\'resource.dataSource.jdbc.hint2\']}}</span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.jdbc.username\']}}" class="control input text ">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.username\']}}:</span>\n        <input type="text" value="{{- modelAttributes.username }}" name="username">\n        <span class="message warning"></span>\n        <span class="message hint"></span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.jdbc.password\']}}" class="control input password ">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.password\']}}:</span>\n        <input type="password" value="{{- modelAttributes.password }}" name="password">\n        <span class="message warning"></span>\n        <span class="message hint"></span>\n    </label>\n\n</fieldset>',this.templateData())),this.renderDriverCustomAttributeFields(),this.changeUploadDriverButtonState()},renderDriverCustomAttributeFields:function(){var e=this,t="";if(this.model.get("isOtherDriver"))t+=r().template(ue,{hint:C.Z["resource.dataSource.jdbc.hint1"],label:C.Z["resource.dataSource.jdbc.driver"],name:"driverClass",type:"text",title:C.Z["resource.analysisConnection.driver"],value:this.model.get("driverClass"),i18n:C.Z});else{var n=this.model.getCurrentDriver().getCustomAttributes(),a={awsRegion:'<label class="control input text" title="{{- title}}" style="display: inline-block; margin-right: 6px; margin-top: 6px; width: 350px;">\n    <js-templateNonce></js-templateNonce>\n    <span class="wrap">{{- i18n[\'resource.dataSource.aws.setting.region\']}} ({{- i18n["required.field"] }}):</span>\n    <select class="fnormal" name="awsRegion">\n        {{ _.each(awsRegions, function(region) { }}\n        <option value="{{- region }}" {{ if (region === value) { }}selected="selected"{{ } }} >{{- i18n[region] || region }}</option>\n        {{ }); }}\n    </select>\n    <span class="message warning"></span>\n</label>\n',arn:fe,role:fe,warehouse:fe},s={accessKey:C.Z["resource.dataSource.jdbc.setting.accessKey.title"],secretKey:C.Z["resource.dataSource.jdbc.setting.secretKey.title"],arn:C.Z["resource.dataSource.jdbc.setting.arn.title"],role:C.Z["resource.dataSource.jdbc.optional.snowFlake.role"],warehouse:C.Z["resource.dataSource.jdbc.optional.snowFlake.warehouse"]},i={arn:C.Z["resource.dataSource.jdbc.optional.arn"]};r().each(n,(function(n){var o,l,c,d="secretKey"===n?"password":"text",u=C.Z["resource.dataSource.jdbc.requiredTitle"].replace("{0}",C.Z["resource.dataSource.jdbc."+n].toLowerCase()),p=null!==(o=s[n])&&void 0!==o?o:u,h=null!==(l=a[n])&&void 0!==l?l:ue,m=null!==(c=i[n])&&void 0!==c?c:"";t+=r().template(h,{hint:m,label:C.Z["resource.dataSource.jdbc."+n],name:n,type:d,title:p,value:e.model.get(n),i18n:C.Z,awsRegions:e.deepDefaults.awsSettings.awsRegions})}))}this.$("[name=jdbcSpecificFieldsContainer]").html(t);var o=this.isEditMode&&!this.model.changed.selectedDriverClass?this.options.dataSource.driverClass:this.model.changed.selectedDriverClass;o&&-1!==o.indexOf("GoogleBigQueryDriver")&&this.renderFileLocationSection()},remove:function(){this.driverUploadDialog&&this.driverUploadDialog.remove(),j.prototype.remove.apply(this,arguments)},renderFileLocationSection:function(){l()(r().template('<js-templateNonce></js-templateNonce>\n<button class="button action up" type="button" name="oathPrivateKeyBrowserButton">\n    <span class="wrap">{{- i18n[\'dialog.file.browse\'] }}...</span>\n    <span class="icon"></span>\n</button>',{i18n:C.Z})).insertAfter("[name='oAuthPvtKeyPath']"),this.browseButton=he.Z.initialize({i18n:C.Z,template:me,resourceInput:this.$el.find("[name=oAuthPvtKeyPath]")[0],browseButton:this.$el.find("[name=oathPrivateKeyBrowserButton]")[0],providerId:"fileResourceBaseTreeDataProvider",dialogTitle:C.Z["resource.Add.Files.Title"],selectLeavesOnly:!0,onChange:r().bind((function(e){this.model.set("oAuthPvtKeyPath",e),this.model.validate({oAuthPvtKeyPath:e})}),this)})}});var be;const Se=f.extend({type:B.Z.JNDI_DATA_SOURCE,defaults:function(){var e={};return r().extend(e,f.prototype.defaults,{jndiName:"",timezone:"",connectionType:R}),e}(),validation:function(){var e={};return r().extend(e,f.prototype.validation,{jndiName:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.jndiName"]}]}),e}()}),De=j.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.jndi.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.jndi.page.title.edit",modelConstructor:Se,render:function(){return this.$el.empty(),this.renderJndiSpecificSection(),this.renderTimezoneSection(),this.renderTestConnectionSection(),this},renderJndiSpecificSection:function(){this.$el.append(r().template('<fieldset class="group mediumFields">\n\n    <js-templateNonce></js-templateNonce>\n\n    <legend class="offLeft"><span>{{- i18n[\'resource.dataSource.accessProp\']}}</span></legend>\n\n    <label title="{{- i18n[\'resource.analysisConnection.driver\']}}" class="control input text ">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jndi.serviceName\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.jndiName }}" name="jndiName">\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n[\'resource.dataSource.jndi.hint1\']}}</span>\n    </label>\n\n</fieldset>',this.templateData()))}});var ye=n(76802),we=ne.extend({otherDriverIsPresent:!1,type:B.Z.AWS_DATA_SOURCE,defaults:function(){var e={};return r().extend(e,ne.prototype.defaults,{dbName:"",dbInstanceIdentifier:"",dbService:"",accessKey:"",secretKey:"",roleArn:"",region:"",credentialsType:"",connectionType:L}),e}(),validation:function(){var e={};return r().extend(e,{connectionUrl:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.connectionUrl"]},{xRegExpPattern:G()(K.forbidWhitespacesPattern),msg:C.Z["ReportDataSourceValidator.error.invalid.chars.reportDataSource.connectionUrl"]}],username:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.username"]}],driverClass:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.driverClass"]},{xRegExpPattern:G()(K.forbidWhitespacesPattern),msg:C.Z["ReportDataSourceValidator.error.invalid.chars.reportDataSource.driverClass"]},{fn:function(e,t,n){if(!new RegExp(K.attributePlaceholderPattern).test(e)){var a=this.drivers.getDriverByClass(e);if(!a||!a.get("available"))return C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.driverNotInstalled"]}}}],dbName:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.dbNameIsEmpty"]}],region:[{required:!0}],accessKey:[{fn:function(e,t,n){if(n.credentialsType===we.credentialsType.AWS&&(r().isNull(e)||r().isUndefined(e)||r().isString(e)&&""===e))return C.Z["fillParameters.error.mandatoryField"]}}],secretKey:[{fn:function(e,t,n){if(n.credentialsType===we.credentialsType.AWS&&(r().isNull(e)||r().isUndefined(e)||r().isString(e)&&""===e))return C.Z["fillParameters.error.mandatoryField"]}}]}),e}(),initialize:function(e,t){f.prototype.initialize.apply(this,arguments);var n=W(t,{awsSettings:ve});this.isNew()?this.set("region",r().first(n.awsSettings.awsRegions)):(this.set("password",Z["input.password.substitution"]),this.set("secretKey",Z["input.password.substitution"])),this.set("credentialsType",!n.awsSettings.isEc2Instance||n.awsSettings.suppressEc2CredentialsWarnings||""!==this.get("accessKey")?we.credentialsType.AWS:we.credentialsType.EC2),this.initialization=l().Deferred(),this.drivers=new X([],this.options);var a=this;this.drivers.fetch({reset:!0}).done((function(){a.initialization.resolve()})),this.on("change:dbName change:dbPort change:dbHost change:sName change:connectionUrlTemplate",this.updateConnectionUrl),this.on("change:credentialsType",this.changeCredentialsType)},updateConnectionUrl:function(){if(this.get("connectionUrlTemplate")){var e=this.pick(["dbName","dbPort","dbHost","sName"]);e.sName||(e.sName=e.dbName);var t=this.replaceConnectionUrlTemplatePlaceholdersWithValues(this.get("connectionUrlTemplate"),e);this.set("connectionUrl",t)}},changeCredentialsType:function(){this.get("credentialsType")===we.credentialsType.EC2&&this.set({accessKey:"",secretKey:"",roleArn:""})},toJSON:function(){var e=ne.prototype.toJSON.apply(this,arguments);return this.options.isEditMode&&e.secretKey===Z["input.password.substitution"]&&(e.secretKey=null),e},getFullDbTreePath:function(){return this.get("dbInstanceIdentifier")&&this.get("dbService")?"/"+this.get("dbService")+"/"+this.get("dbInstanceIdentifier"):null}},{credentialsType:{EC2:"ec2",AWS:"aws"}});const Te=we;var Ce=n(46539);const Ae=ge.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.aws.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.aws.page.title.edit",modelConstructor:Te,events:function(){var e={};return r().extend(e,ge.prototype.events),e["change input[name='credentialsType']"]="changeCredentialsType",e["click #findAwsDataSources"]="refreshAwsDataSourceTree",e},initialize:function(e){j.prototype.initialize.apply(this,arguments),this.deepDefaults=W(e,{awsSettings:ve}),this.listenTo(this.model,"change:credentialsType",this.onCredentialsTypeChange),this.listenTo(this.model,"change:driverClass",this.changeUploadDriverButtonState),this.listenTo(this.model,"change",this.updateInput),this.listenTo(this.model.drivers,"change add",this.recheckDriver)},changeCredentialsType:function(){var e=this.$("input[name='credentialsType']:checked").val();this.model.set("credentialsType",e)},recheckDriver:function(){this.model.validate({driverClass:this.model.get("driverClass")}),this.changeUploadDriverButtonState()},changeUploadDriverButtonState:function(){var e=this.$("#driverUploadButton");if(""===this.model.get("driverClass"))pe.Z.disable(e[0]);else{pe.Z.enable(e[0]);var t=this.model.drivers.getDriverByClass(this.model.get("driverClass"));e.find(".wrap").text(C.Z[t&&t.get("available")?"resource.dataSource.jdbc.upload.editDriverButton":"resource.dataSource.jdbc.upload.addDriverButton"])}},initDriverUploadDialog:function(){var e=this,t=this.model.drivers.getDriverByClass(this.model.get("driverClass"));this.driverUploadDialog=new de({driverAvailable:!(!t||!t.get("available")),driverClass:this.model.get("driverClass")}),this.driverUploadDialog.on("driverUpload",(function(t){e.model.drivers.markDriverAsAvailable(t.jdbcDriverClass),r().defer(r().bind(e.model.validate,e.model))}))},updateInput:function(){var e=r().keys(this.model.changedAttributes()),t=this;r().each(r().intersection(e,["accessKey","secretKey","roleArn","connectionUrl","driverClass","dbName"]),(function(e){var n=t.model.get(e);t.$("[name='"+e+"']").val()!==n&&t.$("[name='"+e+"']").val(n)}))},onCredentialsTypeChange:function(){var e=this.model.get("credentialsType")===Te.credentialsType.EC2;this.$("#aws_settings")[e?"hide":"show"](),e&&this.showAwsDsTree(this.model.getFullDbTreePath())},refreshAwsDataSourceTree:function(e){e.preventDefault(),this.showAwsDsTree("/")},render:function(){return this.$el.empty(),this.renderTimezoneSection(),this.renderAwsSpecificSection(),this.renderTestConnectionSection(),this.initDataSourceTree(),(this.options.isEditMode||this.model.get("credentialsType")===Te.credentialsType.EC2)&&this.showAwsDsTree(this.model.getFullDbTreePath()),this},showAwsDsTree:function(e){this.model.validate({accessKey:this.model.get("accessKey"),secretKey:this.model.get("secretKey")}),this.model.isValid("secretKey")&&this.model.isValid("accessKey")&&this.awsDataSourceTree.showTreePrefetchNodes(e||"/")},templateData:function(){var e=ge.prototype.templateData.apply(this,arguments);return r().extend(e,{credentialsType:Te.credentialsType,awsRegions:this.deepDefaults.awsSettings.awsRegions,disableAwsDefaults:!(this.deepDefaults.awsSettings.isEc2Instance&&this.deepDefaults.awsSettings.hasSecurityCredentials)||this.deepDefaults.awsSettings.suppressEc2CredentialsWarnings}),e},renderAwsSpecificSection:function(){this.$el.append(r().template('<fieldset class="group">\n\n    <legend><span>{{- i18n[\'resource.dataSource.aws.settings.title\']}}</span></legend>\n\n    <ul class="list inputSet">\n        <li class="leaf">\n            <div class="control radio">\n                <label title="{{- i18n[\'resource.dataSource.aws.option.useDefault.title\']}}" class="wrap">\n                    {{- i18n[\'resource.dataSource.aws.option.useDefault\']}}\n                </label>\n                <input type="radio" value="{{- credentialsType.EC2 }}" name="credentialsType" {{ if(modelAttributes.credentialsType === credentialsType.EC2 && !disableAwsDefaults) { }}checked{{ } }} {{ if (disableAwsDefaults) { }}disabled="disabled"{{ } }}>\n            </div>\n        </li>\n        <li class="leaf">\n            <div class="control radio">\n                <label title="{{- i18n[\'resource.dataSource.aws.option.userDefined.title\']}}" class="wrap">\n                   {{= i18n[\'resource.dataSource.aws.option.userDefined\'].replace(\'{0}\',i18n[\'resource.dataSource.aws.option.url\']) }}\n                </label>\n                <input type="radio" value="{{- credentialsType.AWS }}" name="credentialsType" {{ if(modelAttributes.credentialsType === credentialsType.AWS ) { }}checked{{ } }}>\n            </div>\n        </li>\n    </ul>\n\n    <fieldset class="group shortFields" id="aws_settings" {{ if (modelAttributes.credentialsType === credentialsType.EC2 && !disableAwsDefaults) { }}style="display: none;"{{ } }}>\n\n        <label title="{{- i18n[\'resource.dataSource.aws.setting.accessKey.title\']}}" class="control input text ">\n            <span class="wrap">{{- i18n[\'resource.dataSource.aws.setting.accessKey\']}}:</span>\n            <input type="text" value="{{- modelAttributes.accessKey }}" name="accessKey">\n            <span class="message warning"></span>\n            <span class="message hint"></span>\n        </label>\n\n        <label title="{{- i18n[\'resource.dataSource.aws.setting.secretKey.title\']}}" class="control input password ">\n            <span class="wrap">{{- i18n[\'resource.dataSource.aws.setting.secretKey\']}}:</span>\n            <input type="password" autocomplete="off" value="{{- modelAttributes.secretKey }}" name="secretKey">\n            <span class="message warning"></span>\n            <span class="message hint"></span>\n        </label>\n\n        <label title="{{- i18n[\'resource.dataSource.aws.setting.arn.title\']}}" class="control input text ">\n            <span disabled="disabled" class="wrap">{{- i18n[\'resource.dataSource.aws.setting.arn\']}}:</span>\n            <input type="text" value="{{- modelAttributes.roleArn }}" name="roleArn">\n            <span class="message warning"></span>\n            <span class="message hint">{{- i18n[\'resource.dataSource.aws.optional.arn\']}}</span>\n        </label>\n\n    </fieldset>\n\n</fieldset>\n\n<fieldset class="group">\n\n    <legend><span>{{- i18n[\'resource.dataSource.aws.tree\']}}</span></legend>\n\n    <label title="{{- i18n[\'resource.dataSource.aws.setting.region.title\']}}" class="control select " style="display: inline-block; margin-right: 6px; margin-top: 6px; width: 350px;">\n        <span class="wrap">{{- i18n[\'resource.dataSource.aws.setting.region\']}}:</span>\n        <select class="fnormal" name="region">\n            {{ _.each(awsRegions, function(region) { }}\n            <option value="{{- region }}" {{ if (region === modelAttributes.region) { }}selected="selected"{{ } }}>{{- i18n[region] || region }}</option>\n            {{ }); }}\n        </select>\n        <span class="message warning"></span>\n    </label>\n\n    <button class="button action up" id="findAwsDataSources">\n        <span class="wrap">{{- i18n[\'resource.dataSource.aws.updateTree\']}}<span class="icon"></span></span>\n    </button>\n\n</fieldset>\n\n<fieldset class="group">\n\n    <div class="control groupBox" style="height: 150px; margin: 0; width: 538px;">\n        <div class="content">\n            <div class="header">\n                <div class="title"></div>\n            </div>\n            <div class="body" style="height: 137px; overflow: auto; padding: 6px;">\n                <ul class="list collapsible folders hideRoot" id="awsDataSourceTree" style="position: relative; height: 137px; overflow: auto; padding: 6px;"></ul>\n            </div>\n        </div>\n    </div>\n\n</fieldset>\n\n<fieldset class="group shortFields">\n\n    <label title="{{- i18n[\'resource.dataSource.jdbc.username\']}}" class="control input text ">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.username\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.username }}" name="username">\n        <span class="message warning"></span>\n        <span class="message hint"></span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.jdbc.password\']}}" class="control input password ">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.password\']}}:</span>\n        <input type="password" value="{{- modelAttributes.password }}" name="password">\n        <span class="message warning"></span>\n        <span class="message hint"></span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.aws.database.name.title\']}}" class="control input text">\n        <span class="wrap">{{- i18n[\'resource.dataSource.aws.database.name\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.dbName }}" name="dbName">\n        <span class="message warning"></span>\n        <span class="message hint"></span>\n    </label>\n\n</fieldset>\n\n<fieldset class="group mediumFields">\n\n    <label title="{{- i18n[\'resource.analysisConnection.driver\']}}" class="control input text">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.driver\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input class="control inline" type="text" value="{{- modelAttributes.driverClass }}" name="driverClass">\n        {{ if (driverUploadEnabled) { }}\n        <button class="button action up" id="driverUploadButton">\n            <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.upload.addDriverButton\']}}</span>\n        </button>\n        {{ } }}\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n[\'resource.dataSource.jdbc.hint1\']}}</span>\n    </label>\n\n    <label title="{{- i18n[\'resource.analysisConnection.requiredURL\']}}" class="control input text">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.url\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.connectionUrl }}" name="connectionUrl">\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n[\'resource.dataSource.jdbc.hint2\']}}</span>\n    </label>\n\n</fieldset>\n',this.templateData())),this.changeUploadDriverButtonState()},initDataSourceTree:function(){var e=this.options.isEditMode,t=this,n={hideLoader:!0,bShowRoot:!1,treeId:"awsDataSourceTree",providerId:"awsDataSourceTreeDataProvider",selectLeavesOnly:!0,additionalParams:function(){return{arn:t.model.get("roleArn"),awsAccessKey:t.model.get("accessKey"),awsSecretKey:t.model.get("secretKey"),region:t.model.get("region"),datasourceUri:t.model.get("uri")}}};this.awsDataSourceTree=Ce.Z.createRepositoryTree("awsDataSourceTree",n),this.awsDataSourceTree.httpErrorHandler=function(e){var t,n=!1,a=!1;return-1===e.responseText.indexOf("AWS Access Key is invalid")&&-1===e.responseText.indexOf("The security token included in the request is invalid")||(n=C.Z["error.aws.key.is.invalid"]),!1!==n||-1===e.responseText.indexOf("AWS Secret Key is invalid")&&-1===e.responseText.indexOf("The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method")||(n=C.Z["error.aws.secret.key.is.invalid"]),!1===n&&-1!==e.responseText.indexOf("is not authorized to perform")&&(n=C.Z["error.aws.arn.is.invalid"]),!1===n&&-1!==e.responseText.indexOf("The security token included in the request is invalid")&&(n=C.Z["error.security.token.is.invalid"]),!1===n&&-1!==e.responseText.indexOf("action execution attributes")&&(n=C.Z["error.aws.ec2.credentials.unavailable"],a=!0),!!n&&((t=a?new ye.Z({modal:!0,title:C.Z["error.aws.ec2.title"]}):new ye.Z({modal:!0})).setMessage(n),t.open(),!0)},this.awsDataSourceTree.observe("leaf:selected",(function(n){var a=n.memo.node.param;if("awsDb"===a.type&&!e){var s=a.extra,i=s.dbUri.split("/");t.model.set({connectionUrlTemplate:s.jdbcTemplate,driverClass:s.jdbcDriverClass,dbName:s.dBName,dbHost:s.dnsAddress,dbPort:s.dbPort,sName:s.dBName,dbService:i[1],dbInstanceIdentifier:i[2]}),t.model.validate({driverClass:t.model.get("driverClass")})}})),this.awsDataSourceTree.observe("tree:loaded",(function(){t.model.getFullDbTreePath()&&t.awsDataSourceTree.openAndSelectNode(t.model.getFullDbTreePath(),(function(){e=!1}))}))},remove:function(){this.awsDataSourceTree&&this.awsDataSourceTree.stopObserving(),ge.prototype.remove.apply(this,arguments)}});const xe=ne.extend({otherDriverIsPresent:!1,type:B.Z.AZURE_SQL_DATA_SOURCE,defaults:function(){var e={};return r().extend(e,ne.prototype.defaults,{subscriptionId:"",keyStorePassword:"",keyStoreUri:"",serverName:"",dbName:"",selectedDriverClass:"",useMicrosoftDriver:!1,microsoftDriverAvailable:!1,connectionType:U}),e}(),validation:function(){var e={};return r().extend(e,ne.prototype.validation,{subscriptionId:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.azureSqlDataSource.subscriptionId"]}],keyStorePassword:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.azureSqlDataSource.keyStorePassword"]}],keyStoreUri:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.azureSqlDataSource.keyStoreUri"]}],serverName:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.azureSqlDataSource.serverName"]}],dbName:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.dbNameIsEmpty"]}],username:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.username"]}]}),e}(),initialize:function(e,t){f.prototype.initialize.apply(this,arguments),this.isNew()||(this.set("password",Z["input.password.substitution"]),this.set("keyStorePassword",Z["input.password.substitution"])),this.initialization=l().Deferred(),this.drivers=new X([],this.options);var n=this;this.drivers.fetch({reset:!0}).done((function(){n.isNew()?n.set("selectedDriverClass",n.drivers.getDriverByName("sqlserver").get("jdbcDriverClass")):n.set("selectedDriverClass",n.get("driverClass"));var e=n.drivers.getDriverByName("sqlserver_standard");null!=e&&(n.set("microsoftDriverAvailable",e.get("available")),n.set("useMicrosoftDriver",n.get("selectedDriverClass")===e.get("jdbcDriverClass"))),n.initialization.resolve()})),this.on("change:dbName change:serverName change:connectionUrlTemplate change:useMicrosoftDriver",this.updateConnectionUrl),this.on("change:useMicrosoftDriver",this.updateDriverClass)},updateConnectionUrl:function(){if(this.get("connectionUrlTemplate")){var e=this.pick(["dbName","serverName","dbPort"]);e.dbPort=1433;var t=this.drivers.getDriverByName("sqlserver_standard"),n=this.get("connectionUrlTemplate");this.get("useMicrosoftDriver")&&null!=t&&(e.serverName+=".database.windows.net",n=t.get("jdbcUrl")),e.dbHost=e.serverName;var a=this.replaceConnectionUrlTemplatePlaceholdersWithValues(n,e);this.set("connectionUrl",a)}},updateDriverClass:function(){var e=this.drivers.getDriverByName("sqlserver_standard"),t=this.get("useMicrosoftDriver")&&null!=e?"sqlserver_standard":"sqlserver",n=this.drivers.getDriverByName(t).get("jdbcDriverClass");this.set("selectedDriverClass",n),this.set("driverClass",n)},toJSON:function(){var e=ne.prototype.toJSON.apply(this,arguments);return this.options.isEditMode&&e.keyStorePassword===Z["input.password.substitution"]&&(e.keyStorePassword=null),e},getFullDbTreePath:function(){return this.get("serverName")&&this.get("dbName")?"/"+this.get("serverName")+"/"+this.get("dbName"):null}});var _e=n(4839);const Ee=ge.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.aws.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.aws.page.title.edit",modelConstructor:xe,events:function(){var e={};return r().extend(e,ge.prototype.events),e["click #updateDatabaseTree"]="updateDatabaseTree",e},initialize:function(e){ge.prototype.initialize.apply(this,arguments),this.listenTo(this.model,"change",this.onModelChange)},onModelChange:function(){var e=r().keys(this.model.changedAttributes()),t=this;r().each(r().intersection(e,["serverName","dbName","connectionUrl"]),(function(e){t.$("[name='"+e+"']").val(t.model.get(e))}))},updateDatabaseTree:function(e){e.preventDefault(),this.showAzureSqlDsTree("/")},render:function(){return this.$el.empty(),this.renderTimezoneSection(),this.renderAzureSqlSpecificSection(),this.renderTestConnectionSection(),this.initDataSourceTree(),this.options.isEditMode&&this.showAzureSqlDsTree(this.model.getFullDbTreePath()),this},showAzureSqlDsTree:function(e){this.model.validate({subscriptionId:this.model.get("subscriptionId"),keyStorePassword:this.model.get("keyStorePassword"),keyStoreUri:this.model.get("keyStoreUri")}),this.model.isValid("keyStorePassword")&&this.model.isValid("subscriptionId")&&this.azureSqlDataSourceTree.showTreePrefetchNodes(e||"/")},renderAzureSqlSpecificSection:function(){this.$el.append(r().template('<fieldset class="group">\n\n    <js-templateNonce></js-templateNonce>\n\n    <legend><span>{{- i18n[\'resource.dataSource.azureSql.settings.title\']}}</span></legend>\n\n    <fieldset class="group shortFields" id="aws_settings">\n\n        <label title="{{- i18n[\'resource.dataSource.azureSql.setting.subscriptionId.title\']}}" class="control input text ">\n            <span class="wrap">{{- i18n[\'resource.dataSource.azureSql.setting.subscriptionId\']}} ({{- i18n[\'required.field\']}}):</span>\n            <input type="text" value="{{- modelAttributes.subscriptionId }}" name="subscriptionId">\n            <span class="message warning"></span>\n            <span class="message hint"></span>\n        </label>\n\n        <label title="{{- i18n[\'resource.dataSource.azureSql.setting.keyStoreUri.title\']}}" class="control input text">\n            <span class="wrap">{{- i18n[\'resource.dataSource.azureSql.setting.keyStoreUri\']}} ({{- i18n[\'required.field\']}}):</span>\n            <input type="text" value="{{- modelAttributes.keyStoreUri }}" name="keyStoreUri">\n            <button class="button action up" type="button" name="repositoryBrowserButton">\n                <span class="wrap">{{- i18n[\'dialog.file.browse\'] }}...<span class="icon"></span></span>\n            </button>\n            <span class="message warning"></span>\n            <span class="message hint">{{- i18n[\'resource.dataSource.azureSql.optional.keyStoreUri\']}}</span>\n        </label>\n\n        <label title="{{- i18n[\'resource.dataSource.azureSql.setting.keyStorePassword.title\']}}" class="control input password ">\n            <span class="wrap">{{- i18n[\'resource.dataSource.azureSql.setting.keyStorePassword\']}} ({{- i18n[\'required.field\']}}):</span>\n            <input type="password" autocomplete="off" value="{{- modelAttributes.keyStorePassword }}" name="keyStorePassword">\n            <span class="message warning"></span>\n            <span class="message hint"></span>\n        </label>\n\n    </fieldset>\n\n</fieldset>\n\n<fieldset class="group">\n\n    <legend><span>{{- i18n[\'resource.dataSource.azureSql.tree\']}}</span></legend>\n\n    <button class="button action up" id="updateDatabaseTree">\n        <span class="wrap">{{- i18n[\'resource.dataSource.azureSql.updateTree\']}}<span class="icon"></span></span>\n    </button>\n\n</fieldset>\n\n<fieldset class="group">\n\n    <div class="control groupBox" style="height: 150px; margin: 0; width: 538px;">\n        <div class="content">\n            <div class="header">\n                <div class="title"></div>\n            </div>\n            <div class="body" style="height: 137px; overflow: auto; padding: 6px;">\n                <ul class="list collapsible folders hideRoot" id="azureSqlDataSourceTree" style="position: relative; height: 137px; overflow: auto; padding: 6px;"></ul>\n            </div>\n        </div>\n    </div>\n\n</fieldset>\n\n<fieldset class="group shortFields">\n\n    <label title="{{- i18n[\'resource.dataSource.azureSql.server.name.title\']}}" class="control input text">\n        <span class="wrap">{{- i18n[\'resource.dataSource.azureSql.server.name\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.serverName }}" name="serverName">\n        <span class="message warning"></span>\n        <span class="message hint"></span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.azureSql.database.name.title\']}}" class="control input text">\n        <span class="wrap">{{- i18n[\'resource.dataSource.azureSql.database.name\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.dbName }}" name="dbName">\n        <span class="message warning"></span>\n        <span class="message hint"></span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.jdbc.username\']}}" class="control input text ">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.username\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.username }}" name="username">\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n[\'resource.dataSource.azureSql.database.username.hint\']}}</span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.jdbc.password\']}}" class="control input password ">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.password\']}}:</span>\n        <input type="password" value="{{- modelAttributes.password }}" name="password">\n        <span class="message warning"></span>\n        <span class="message hint"></span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.azureSql.useMicrosoftDriver\']}}" class="control input checkBox">\n        <span class="wrap">{{- i18n[\'resource.dataSource.azureSql.useMicrosoftDriver\']}}\n            {{ if (!modelAttributes.microsoftDriverAvailable) { }}\n                ({{- i18n["resource.dataSource.azureSql.microsoftDriverMissing"] }})\n            {{ } }}\n            </span>\n        <input type="checkbox" name="useMicrosoftDriver" value="{{- modelAttributes.useMicrosoftDriver }}"\n            {{ if (modelAttributes.useMicrosoftDriver) { }}checked="checked"{{ } }} \n            {{ if (!modelAttributes.microsoftDriverAvailable) { }}disabled="disabled"{{ } }}>\n    </label>\n\n\n</fieldset>\n\n<fieldset class="group mediumFields">\n\n    <label title="{{- i18n[\'resource.analysisConnection.requiredURL\']}}" class="control input text">\n        <span class="wrap">{{- i18n[\'resource.dataSource.jdbc.url\']}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.connectionUrl }}" name="connectionUrl">\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n[\'resource.dataSource.azureSql.connectionUrl.hint\']}}</span>\n    </label>\n\n</fieldset>',this.templateData())),this.browseButton=he.Z.initialize({i18n:C.Z,template:me,resourceInput:this.$el.find("[name=keyStoreUri]")[0],browseButton:this.$el.find("[name=repositoryBrowserButton]")[0],providerId:"fileResourceBaseTreeDataProvider",dialogTitle:C.Z["resource.Add.Files.Title"],selectLeavesOnly:!0,onChange:r().bind((function(e){this.model.set("keyStoreUri",e),this.model.validate({keyStoreUri:e})}),this)})},initDataSourceTree:function(){var e=this.options.isEditMode,t=this,n={hideLoader:!0,bShowRoot:!1,treeId:"azureSqlDataSourceTree",providerId:"azureSqlDataSourceTreeDataProvider",selectLeavesOnly:!0,additionalParams:function(){return{subscriptionId:t.model.get("subscriptionId"),keyStorePassword:t.model.get("keyStorePassword"),keyStoreUri:t.model.get("keyStoreUri"),datasourceUri:t.model.get("uri")}}};this.azureSqlDataSourceTree=Ce.Z.createRepositoryTree("azureSqlDataSourceTree",n),this.azureSqlDataSourceTree.httpErrorHandler=function(e){var t,n,a=!1,s=["azure.exception.datasource.recovery.public.ip.not.provided","azure.exception.datasource.recovery.firewall.rule.name.not.provided","azure.exception.datasource.recovery.server.name.not.provided","azure.exception.datasource.recovery.subscription.id.not.provided","azure.exception.datasource.recovery.key.store.file.not.provided","azure.exception.datasource.recovery.key.store.type.not.provided","azure.exception.datasource.key.error","azure.exception.datasource.auth.error","azure.exception.datasource.cannot.retrieve.database.list","azure.exception.datasource.cannot.ensure.firewall.rule","azure.exception.datasource.cannot.recover.datasource"];for(n=0;n<s.length;n++){var i=s[n];if(-1!==e.responseText.indexOf(i)){a=_e.Z[i];break}}return!!a&&((t=new ye.Z({modal:!0})).setMessage(a),t.open(),!0)},this.azureSqlDataSourceTree.observe("leaf:selected",(function(n){var a=n.memo.node.param;if("leaf"===a.type&&!e){var s=a.extra;t.model.set({serverName:s.serverName,dbName:s.dBName,connectionUrlTemplate:s.jdbcTemplate,driverClass:s.jdbcDriver})}})),this.azureSqlDataSourceTree.observe("tree:loaded",(function(){t.model.getFullDbTreePath()&&t.azureSqlDataSourceTree.openAndSelectNode(t.model.getFullDbTreePath(),(function(){e=!1;var n=t.azureSqlDataSourceTree.getSelectedNode();n&&n.param&&n.param.extra&&t.model.set({connectionUrlTemplate:n.param.extra.jdbcTemplate,dbHost:n.param.extra.dnsAddress,dbPort:n.param.extra.dbPort})}))}))},remove:function(){this.azureSqlDataSourceTree&&this.azureSqlDataSourceTree.stopObserving(),ge.prototype.remove.apply(this,arguments)}}),Ne=s().Model.extend({defaults:{id:void 0,uri:"",name:"",readOnly:!1},idAttribute:"uri",validation:{id:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.name"]},{maxLength:p.Z.settings.NAME_MAX_LENGTH,msg:C.Z["ReportDataSourceValidator.error.too.long.reportDataSource.name"]},{startsWithLetter:!0,msg:C.Z["ReportDataSourceValidator.error.invalid.chars.shouldStartWithLetter"]},{containsOnlyWordCharacters:!0,msg:C.Z["ReportDataSourceValidator.error.invalid.chars.wordCharsOnly"]}]},initialize:function(e){this.set("name",/.*\/(.+)$/.exec(e.uri)[1])}}),je=s().Collection.extend({model:Ne,hasNonReadOnlyItems:function(){return this.some((function(e){return!e.get("readOnly")}))}}),Ie=f.extend({type:B.Z.VIRTUAL_DATA_SOURCE,defaults:function(){var e={};return r().extend(e,f.prototype.defaults,{subDataSources:[]}),e}(),validation:function(){var e={};return r().extend(e,f.prototype.validation,{subDataSources:[{arrayMinLength:1,msg:C.Z["ReportDataSourceValidator.error.sub.datasources.needed"]},{fn:function(e,t,n){var a=r().map(e,(function(e){return e.id.toLowerCase()})),s={},i=[];for(var o in r().each(a,(function(e){e in s?s[e]++:s[e]=1})),s)s[o]>1&&i.push(o);if(i.length>0)return C.Z["ReportDataSourceValidator.error.sub.datasources.id.duplicates"].replace("{0}",i.join(", "))}},{fn:function(){for(var e=null,t=0;t<this.subDataSources.models.length;t++)this.subDataSources.models[t].isValid(!0)||(e=!0);return e}}]}),e}(),initialize:function(e,t){f.prototype.initialize.apply(this,arguments),this.subDataSources=new je(this.get("subDataSources")),this.listenTo(this.subDataSources,"change reset",this.updateSubDataSourcesArray),t.dependentResources&&t.dependentResources.length>0&&this.subDataSources.forEach((function(e){e.set("readOnly",!0)}))},updateSubDataSourcesArray:function(){this.set("subDataSources",this.subDataSources.toJSON())}});var Le=n(33806),Ue=n(56461),Pe=n(84612);v.Z.dependentResources={dependenciesPanel:null,show:function(e,t,n){this.dependenciesPanel=l()("#dependencies"),this._$title=this.dependenciesPanel.find(".content .header .title"),n.dialogTitle&&(this._titleBackup=this._$title.html(),this._$title.html(n.dialogTitle)),v.Z.popup.show(this.dependenciesPanel[0]),this._changeMessage(n),this._switchButtons(n);var a=this._initList(e);this.dependenciesPanel.on("click",(function(e){var n=l()(e.target).closest("button").attr("id"),s=t&&t[n];r().include(["dependenciesBtnSave","dependenciesBtnSaveAs","dependenciesBtnOk","dependenciesBtnCancel"],n)&&(v.Z.dependentResources.hide(),a.setItems([]),e.stopPropagation(),s&&s())}))},hide:function(){this.dependenciesPanel&&(this.dependenciesPanel.off("click"),v.Z.popup.hide(this.dependenciesPanel[0]),this.dependenciesPanel=null),this._titleBackup&&this._$title&&(this._$title.html(this._titleBackup),this._titleBackup=null)},_changeMessage:function(e){l()("#topMessage").html(e.topMessage),l()("#bottomMessage").html(e.bottomMessage)},_initList:function(e){var t=new Ue.W.List("dependenciesList",{listTemplateDomId:"tabular_oneColumn",itemTemplateDomId:"tabular_oneColumn:leaf"}),n=[];return e&&(n=e.collect((function(e){var t=new Ue.W.ListItem({cssClassName:Le.Z.LEAF_CLASS,value:e});return t.processTemplate=function(e){var t,n=l()(e).find(".uri");return t="string"==typeof this.getValue()?this.getValue():this.getValue().uristring?this.getValue().uristring:this.getValue().URIString,n.html(Pe.Z.hardEscape(t)),e},t}))),t.setItems(n),t.show(),t},_switchButtons:function(e){var t,n={save:l()("#dependenciesBtnSave"),saveAs:l()("#dependenciesBtnSaveAs"),ok:l()("#dependenciesBtnOk"),cancel:l()("#dependenciesBtnCancel")};t=e.buttons?e.buttons:e.okOnly?["ok"]:e.canSave?["save","saveAs","cancel"]:["ok","cancel"],r().each(n,(function(e,n){t.indexOf(n)<0?e.addClass("hidden"):e.removeClass("hidden")}))}};const Oe=v.Z.dependentResources,Re=s().View.extend({events:{"keyup input[type='text']":"updateDataSourceId","change input[type='text']":"updateDataSourceId"},initialize:function(e){var t=this.model.toJSON();this._listItem=new Ue.W.UnderscoreTemplatedListItem({template:'<li class="leaf">\n\n    <js-templateNonce></js-templateNonce>\n    <div class="wrap button {{ if (readOnly) { }}disabled{{ } }}">\n        <div class="column one">\n            <p class="dataSourceName">{{- name }}</p>\n        </div>\n        <div class="column two">\n            <input type="text" size="30" class="dataSourceID" value="{{- id }}" {{ if (readOnly) { }}readonly="true"{{ } }}>\n            <div class="wrap validatorMessageContainer">\n                <span class="message warning"></span>\n            </div>\n        </div>\n    </div>\n</li>',cssClassName:Le.Z.LEAF_CLASS,value:t,tooltipText:this.model.get("uri")}),N.Z.bind(this,{valid:this.fieldIsValid,invalid:this.fieldIsInvalid,forceUpdate:!0})},updateDataSourceId:function(e){var t=this.$("input[type='text']"),n={};n.id=l().trim(t.val()),this.model.set(n),this.model.validate(n),this._listItem.setValue(this.model.toJSON())},getListItem:function(){return this._listItem},setRootElement:function(){this.setElement(this._listItem._getElement())},fieldIsValid:function(e,t,n){var a=e.$("input[type='text']").parent();a.removeClass("error"),a.find(".validatorMessageContainer").removeClass("error"),a.find(".message.warning").text("")},fieldIsInvalid:function(e,t,n,a){var s=e.$("input[type='text']").parent();s.addClass("error"),s.find(".validatorMessageContainer").addClass("error"),s.find(".message.warning").text(n)}}),Me=s().View.extend({events:{"blur input.dataSourceID":"disableSelection","focus input.dataSourceID":"enableSelection"},initialize:function(e){this.options=e,this.subviews=[],this._list=new Ue.W.UnderscoreTemplatedList("selectedSubDataSourcesList",{template:'<ul id="selectedDataSourcesTemplate" class="list tabular twoColumn">\n\n    <js-templateNonce></js-templateNonce>\n</ul>',dragPattern:"",multiSelect:!0,selectOnMousedown:!S.supportsTouch}),this._list.observe("item:unselected",r().bind(this._itemUnselected,this)),this._list.observe("item:selected",r().bind(this._itemSelected,this)),this.setElement("#selectedSubDataSourcesList",!1),this.listenTo(this.collection,"reset",this.render)},disableSelection:function(){(0,y.c4K)(this._list._getElement())},enableSelection:function(){(0,y.Yf2)(this._list._getElement())},_itemUnselected:function(e){var t=this.getSubviewByListItem(e.memo.item),n=t?t.model:null;this.trigger("item:unselected",n)},_itemSelected:function(e){var t=this.getSubviewByListItem(e.memo.item),n=t?t.model:null;this.trigger("item:selected",n)},render:function(e,t){this._list.resetSelected();var n=[],a=[],s=[],i=!1,o=this.collection.map((function(e){return e.get("uri")})),l=this;if(t&&t.previousModels&&(s=r().map(t.previousModels,(function(e){return e.get("uri")})),r().each(t.previousModels,(function(e){r().include(o,e.get("uri"))||a.push(e)})),i=!0),this.collection.forEach((function(e){r().include(s,e.get("uri"))||n.push(e)})),n.length){if(r().each(n,(function(e){var t=new Re({model:e});l.subviews.push(t),l._list.addItems([t.getListItem()]),l._list.show()})),this._list.show(),i){var c=r().compact(r().map(n,r().bind(l.getSubviewByModel,l)));r().each(c,(function(e){l._list.selectItem(e.getListItem(),!0)}))}r().each(this.subviews,(function(e){r().defer(r().bind(e.setRootElement,e))}))}return a.length&&(r().each(a,(function(e){l.removeSubview(e)})),this._list.show()),this},getSubviewByModel:function(e){return r().find(this.subviews,(function(t){return t.model===e}))},getList:function(){return this._list},getListLength:function(){return this._list._items.length},getSelectedModels:function(){var e=this._list.getSelectedItems(),t=r().compact(r().map(e,r().bind(this.getSubviewByListItem,this)));return r().map(t,(function(e){return e.model}))},getSubviewByListItem:function(e){return r().find(this.subviews,(function(t){return t.getListItem()===e}))},removeSubview:function(e){var t=this.getSubviewByModel(e);t&&(this._list.removeItems([t.getListItem()]),t.remove(),this._list.show())},removeSubviews:function(){var e=r().map(this.subviews,(function(e){return e.getListItem()}));this._list.removeItems(e),r().invoke(this.subviews,"remove")},remove:function(){this.removeSubviews(),s().View.prototype.remove.apply(this,arguments)}}),Be=j.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.virtual.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.virtual.page.title.edit",hasDependedResources:!1,modelConstructor:Ie,events:{"keyup input[type='text'][class!='dataSourceID'], textarea":"updateModelProperty","change input[type='text'][class!='dataSourceID'], textarea, select":"updateModelProperty","click [name=toRight]":"chooseTreeNodes","click [name=toLeft]":"removeSelectedSubDataSources","click [name=allToLeft]":"removeAllSubDataSources"},initialize:function(e){this.dependentResources=e.dependentResources,this._subDataSourcesHiddenNodes={},this.dependentResources&&this.dependentResources.length>0&&(this.hasDependedResources=!0),j.prototype.initialize.apply(this,arguments),this.showDependentResources(),this.listenTo(this.model.subDataSources,"reset",this.updateAllToLeftButtonState)},chooseTreeNodes:function(e){e.preventDefault(),this.$("[name=toRight]").attr("disabled","disabled").removeClass("over");var t=this.subDataSourcesTree.selectedNodes,n=r().compact(r().map(t,(function(e){return e?new Ne({name:e.name,id:e.param.id,uri:e.param.uri,readOnly:!1}):null})));this.model.subDataSources.reset(this.model.subDataSources.models.concat(n));var a=r().map(t,(function(e){return e.param.uri}));this._hideAvailableSubDataSources(a)},removeAllSubDataSources:function(e){if(e.preventDefault(),!this.hasDependedResources){this.subDataSourcesTree._deselectAllNodes();var t=this;this.model.subDataSources.forEach((function(e){t._unhideAvailableSubDataSources(e.get("uri"))})),this.model.subDataSources.reset([]),this.updateRightButtonState()}},removeSelectedSubDataSources:function(e){e.preventDefault(),this.subDataSourcesTree._deselectAllNodes();var t=this.selectedSubDataSourcesList.getSelectedModels(),n=this,a=[];r().each(t,(function(e){n._unhideAvailableSubDataSources(e.get("uri"))})),this.model.subDataSources.forEach((function(e){r().include(t,e)||a.push(e)})),this.model.subDataSources.reset(a),this.updateRightButtonState()},updateAllToLeftButtonState:function(){this.hasDependedResources||0===this.selectedSubDataSourcesList.getListLength()?this.$("[name=allToLeft]").attr("disabled","disabled").removeClass("over"):this.$("[name=allToLeft]").removeAttr("disabled")},updateRightButtonState:function(){for(var e=this.$("[name=toRight]"),t=this.subDataSourcesTree.selectedNodes,n=!1,a=!1,s=0;s<t.length;s++){if(t[s].isParent()||this.model.subDataSources.where({uri:t[s].param.uri}).length){a=!0;break}n=!0}n&&!a?e.removeAttr("disabled"):e.attr("disabled","disabled").removeClass("over")},updateLeftButtonState:function(){var e=this.selectedSubDataSourcesList.getSelectedModels(),t=this.$("[name=toLeft]");e.length>0?t.removeAttr("disabled"):t.attr("disabled","disabled").removeClass("over")},render:function(){return this.$el.empty(),this.renderVirtualSpecificSection(),this.updateAllToLeftButtonState(),this},showDependentResources:function(){this.hasDependedResources&&Oe.show(this.dependentResources,{},{canSave:!1,okOnly:!0,topMessage:C.Z["resource.dataSource.virtual.dependencies.top.message"],bottomMessage:C.Z["resource.dataSource.virtual.dependencies.bottom.message"]})},renderVirtualSpecificSection:function(){var e=this,t=function(){e._hideAvailableSubDataSources(e.model.subDataSources.map((function(e){return e.get("uri")})))};this.$el.append(r().template('<fieldset class="group">\n\n    <js-templateNonce></js-templateNonce>\n    <input type="hidden" name="subDataSources" value=""/>\n    <span class="message warning"></span>\n</fieldset>\n<fieldset class="group">\n    <div style="position:relative" class="content" id="dataSourcesSelector">\n        <div class="body twoColumn_equal pickWells" id="subDsSelectionContainer">\n            <div class="moveButtons" id="moveButtons">\n                <button title="{{- i18n[\'resource.moveRight\'] }}" class="button action square move right up"\n                        disabled="disabled" name="toRight"><span class="wrap">{{- i18n["resource.moveRight"] }}<span\n                        class="icon"></span></span></button>\n                <button title="{{- i18n[\'resource.moveLeft\'] }}" class="button action square move left up"\n                        disabled="disabled" name="toLeft"><span class="wrap">{{- i18n["resource.moveLeft"] }}<span\n                        class="icon"></span></span></button>\n                <button title="{{- i18n[\'resource.moveAllLeft\'] }}" class="button action square move toLeft up"\n                        disabled="disabled" name="allToLeft"><span class="wrap">{{- i18n["resource.moveAllLeft"] }}<span\n                        class="icon"></span></span></button>\n            </div>\n\n            <div class="column secondary" id="availableDataSources">\n                <label for="subDataSourcesTree" class="control">\n                    <span class="wrap">{{- i18n["resource.dataSource.virtual.availableDataSources"] }}</span>\n                    <br>\n\n                    <div class="control groupBox">\n                        <div class="content ">\n                            <div class="header ">\n                                <div class="title"></div>\n                            </div>\n                            <div class="body  ">\n                                <ul class="list collapsible folders" id="subDataSourcesTree"></ul>\n                            </div>\n                        </div>\n                    </div>\n                </label>\n            </div>\n\n            <div class="column primary" id="selectedDataSources">\n                <label for="selectedSubDataSourcesList" class="control">\n                    <span class="wrap">{{- i18n["resource.dataSource.virtual.selectedDataSources"] }}</span>\n                    <br>\n\n                    <div class="content">\n                        <ul class="list tabular twoColumn header" id="selectedDataSourcesHeader">\n                            <li>\n                                <div class="wrap">\n                                    <div class="column one">\n                                        <p class="dataSourceName">{{- i18n["resource.dataSource.name"] }}</p>\n                                    </div>\n                                    <div class="column two">\n                                        <p class="dataSourceID">{{- i18n["resource.dataSource.virtual.subDsId"] }}</p>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                        <div id="selectedSubDataSourcesListContainer">\n                            <ol class="list tabular twoColumn" id="selectedSubDataSourcesList"></ol>\n                        </div>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n</fieldset>',this.templateData())),this.$el.append(r().template('<div id="dependencies" class="panel dialog overlay dependencies sizeable moveable hidden centered_vert centered_horz">\n\n    <js-templateNonce></js-templateNonce>\n    <div class="sizer diagonal"></div>\n    <div class="content hasFooter ">\n        <div class="header mover">\n            <div class="title">{{- i18n["dialog.dependencies.title"] }}</div>\n        </div>\n        <div class="body">\n            <p id="topMessage"></p>\n\n            <div class="control groupBox">\n                <ul id="dependenciesList"></ul>\n            </div>\n            <p id="bottomMessage" class="saveMessage"></p>\n        </div>\n        <div class="footer ">\n            <button id="dependenciesBtnSave" class="button action primary up">\n                <span class="wrap">{{- i18n["button.save"] }}</span>\n                <span class="icon"></span>\n            </button>\n            <button id="dependenciesBtnSaveAs" class="button action primary up">\n                <span class="wrap">{{- i18n["button.saveAs"] }}</span>\n                <span class="icon"></span>\n            </button>\n            <button id="dependenciesBtnOk" class="button action primary up">\n                <span class="wrap">{{- i18n["button.ok"] }}</span>\n                <span class="icon"></span>\n            </button>\n            <button id="dependenciesBtnCancel" class="button action up">\n                <span class="wrap">{{- i18n["button.cancel"] }}</span>\n                <span class="icon"></span>\n            </button>\n        </div>\n    </div>\n</div>',this.templateData())),this.selectedSubDataSourcesList=new Me({collection:this.model.subDataSources}),this.listenTo(this.selectedSubDataSourcesList,"item:unselected item:selected",r().bind(this.updateLeftButtonState,this)),this.selectedSubDataSourcesList.render(),this.subDataSourcesTree=Ce.Z.createRepositoryTree("subDataSourcesTree",{treeId:"subDataSourcesTree",providerId:"joinableDsTreeDataProvider",selectLeavesOnly:!0,multiSelectEnabled:!0}),this.subDataSourcesTree.observe("leaf:dblclick",r().bind(this.chooseTreeNodes,this)),this.subDataSourcesTree.observe("node:selected",r().bind(this.updateRightButtonState,this)),this.subDataSourcesTree.observe("node:unselected",r().bind(this.updateRightButtonState,this)),this.subDataSourcesTree.observe("leaf:selected",r().bind(this.updateRightButtonState,this)),this.subDataSourcesTree.observe("leaf:unselected",r().bind(this.updateRightButtonState,this)),this.subDataSourcesTree.observe("children:loaded",t),this.subDataSourcesTree.showTreePrefetchNodes(this.model.subDataSources.map((function(e){return e.get("uri")})).join(","),t)},_hideAvailableSubDataSources:function(e){var t=this;if(r().isArray(e))r().each(e,(function(e){t._hideAvailableSubDataSources(e)}));else{var n=this.subDataSourcesTree.findLastLoadedNode(e);if(n&&n.param.uri===e){this._subDataSourcesHiddenNodes[e]={parent:n.parent,child:n};var a=n.parent;a.removeChild(n),a.resortChilds()}}},_unhideAvailableSubDataSources:function(e){function t(e,t){e.processNodePath(t,(function(n){n.parent&&(e.rootNode!=n.parent&&e.getState(n.parent.id)==Ce.Z.TreeNode.State.CLOSED&&n.parent.handleNode(),n.param.uri===t&&n.select())}))}var n=this,a=[];r().each(r().isArray(e)?e:[e],(function(e){var s=n._subDataSourcesHiddenNodes[e];s?(s.parent.addChild(s.child),s.parent.resortChilds(),s.parent.refreshNode(),t(n.subDataSourcesTree,e)):a.push(e)})),a.length&&this.subDataSourcesTree.showTreePrefetchNodes(a.join(","),(function(){r().each(a,r().bind(t,this,n.subDataSourcesTree))}))},remove:function(){this.selectedSubDataSourcesList&&this.selectedSubDataSourcesList.remove(),j.prototype.remove.apply(this,arguments)}}),Fe=f.extend({type:B.Z.BEAN_DATA_SOURCE,defaults:function(){var e={};return r().extend(e,f.prototype.defaults,{beanName:"",beanMethod:"",connectionType:P}),e}(),validation:function(){var e={};return r().extend(e,f.prototype.validation,{beanName:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.beanName"]}],beanMethod:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.reportDataSource.beanMethod"]}]}),e}()}),Ze=j.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.bean.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.bean.page.title.edit",modelConstructor:Fe,render:function(){return this.$el.empty(),this.renderBeanSpecificSection(),this.renderTestConnectionSection(),this},renderBeanSpecificSection:function(){this.$el.append(r().template('<fieldset class="group shortFields">\n\n    <js-templateNonce></js-templateNonce>\n\n    <legend class="offLeft"><span></span></legend>\n\n    <label title="{{- i18n[\'resource.dataSource.bean.name\'] }}" class="control input text">\n        <span class="wrap">{{- i18n["resource.dataSource.bean.name"]}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.beanName }}" name="beanName">\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n["resource.dataSource.bean.hint1"]}}</span>\n    </label>\n\n    <label title="{{- i18n[\'resource.dataSource.bean.method\'] }}" class="control input text">\n        <span class="wrap">{{- i18n["resource.dataSource.bean.method"]}} ({{- i18n[\'required.field\']}}):</span>\n        <input type="text" value="{{- modelAttributes.beanMethod }}" name="beanMethod">\n        <span class="message warning"></span>\n        <span class="message hint">{{- i18n["resource.dataSource.bean.hint2"]}}</span>\n    </label>\n\n</fieldset>',this.templateData()))}}),ke=q.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.mongo.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.mongo.page.title.edit",render:function(){return this.$el.empty(),this.renderMongoDbSpecificSection(),this.renderTestConnectionSection(),this},renderMongoDbSpecificSection:function(){this.$el.append(r().template('<fieldset name="customFieldsContainer" class="group shortFields">\n\n    <js-templateNonce></js-templateNonce>\n\n\t<legend class="offLeft"><span>Access Properties</span></legend>\n\n\n\n\n\t<label title="MongoDB URI (required)" class="control input text">\n\t\t<span class="wrap">{{- i18n[\'MongoDbDataSource.properties.mongoURI\'] }} ({{- i18n[\'required.field\']}}):</span>\n\t\t<input name="mongoURI" type="text" size="40" class="fnormal" value="{{- modelAttributes.mongoURI }}">\n\t\t<span class="message hint"></span>\n\t\t<span class="message warning"></span>\n\t</label>\n\n\n\t<label title="User Name (optional)" class="control input text">\n\t\t<span class="wrap">{{- i18n[\'MongoDbDataSource.properties.username\'] }} ({{- i18n[\'optional.field\']}}):</span>\n\t\t<input name="username" type="text" size="40" class="fnormal" value="{{- modelAttributes.username }}">\n\t\t<span class="message hint"></span>\n\t\t<span class="message warning"></span>\n\t</label>\n\n\t<label title="Password (optional)" class="control input text">\n\t\t<span class="wrap">{{- i18n[\'MongoDbDataSource.properties.password\'] }} ({{- i18n[\'optional.field\']}}):</span>\n\t\t<input name="password" type="password" size="40" class="fnormal" value="{{- modelAttributes.password }}">\n\t\t<span class="message hint"></span>\n\t\t<span class="message warning"></span>\n\t</label>\n\n</fieldset>',this.templateData()))}}),ze={REPOSITORY:{name:"repository",label:"resource.datasource.text.fileLocation.options.repository"},SERVER_FILE_SYSTEM:{name:"serverFileSystem",label:"resource.datasource.text.fileLocation.options.serverFileSystem"}};var Ve=V.extend({fileTypes:["pdf","config"],defaults:function(){var e={};return r().extend(e,V.prototype.defaults,{dataSourceName:"mongoDbJDBCDataSource",fileSourceType:"repository",timeZone:""}),e}(),validation:function(){var e={};return r().extend(e,V.prototype.validation,{serverAddress:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.host"]}],portNumber:[{required:!0,msg:C.Z["ReportDataSourceValidator.error.not.empty.server.port"]}],repositoryFileName:[{fn:function(e,t,n){return!n.autoSchemaDefinition&&"repository"===n.fileSourceType&&(r().isNull(e)||r().isUndefined(e)||r().isString(e)&&""===e)?C.Z["fillParameters.error.mandatoryField"]:null}},{fn:function(e,t,n){return n.autoSchemaDefinition||"repository"!==n.fileSourceType||r().isString(e)&&""!==e&&0===e.indexOf("/")?null:C.Z["resource.file.invalid.path"]}}],serverFileName:[{fn:function(e,t,n){return!n.autoSchemaDefinition&&"serverFileSystem"===n.fileSourceType&&(r().isNull(e)||r().isUndefined(e)||r().isString(e)&&""===e)?C.Z["fillParameters.error.mandatoryField"]:null}}]}),e}(),isLocalFileSystemAccessAllowed:function(e){return e&&e._embedded&&e._embedded.workflow&&r().find(e._embedded.workflow,(function(e){return"serverSettings"===e.name}))},parse:function(){var e=V.prototype.parse.apply(this,arguments);if(r().isString(e.fileName)){if(-1!==e.fileName.indexOf("repo:")){var t=e.fileName.split(":");e.fileSourceType=ze.REPOSITORY.name,e.repositoryFileName=t[1]}else e.fileSourceType=ze.SERVER_FILE_SYSTEM.name,e.serverFileName=e.fileName;delete e.fileName,e.autoSchemaDefinition=!1}else e.autoSchemaDefinition=!0;return e.timezone=e.timeZone,delete e.timeZone,e},toJSON:function(){var e=V.prototype.toJSON.apply(this,arguments);return e.fileName=e.serverFileName,e},customFieldsToJSON:function(e,t){return e.fileSourceType===ze.REPOSITORY.name?e.fileName="repo:"+e.repositoryFileName:e.fileSourceType===ze.SERVER_FILE_SYSTEM.name&&(e.fileName=e.serverFileName),delete e.repositoryFileName,delete e.serverFileName,e.autoSchemaDefinition&&(delete e.fileName,delete e.fileSourceType),delete e.autoSchemaDefinition,e.timeZone=e.timezone,delete e.timezone,e=V.prototype.customFieldsToJSON.call(this,e,t)},resetValidation:function(){this.validation=r().clone(Ve.prototype.validation)}});const qe=Ve;var $e=null,Je=null;const Ge=q.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.mongoJdbc.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.mongoJdbc.page.title.edit",modelConstructor:qe,browseButton:!1,events:function(){var e=r().extend({},q.prototype.events);return e["change [name=fileSourceType]"]="changeFileSourceType",e["change [name=autoSchemaDefinition]"]="changeAutoSchemaDefinition",e},initialize:function(e){q.prototype.initialize.apply(this,arguments),this.listenTo(this.model,"change:serverFileName",this.adjustFileSystemConnectButton),this.loadAdminWorkflows()},loadAdminWorkflows:function(){return $e||($e=(0,se.Z)({type:"GET",dataType:"json",url:h.Z.contextPath+"/rest_v2/hypermedia/workflows?parentName=admin"}).then((function(e){Je=e}))),$e},changeFileSourceType:function(){r().defer(r().bind((function(){this.renderFileLocationSection()}),this))},changeAutoSchemaDefinition:function(){r().defer(r().bind((function(){this.renderFileLocationSection()}),this))},render:function(){var e=this;return this.loadAdminWorkflows().then((function(){e.$el.empty(),e.renderMongoDbSpecificSection(),e.renderFileLocationSection(),e.renderTimezoneSection(),e.renderTestConnectionSection(),e.$el.find("[name=serverAddress]").focus()})),this},validationMethodOnSaveClick:function(e){!this.model.get("parentFolderUri")&&this.model.set("parentFolderUri","/"),!this.model.get("label")&&this.model.set("label",l()("[name=dataSourceType] option:selected").text());var t=this;this.model.save({},{dryRun:!0}).fail((function(e){var n=!1;try{n=JSON.parse(e.responseText)}catch(e){}var a=r().isArray(n)?n:[n];r().each(a,(function(e){e&&e.errorCode&&e.parameters&&("illegal.parameter.value.error"===e.errorCode&&"resourceReference.uri"===e.parameters[0]?t.fieldIsInvalid(t,"repositoryFileName",u["resource.file.invalid.path"],"name"):"invalid.server.file.system.path"===e.errorCode&&"textDataSource.propertyMap[fileName]"===e.parameters[0]&&t.fieldIsInvalid(t,"serverFileName",u["resource.file.invalid.path"],"name"))}))})).done(e)},templateData:function(){var e=r().extend({},ze);return this.model.isLocalFileSystemAccessAllowed(Je)||delete e.SERVER_FILE_SYSTEM,r().extend(q.prototype.templateData.apply(this,arguments),{fileSourceTypeOptions:e})},renderMongoDbSpecificSection:function(){this.$el.append(r().template('<fieldset class="group shortFields mongoDbJdbcSpecificFields">\n\n    <js-templateNonce></js-templateNonce>\n\n\t<legend class="offLeft"><span></span></legend>\n\n\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.host\'] }}" class="control input text">\n\t\t<span class="wrap">{{- i18n["resource.datasource.mongoJdbc.host"]}} ({{- i18n[\'required.field\']}}):</span>\n\t\t<input type="text" value="{{- modelAttributes.serverAddress }}" name="serverAddress">\n\t\t<span class="message warning"></span>\n\t\t<span class="message hint"></span>\n\t</label>\n\n\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.port.number\'] }}" class="control input text">\n\t\t<span class="wrap">{{- i18n["resource.datasource.mongoJdbc.port.number"]}} ({{- i18n[\'required.field\']}}):</span>\n\t\t<input type="text" value="{{- modelAttributes.portNumber }}" name="portNumber">\n\t\t<span class="message warning"></span>\n\t\t<span class="message hint"></span>\n\t</label>\n\n\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.database.name\'] }}" class="control input text">\n\t\t<span class="wrap">{{- i18n["resource.datasource.mongoJdbc.database.name"]}}:</span>\n\t\t<input type="text" value="{{- modelAttributes.database }}" name="database">\n\t\t<span class="message warning"></span>\n\t\t<span class="message hint"></span>\n\t</label>\n\n\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.user.name\'] }}" class="control input text">\n\t\t<span class="wrap">{{- i18n["resource.datasource.mongoJdbc.user.name"]}}:</span>\n\t\t<input type="text" value="{{- modelAttributes.username }}" name="username">\n\t\t<span class="message warning"></span>\n\t\t<span class="message hint"></span>\n\t</label>\n\n\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.password\'] }}" class="control input text">\n\t\t<span class="wrap">{{- i18n["resource.datasource.mongoJdbc.password"]}}:</span>\n\t\t<input type="password" value="{{- modelAttributes.password }}" name="password">\n\t\t<span class="message warning"></span>\n\t\t<span class="message hint"></span>\n\t</label>\n\n\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.connection.options\'] }}" class="control input text">\n\t\t<span class="wrap">{{- i18n["resource.datasource.mongoJdbc.connection.options"]}}:</span>\n\t\t<input type="text" value="{{- modelAttributes.connectionOptions }}" name="connectionOptions">\n\t\t<span class="message warning"></span>\n\t\t<span class="message hint"></span>\n\t</label>\n\n\t<div class="control checkBox">\n\t\t<label for="__jrs_autoSchemaDefinitionCheckbox" title="{{- i18n[\'resource.datasource.mongoJdbc.schema.auto.generate\']}}" class="wrap">\n\t\t\t{{- i18n[\'resource.datasource.mongoJdbc.schema.auto.generate\']}}\n\t\t</label>\n\t\t<input type="checkbox" id="__jrs_autoSchemaDefinitionCheckbox" name="autoSchemaDefinition" {{ if (modelAttributes.autoSchemaDefinition) { }}checked{{ } }} {{- isEditMode ? \'disabled=disabled\' : \'\'}} >\n\t</div>\n\n\t<div name="fileLocationContainer" class="section"></div>\n</fieldset>',this.templateData()))},renderFileLocationSection:function(){this.renderOrAddAnyBlock(this.$el.find("[name=fileLocationContainer]"),r().template('<div name="fileLocationContainer" class="">\n\n    <js-templateNonce></js-templateNonce>\n\n\t{{ if (_.keys(fileSourceTypeOptions).length > 1) { }}\n\t<div class="">\n\t\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.fileLocation.source\'] }}" class="control select">\n\t\t\t<span class="wrap">{{- i18n[\'resource.datasource.mongoJdbc.fileLocation.source\'] }}:</span>\n\t\t\t<select id="fileSourceSelect" name="fileSourceType" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? \'disabled=disabled\' : \'\'}}>\n\t\t\t{{ _.each(fileSourceTypeOptions, function(item) { }}\n\t\t\t\t<option value="{{- item.name }}" {{- (item.name == modelAttributes.fileSourceType) ? "selected=selected" : "" }} > {{- i18n[item.label] }}</option>\n\t\t\t{{ }); }}\n\t\t\t</select>\n\t\t\t<span class="message warning"></span>\n\t\t</label>\n\t</div>\n    {{ } }}\n\n\t{{ if (modelAttributes.fileSourceType === "repository") { }}\n\n\t<div id="repositoryInput" class="">\n\t\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.fileLocation.repository.fileLocation\']}}" class="control input text">\n\t\t\t<span class="wrap">{{- i18n[\'resource.datasource.mongoJdbc.fileLocation.repository.fileLocation\']}}{{ if (!modelAttributes.autoSchemaDefinition) { }} ({{- i18n[\'required.field\']}}){{ } }}:</span>\n\t\t\t<input type="text" value="{{- modelAttributes.repositoryFileName }}" name="repositoryFileName" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? \'disabled=disabled\' : \'\'}}>\n\t\t\t<button class="button action up" type="button" name="repositoryBrowserButton"  {{- isEditMode || modelAttributes.autoSchemaDefinition ? \'disabled=disabled\' : \'\'}}>\n\t\t\t       <span class="wrap">{{- i18n[\'dialog.file.browse\'] }}...<span class="icon"></span></span>\n\t\t\t</button>\n\t\t\t<span class="message warning"></span>\n\t\t</label>\n\t</div>\n\n\t{{ } else { }}\n\n\t<div id="serverInput" class="">\n\t\t<label title="{{- i18n[\'resource.datasource.mongoJdbc.fileLocation.serverFileSystem.fileLocation\']}}" class="control browser">\n\t\t\t<span class="wrap">{{- i18n[\'resource.datasource.mongoJdbc.fileLocation.serverFileSystem.fileLocation\']}}{{ if (!modelAttributes.autoSchemaDefinition) { }} ({{- i18n[\'required.field\']}}){{ } }}:</span>\n\t\t\t<input type="text" value="{{- modelAttributes.serverFileName }}" name="serverFileName" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? \'disabled=disabled\' : \'\'}}>\n\t\t\t<span class="message warning"></span>\n\t\t</label>\n\t</div>\n\n\t{{ } }}\n</div>',this.templateData())),this.browseButton&&(this.browseButton.remove(),this.browseButton=!1),"repository"!==this.model.get("fileSourceType")||this.model.get("autoSchemaDefinition")||(this.browseButton=he.Z.initialize({i18n:u,template:me,resourceInput:this.$el.find("[name=repositoryFileName]")[0],browseButton:this.$el.find("[name=repositoryBrowserButton]")[0],providerId:"fileResourceBaseTreeDataProvider",dialogTitle:u["resource.Add.Files.Title"],selectLeavesOnly:!0,onChange:r().bind((function(e){this.model.set("repositoryFileName",e),this.model.validate({repositoryFileName:e})}),this)}))}}),Ke=j.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.jndi.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.jndi.page.title.edit",modelConstructor:V,render:function(){return this.$el.empty(),this.renderBlankBody(),this},renderBlankBody:function(){this.$el.append(r().template('<fieldset name="customFieldsContainer" class="group shortFields">\n\n    <js-templateNonce></js-templateNonce>\n\t{{- i18n["resource.datasource.internalDiagnostic.line1"] }}\n\t<br/>\n\t{{- i18n["resource.datasource.internalDiagnostic.line2"] }}\n\t<br/>\n\t{{- i18n["resource.datasource.internalDiagnostic.line3"] }}\n\t<br/>\n\t<br/>\n\t<strong>{{- i18n["resource.datasource.internalDiagnostic.line4"] }}</strong>\n</fieldset>',{i18n:u}))}});var We={};We[$.JDBC.toLowerCase()]=ge,We[$.JNDI.toLowerCase()]=De,We[$.AWS.toLowerCase()]=Ae,We[$.AZURE_SQL.toLowerCase()]=Ee,We[$.VIRTUAL.toLowerCase()]=Be,We[$.BEAN.toLowerCase()]=Ze,We[$.MONGODB]=ke,We[$.MONGODBJDBC]=Ge,We.diagnosticCustomDataSource=Ke;const He=function(e){var t;return e.dataSourceType?(t=We[e.dataSourceType])||(t=q):t=ge,new t(e)},Ye=function(e,t){var n=/application\/repository\.([^+]+)\+json/.exec(e),a=n&&n[1]?n[1].toLowerCase():e.toLowerCase();return $.CUSTOM.toLowerCase()===a&&(a=t.dataSourceName),a};var Xe=n(99494);var Qe=n(92111),et=n(86937);const tt=Xe.Z.extend({theDialogIsOpen:!1,autoUpdateResourceID:!0,saveDialogTemplate:'<label title="{{- i18n[\'resource.datasource.saveDialog.dataSourceNameTitle\']}}" class="control input text ">\n\n    <js-templateNonce></js-templateNonce>\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDialog.dataSourceName\']}} ({{- i18n[\'required.field\']}}):</span>\n\t<input type="text" value="{{- model.label }}" name="label">\n\t<span class="message warning"></span>\n</label>\n\n\n<label title="{{- i18n[\'resource.datasource.saveDialog.resourceIDTitle\']}}" class="control input text ">\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDialog.resourceID\']}} ({{- i18n[\'required.field\']}}):</span>\n\t<input type="text" {{ if (isEditMode) { }}readonly="readonly"{{ } }} value="{{- model.name }}" name="name">\n\t<span class="message warning"></span>\n</label>\n\n\n<label title="{{- i18n[\'resource.datasource.saveDialog.descriptionTitle\']}}" class="control textArea">\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDialog.description\']}}</span>\n\t<textarea type="text" name="description">{{- model.description }}</textarea>\n\t<span class="message warning"></span>\n</label>\n\n{{ if (skipLocation === false) { }}\n<div class="control groupBox treeBox">\n\t<div class="content">\n\t\t<div class="header ">\n\t\t\t<div class="title"></div>\n\t\t</div>\n        <ul class="list collapsible folders"></ul>\n\t</div>\n</div>\n\n<label class="control textArea">\n\t<textarea type="text" class="hidden" name="parentFolderUri"></textarea>\n\t<span class="message warning"></span>\n</label>\n{{ } }}\n',constructor:function(e){e||(e={}),this.options=e;var t=this.extendModel(this.options.model),n=this._getLabelForSaveButton(t);this.autoUpdateResourceID=!this.options.isEditMode,this.preSelectedFolder=e.parentFolderUri,Xe.Z.prototype.constructor.call(this,{skipLocation:!!e.skipLocation,modal:!0,model:t,minHeight:500,minWidth:440,setMinSizeAsSize:!0,resizable:!e.skipLocation,additionalCssClasses:"dataSourceSaveDialog"+(e.skipLocation?" no-minheight":""),title:u["resource.datasource.saveDialog.save"],content:r().template(this.saveDialogTemplate,{i18n:u,model:r().extend({},t.attributes),skipLocation:!!this.options.skipLocation,isEmbedded:this.options.isEmbedded,isEditMode:this.options.isEditMode}),buttons:[{label:u[n],action:"save",primary:!0},{label:u["resource.datasource.saveDialog.cancel"],action:"cancel",primary:!1}]}),this.on("button:save",r().bind(this._onSaveDialogSaveButtonClick,this)),this.on("button:cancel",r().bind(this._onSaveDialogCancelButtonClick,this))},initialize:function(e){Xe.Z.prototype.initialize.apply(this,arguments),!r().isUndefined(this.preSelectedFolder)&&this.preSelectedFolder||(this.preSelectedFolder="/"),e.skipLocation||this.initializeTree(),this.listenTo(this.model,"change:label",this._onDataSourceNameChange),this.$contentContainer.find("[name=name]").change(r().bind(this._onResourceIDInputChange,this))},restoreModel:function(){this.originalModelValidation&&(this.model.validation=this.originalModelValidation)},extendModel:function(e){return this.originalModelValidation=e.validation,e.validation=r().extend({},p.Z.prototype.validation,{label:[{required:!0,msg:u["resource.datasource.saveDialog.validation.not.empty.label"]},{maxLength:p.Z.settings.LABEL_MAX_LENGTH,msg:u["resource.datasource.saveDialog.validation.too.long.label"]}],name:[{required:!0,msg:u["resource.datasource.saveDialog.validation.not.empty.name"]},{maxLength:p.Z.settings.NAME_MAX_LENGTH,msg:u["resource.datasource.saveDialog.validation.too.long.name"]},{doesNotContainSymbols:p.Z.settings.NAME_NOT_SUPPORTED_SYMBOLS,msg:u["resource.datasource.saveDialog.validation.invalid.chars.name"]}],description:[{required:!1},{maxLength:p.Z.settings.DESCRIPTION_MAX_LENGTH,msg:u["resource.datasource.saveDialog.validation.too.long.description"]}],parentFolderUri:[{fn:function(e){if(!this.options.skipLocation){if(r().isNull(e)||r().isUndefined(e)||r().isString(e)&&""===e)return u["resource.datasource.saveDialog.validation.not.empty.parentFolderIsEmpty"];if("/"!==e.slice(0,1))return u["resource.datasource.saveDialog.validation.folder.not.found"].replace("{0}",e)}}}]}),e},initializeTree:function(){this.foldersTree=(0,et.Z)({processors:["folderTreeProcessor","treeNodeProcessor","i18nItemProcessor","filterPublicFolderProcessor","cssClassItemProcessor","fakeUriProcessor"],treeBufferSize:Qe.Z.treeLevelLimit,types:[B.Z.FOLDER],tooltipOptions:{}}),this.listenTo(this.foldersTree,"selection:change",(function(e){var t;e&&r().isArray(e)&&e[0]&&e[0].uri&&(t=e[0].uri),t&&this.model.set("parentFolderUri",t)})),this.$el.find(".treeBox .folders").append(this.foldersTree.render().el);var e=this.foldersTree.$el.parent().parent().parent();this.foldersTree._selectTreeNode(this.preSelectedFolder,e)},startSaveDialog:function(){this._openDialog()},_openDialog:function(){this.theDialogIsOpen||(this.bindValidation(),Xe.Z.prototype.open.apply(this,arguments),this.$contentContainer.find("[name=label]").focus(),this.theDialogIsOpen=!0)},_closeDialog:function(){this.theDialogIsOpen&&(this.unbindValidation(),this.clearValidationErrors(),Xe.Z.prototype.close.apply(this,arguments),this.theDialogIsOpen=!1)},_getLabelForSaveButton:function(){return"resource.datasource.saveDialog.save"},_onDialogResize:function(){var e=this,t=0,n=this.$contentContainer.find(".control.groupBox.treeBox"),a=this.$contentContainer.closest(".jr-mDialog > .jr-mDialog-body");this.$contentContainer.children().not(n).each((function(){t+=e.$(this).outerHeight(!0)})),n.height(a.outerHeight(!0)-t-40)},_onDataSourceNameChange:function(){if(this.autoUpdateResourceID){var e=p.Z.generateResourceName(this.model.get("label"));this.model.set("name",e),this.$("input[name='name']").val(e)}},_onResourceIDInputChange:function(){this.autoUpdateResourceID=!1},_onSaveDialogCancelButtonClick:function(){this.restoreModel(),this._closeDialog()},_onSaveDialogSaveButtonClick:function(){this.model.isValid(!0)&&this.performSave()},performSave:function(){this.options.saveFn?this.options.saveFn(this.model.attributes,this.model):this.model.save({},{success:r().bind(this._saveSuccessCallback,this),error:r().bind(this._saveErrorCallback,this)})},_saveSuccessCallback:function(e){this._closeDialog(),r().isFunction(this.options.success)&&this.options.success(e)},_saveErrorCallback:function(e,t,n){var a=this,s=!1,i=!1;try{s=JSON.parse(t.responseText)}catch(e){}r().isArray(s)||(s=[s]),r().each(s,(function(e){var t=!1,n=!1;e&&(a.theDialogIsOpen&&("version.not.match"===e.errorCode?(t="name",n=u["resource.dataSource.resource.alreadyInUse"]):"mandatory.parameter.error"===e.errorCode?e.parameters&&e.parameters[0]&&(n=u["resource.datasource.saveDialog.parameterIsMissing"],t=e.parameters[0].substr(e.parameters[0].indexOf(".")+1)):"illegal.parameter.value.error"===e.errorCode?e.parameters&&e.parameters[0]&&(t=e.parameters[0].substr(e.parameters[0].indexOf(".")+1),n=u["resource.datasource.saveDialog.parameterIsWrong"]):"folder.not.found"===e.errorCode?(t="parentFolderUri",n=u["ReportDataSourceValidator.error.folder.not.found"].replace("{0}",e.parameters[0])):"access.denied"===e.errorCode&&(t="parentFolderUri",n=u["jsp.accessDenied.errorMsg"])),n&&t&&-1!==["label","name","description","parentFolderUri"].indexOf(t)&&(a.invalidField("[name="+t+"]",n),i=!0))})),!1===i&&r().isFunction(this.options.error)&&this.options.error(e,t,n)}}),nt={"java.lang.Date":"javaTypes.java.lang.Date","java.lang.String":"javaTypes.java.lang.String","java.lang.Integer":"javaTypes.java.lang.Integer","java.lang.Boolean":"javaTypes.java.lang.Boolean","java.lang.Double":"javaTypes.java.lang.Double","java.sql.Timestamp":"javaTypes.java.sql.Timestamp","java.lang.Short":"javaTypes.java.lang.Short","java.math.BigDecimal":"javaTypes.java.math.BigDecimal","java.lang.Long":"javaTypes.java.lang.Long","java.sql.Time":"javaTypes.java.sql.Time"},at=["java.lang.Date","java.lang.String","java.lang.Integer","java.lang.Boolean","java.lang.Double","java.sql.Timestamp","java.lang.Short","java.math.BigDecimal","java.lang.Long","java.sql.Time"],st=p.Z.extend({defaults:{uri:void 0,label:void 0,columns:[],dataSourceUri:void 0},validation:{columns:function(e){var t=[];return r().each(e,(function(e,n){e.label||t.push({rowId:n,name:"label"})})),0!==t.length?this.trigger("validationFailed",t):this.trigger("validationPassed"),null}},type:"simpleDomain",url:function(){return h.Z.contextPath+"/rest_v2/domains"},isNew:function(){return!0},constructor:function(e,t){p.Z.prototype.constructor.apply(this,arguments),this.dataSource=t.dataSource,t.dataSource&&t.dataSource.uri&&this.set("dataSourceUri",t.dataSource.uri)},save:function(e,t){return r().defaults(t||(t={}),{headers:{Accept:"application/json","Content-Type":"application/simpleDomain+json; charset=UTF-8"}}),p.Z.prototype.save.call(this,e,t)},parseMetadata:function(e){return r().each(e.columns,(function(e){e.show=!0})),e},parse:function(e){var t=p.Z.prototype.parse.apply(this,arguments);return t.dataSource&&(t.dataSourceUri=t.dataSource.dataSourceReference,delete t.dataSource),t.metadata&&(t.columns=t.metadata.columns,delete t.metadata),t},toJSON:function(){var e=p.Z.prototype.toJSON.apply(this,arguments);return e.dataSource={dataSourceReference:e.dataSourceUri},e.metadata={columns:r().reduce(e.columns,(function(e,t){return t.show&&e.push(t),e}),[]),queryLanguage:"csv"},delete e.dataSourceUri,delete e.columns,e},fetchMetadata:function(){var e=this,t=l().Deferred();return(0,se.Z)({type:"POST",url:h.Z.contextPath+"/rest_v2/connections",dataType:"json",data:JSON.stringify(this.dataSource),headers:{"Content-Type":"application/repository.customDataSource+json",Accept:"application/table.metadata+json"}}).done((function(n){n=e.parseMetadata(n),e.set("columns",n.columns),t.resolve(n)})).fail((function(e){t.reject(e)})),t}}),it='<div class="panel dialog overlay standardConfirm moveable centered_horz centered_vert">\n\n    <js-templateNonce></js-templateNonce>\n    <div class="content hasFooter ">\n        <div class="header mover">\n            <h2 class="title">\n                Confirm\n            </h2>\n        </div>\n\n        <div class="body  ">\n        </div>\n\n        <div class="footer ">\n\n            <button class="button action primary up ok" name="buttonOK">\n                <span class="wrap">OK</span>\n                <span class="icon"></span>\n            </button>\n            <button class="button action up ignore hidden" name="buttonIgnore">\n                <span class="wrap">Ignore</span>\n                <span class="icon"></span>\n            </button>\n            <button class="button action up cancel" name="buttonCancel">\n                <span class="wrap">Cancel</span>\n                <span class="icon"></span>\n            </button>\n        </div>\n\n    </div>\n</div>',rt=tt.extend({saveDialogTemplate:'<label title="{{- i18n[\'resource.datasource.saveDomainDialog.domainNameTitle\']}}" class="control input text ">\n\n    <js-templateNonce></js-templateNonce>\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDomainDialog.domainName\']}} ({{- i18n[\'required.field\']}}):</span>\n\t<input type="text" value="{{- model.label }}" name="label">\n\t<span class="message warning"></span>\n</label>\n\n\n<label title="{{- i18n[\'resource.datasource.saveDomainDialog.resourceIDTitle\']}}" class="control input text ">\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDomainDialog.resourceID\']}} ({{- i18n[\'required.field\']}}):</span>\n\t<input type="text" {{ if (model.isEditMode) { }}readonly="readonly"{{ } }} value="{{- model.name }}" name="name">\n\t<span class="message warning"></span>\n</label>\n\n\n<label title="{{- i18n[\'resource.datasource.saveDomainDialog.descriptionTitle\']}}" class="control textArea">\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDomainDialog.description\']}}</span>\n\t<textarea type="text" name="description">{{- model.description }}</textarea>\n\t<span class="message warning"></span>\n</label>\n\n{{ if (skipLocation === false) { }}\n<div class="control groupBox treeBox">\n\t<div class="content">\n\t\t<div class="header ">\n\t\t\t<div class="title"></div>\n\t\t</div>\n        <ul class="list collapsible folders"></ul>\n\t</div>\n</div>\n\n<label class="control textArea">\n\t<textarea type="text" class="hidden" name="parentFolderUri"></textarea>\n\t<span class="message warning"></span>\n</label>\n{{ } }}\n\n\x3c!--\n<div class="control checkBox toggle">\n    <label for="__jrs_openInAdHocDesigner" class="wrap">{{- i18n[\'resource.datasource.saveDomainDialog.openInAdhoc\']}}</label>\n    <input type="checkbox" name="openInAdHocDesigner" id="__jrs_openInAdHocDesigner" {{ if (model.openInAdHocDesigner) { }}checked="checked"{{ } }} />\n</div>\n--\x3e',constructor:function(e){e||(e={}),this.options=e,tt.prototype.constructor.call(this,e)},initialize:function(){this.preSelectedFolder=p.Z.getParentFolderFromUri(this.options.dataSource.uri)||"/",tt.prototype.initialize.apply(this,arguments),this.listenTo(this.model,"change:openInAdHocDesigner",this._onOpenInAdHocDesignerChange)},extendModel:function(e){var t,n,a=tt.prototype.extendModel.call(this,e),s=this;return a.set("openInAdHocDesigner",!1),t=e.dataSource.label+" Domain",n=p.Z.generateResourceName(t),a.set("label",t),a.set("name",n),a.validation=r().extend({},p.Z.prototype.validation,{label:[{required:!0,msg:u["resource.datasource.saveDomainDialog.validation.not.empty.label"]},{maxLength:p.Z.settings.LABEL_MAX_LENGTH,msg:u["resource.datasource.saveDomainDialog.validation.too.long.label"]}],name:[{required:!0,msg:u["resource.datasource.saveDomainDialog.validation.not.empty.name"]},{maxLength:p.Z.settings.NAME_MAX_LENGTH,msg:u["resource.datasource.saveDomainDialog.validation.too.long.name"]},{doesNotContainCharacters:p.Z.settings.NAME_NOT_SUPPORTED_SYMBOLS,msg:u["resource.datasource.saveDomainDialog.validation.invalid.chars.name"]}],description:[{required:!1},{maxLength:p.Z.settings.DESCRIPTION_MAX_LENGTH,msg:u["resource.datasource.saveDomainDialog.validation.too.long.description"]}],parentFolderUri:[{fn:function(e){if(!s.options.skipLocation){if(r().isNull(e)||r().isUndefined(e)||r().isString(e)&&""===e)return u["resource.datasource.saveDomainDialog.validation.not.empty.parentFolderIsEmpty"];if("/"!==e.slice(0,1))return u["resource.datasource.saveDomainDialog.validation.folder.not.found"].replace("{0}",e)}}}]}),a},_onOpenInAdHocDesignerChange:function(){var e=this._getLabelForSaveButton();this.changeButtonLabel("save",u[e])},_getLabelForSaveButton:function(e){var t="resource.datasource.saveDialog.save";return(e=e||this.model).get("openInAdHocDesigner")&&(t="resource.datasource.saveDomainDialog.saveAndOpenDesigner"),t},_onSaveDialogCancelButtonClick:function(){var e=this,t=l()(it);t.find(".body").html("You are about to cancel the creation of a new domain.<br/>If You wish to create a domain in the future,<br/>You will need to go through the regular Domain Designer.<br/>The data source, however, has successfully been saved."),v.Z.popupConfirm.show(t.get(0),!0,{okButtonSelector:"[name=buttonOK]",cancelButtonSelector:"[name=buttonCancel]"}).done((function(){e._closeDialog(),r().isFunction(e.options.success)&&e.options.success()}))},performSave:function(){var e=this;this.model.save().done((function(){e._closeDialog(),r().isFunction(e.options.success)&&e.options.success()}))}}),ot='<div class="usageTooltip">\n\n    <js-templateNonce></js-templateNonce>\n    {{- i18n[\'resource.datasource.createDomain.useTooltip\']}}.</div>\n\n<div class="tableHolder">\n    <table class="table" unselectable="on" onselectstart="return false">\n        <tbody>\n\n        <tr class="header">\n            <td class="jrs-grid-cell"><div class="jrs-grid-cell-content">{{- i18n[\'resource.datasource.createDomain.table.fields.show\']}}</div></td>\n            <td class="jrs-grid-cell"><div class="jrs-grid-cell-content">{{- i18n[\'resource.datasource.createDomain.table.fields.fieldName\']}}</div></td>\n            <td class="jrs-grid-cell"><div class="jrs-grid-cell-content">{{- i18n[\'resource.datasource.createDomain.table.fields.displayLabel\']}}</div></td>\n            <td class="jrs-grid-cell"><div class="jrs-grid-cell-content">{{- i18n[\'resource.datasource.createDomain.table.fields.type\']}}</div></td>\n        </tr>\n\n        {{_.each(columns, function(field, y) { }}\n        <tr class="bodyCell" data-fieldId="{{- y }}">\n            <td class="jrs-grid-cell cell_1">\n                <div class="jrs-grid-cell-content">\n                    <input type="checkbox" name="show" {{- field.show ? "checked" : "" }} />\n                </div>\n            </td>\n            <td class="jrs-grid-cell cell_2">\n                <div class="jrs-grid-cell-content">\n                    {{- field.name }}\n                </div>\n            </td>\n            <td class="jrs-grid-cell cell_3">\n                <div class="jrs-grid-cell-content">\n                    <input type="text" name="label" value="{{- field.label }}" />\n                    <span class="message warning"></span>\n                </div>\n            </td>\n            <td class="jrs-grid-cell cell_4">\n                <div class="jrs-grid-cell-content">\n                    <select name="javaType">\n                    {{ _.each(javaTypes, function(javaType) { }}\n                        <option value="{{- javaType }}" {{- javaType === field.javaType ? "selected" : ""}}>{{- i18n[javaTypeMapper[javaType]]}}</option>\n                    {{ }); }}\n                    </select>\n                </div>\n            </td>\n        </tr>\n        {{ }); }}\n        </tbody>\n    </table>\n</div>\n\n<div class="usageDescription">{{- i18n[\'resource.datasource.createDomain.useTooptip.firstPart\']}}.</div>\n\n<div class="usageDescription2">{{- i18n[\'resource.datasource.createDomain.useTooptip.secondPart\']}}.</div>\n',lt=Xe.Z.extend({hasChanges:!1,modelIsValid:!0,theDialogIsOpen:!1,constructor:function(e){e||(e={}),this.options=e,this.dataSource=e.dataSource?e.dataSource:{};this.model=new st({},e),Xe.Z.prototype.constructor.call(this,{modal:!0,model:this.model,width:400,additionalCssClasses:"dataSourceCreateNewDomainDialog",title:u["resource.datasource.createDomain.dialogTitle"],content:"",buttons:[{label:u["resource.datasource.createDomain.save"],action:"save",primary:!0},{label:u["resource.datasource.createDomain.cancel"],action:"cancel",primary:!1}]}),this.on("button:save",r().bind(this._onSaveButtonClick,this)),this.on("button:cancel",r().bind(this._onCancelButtonClick,this)),this.model.on("validationPassed",r().bind(this.clearValidationErrors,this)),this.model.on("validationFailed",r().bind(this.validationFailed,this))},initialize:function(e){Xe.Z.prototype.initialize.apply(this,arguments)},updateModelProperty:function(e){var t,n,a=l()(e.target),s=a.attr("type"),i=a.attr("name"),r=a.parents("tr").attr("data-fieldId");n="checkbox"===s||"radio"===s?a.is(":checked"):l().trim(a.val()),(t=this.model.get("columns"))[r][i]=n,this.model.set("columns",t),this.model.validate("columns"),!1===this.hasChanges&&this.changeButtonLabel("save",u["resource.datasource.createDomain.applyAndSave"]),this.hasChanges=!0},startDialog:function(){var e=this;this.theDialogIsOpen||(this.bindValidation(),this.model.fetchMetadata(this.dataSource).done((function(){Xe.Z.prototype.open.apply(e,arguments);var t=r().template(ot,{i18n:u,javaTypes:at,columns:e.model.get("columns"),javaTypeMapper:nt});e.setContent(t),e._center()})),this.theDialogIsOpen=!0)},fieldIsValid:function(){},fieldIsInvalid:function(e){},clearValidationErrors:function(){this.$el.find(".error").removeClass("error"),this.modelIsValid=!0},validationFailed:function(e){var t=this;this.clearValidationErrors(),this.modelIsValid=!1,r().each(e,(function(e){var n=l()(t.$el.find("table tr").get(e.rowId+1));n.find("[name="+e.name+"]").parent().addClass("error"),n.find(".message").text(u["resource.datasource.createDomain.validation.missing.label"])}))},_closeDialog:function(){this.theDialogIsOpen&&(this.unbindValidation(),this.clearValidationErrors(),Xe.Z.prototype.close.apply(this,arguments),this.theDialogIsOpen=!1)},_onCancelButtonClick:function(){var e=this,t=u["resource.datasource.createDomain.cancelMessage"],n=l()(it);n.find(".body").html(t),v.Z.popupConfirm.show(n.get(0),!0,{okButtonSelector:"[name=buttonOK]",cancelButtonSelector:"[name=buttonCancel]"}).done((function(){e._closeDialog(),e.options.cancel&&e.options.cancel()}))},_onSaveButtonClick:function(){this.modelIsValid&&(this._closeDialog(),this.saveDialog=new rt(r().extend({},this.options,{model:this.model,success:function(){(0,y.nLk)(h.Z.contextPath+"/flow.html?_flowId=repositoryConfirmFlow&resourceType=dataSource&resourceType=domain")}})),this.saveDialog.startSaveDialog())}}),ct=tt.extend({saveDialogTemplate:'<label title="{{- i18n[\'resource.datasource.saveDialog.dataSourceNameTitle\']}}" class="control input text ">\n\n    <js-templateNonce></js-templateNonce>\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDialog.dataSourceName\']}} ({{- i18n[\'required.field\']}}):</span>\n\t<input type="text" value="{{- model.label }}" name="label">\n\t<span class="message warning"></span>\n</label>\n\n\n<label title="{{- i18n[\'resource.datasource.saveDialog.resourceIDTitle\']}}" class="control input text ">\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDialog.resourceID\']}} ({{- i18n[\'required.field\']}}):</span>\n\t<input type="text" {{ if (isEditMode) { }}readonly="readonly"{{ } }} value="{{- model.name }}" name="name">\n\t<span class="message warning"></span>\n</label>\n\n\n<label title="{{- i18n[\'resource.datasource.saveDialog.descriptionTitle\']}}" class="control textArea">\n\t<span class="wrap">{{- i18n[\'resource.datasource.saveDialog.description\']}}</span>\n\t<textarea type="text" name="description">{{- model.description }}</textarea>\n\t<span class="message warning"></span>\n</label>\n\n{{ if (skipLocation === false) { }}\n<div class="control groupBox treeBox">\n\t<div class="content">\n\t\t<div class="header ">\n\t\t\t<div class="title"></div>\n\t\t</div>\n        <ul class="list collapsible folders"></ul>\n\t</div>\n</div>\n\n<label class="control textArea">\n\t<textarea type="text" class="hidden" name="parentFolderUri"></textarea>\n\t<span class="message warning"></span>\n</label>\n{{ } }}\n',constructor:function(e){e||(e={}),this.options=r().extend({},e),this.options.isEmbedded=!!this.options.saveFn,tt.prototype.constructor.call(this,e)},initialize:function(){this.preSelectedFolder=this.options.model.options.parentFolderUri,tt.prototype.initialize.apply(this,arguments)},extendModel:function(e){var t=tt.prototype.extendModel.call(this,e);return t.set("prepareDataForReporting",!(this.options.isEmbedded||this.options.isEditMode)),t},_getLabelForSaveButton:function(e){return"resource.datasource.saveDialog.save"},_saveSuccessCallback:function(e,t){this.model.get("prepareDataForReporting")?new lt({cancel:this.options.success,dataSource:this.model.toJSON()}).startDialog():r().isFunction(this.options.success)&&this.options.success();this._closeDialog()}});var dt={};dt.textDataSource=ct,dt.domain=rt;const ut=function(e){var t;return t=tt,dt[e]&&(t=dt[e]),t},pt=s().Collection.extend({url:h.Z.contextPath+"/rest_v2/customDataSources",parse:function(e){var t=[];return e.definition&&r().each(e.definition,(function(e){t.push({id:e})})),t}});var ht=r().template(h.Z.contextPath+"/domaindesigner.html?dataSource={{-resourceUri}}");const mt=s().View.extend({dataSourceType:!1,dataSourceView:!1,saveDialog:!1,events:{"change select[name='dataSourceType']":"onDataSourceTypeChange","click #saveBtn, #createDomainBtn":"onSaveClick","click #cancelBtn":"onCancelClick"},historyBackToken:"DataSourceControllerHistory",constructor:function(e){var t=Array.prototype.slice.call(arguments,0);e=l().extend(!0,{},e),t[0]=e,this.isEditMode=e.isEditMode,s().View.apply(this,t)},initialize:function(e){this.options=e,this.dataSourceType=void 0,S.supportsTouch&&this.initSwipeScroll(),w(this.historyBackToken),this.fetchingCustomDataSourcesDeferred=l().Deferred(),this.fetchingTheModelDeferred=l().Deferred(),this.customDataSourceCollection=new pt,this.customDataSourceCollection.fetch().done(r().bind((function(){this.renderDataSourceContainer()}),this));var t=W(e,{awsSettings:ve});if(this.options.resourceUri){var n=this,a=new f({uri:this.options.resourceUri});a.fetch().then((function(e,t,s){n.dataSource=a.attributes,n.dataSourceType=Ye(s.getResponseHeader("Content-Type"),n.dataSource),n.fetchingTheModelDeferred.resolve()}))}else this.options.dataSource&&this.options.dataSourceClientType?(this.dataSource=this.options.dataSource,this.dataSourceType=Ye(this.options.dataSourceClientType,this.options.dataSource),this.fetchingTheModelDeferred.resolve()):(t.awsSettings.productTypeIsEc2&&(this.dataSourceType=Ye($.AWS,null)),this.fetchingTheModelDeferred.resolve())},renderDataSourceContainer:function(){var e=r().chain({AZURE_SQL:"AzureSql",AWS:"Aws",BEAN:"Bean",JDBC:"JDBC",JNDI:"JNDI",VIRTUAL:"Virtual"}).map((function(e,t){return{value:$[t].toLowerCase(),label:u["resource.dataSource.dstype"+e]}})).value();this.customDataSourceCollection.forEach((function(t){var n=t.get("id");e.push({value:n,label:u[n+".name"]?u[n+".name"]:n})})),e=r().sortBy(e,(function(e){return e.label.toLowerCase()})),this.$el.append(r().template('<div class="column decorated primary addNewDataSource">\n\n\n    <js-templateNonce></js-templateNonce>\n    <div class="content hasFooter">\n        <div class="pageHeader">\n            <div class="pageHeader-title">\n                <div class="pageHeader-title-icon">\n                    <span class="icon datasource"></span>\n                </div>\n                <div class="pageHeader-title-text">\n                    {{ if (!isEditMode) { }}\n                    {{- i18n[\'resource.dataSource.title.new\'] }}\n                    {{ } }}\n                </div>\n            </div>\n        </div>\n        <div class="body {{ if (supportsTouch) { }}swipeScroll{{ } }}">\n            <div id="stepDisplay">\n                <fieldset class="row instructions">\n                    <legend class="offLeft"><span>{{- i18n["resource.dataSource.instructions"] }}</span></legend>\n                    <h2 class="textAccent02">\n                        {{ if (isEditMode) { }}\n                        {{- i18n["resource.dataSource.instructions.form.header.edit"] }}\n                        {{ } else { }}\n                        {{- i18n["resource.dataSource.instructions1"] }}\n                        {{ } }}\n\n                    </h2>\n                </fieldset>\n\n                <fieldset class="row inputs oneColumn">\n                    <legend class="offLeft"><span>{{- i18n["resource.dataSource.inputs"] }}</span></legend>\n                    <div class="column primary">\n                        <div class="content">\n                            <div class="header">\n                                <div class="title {{ if (isEditMode) { }}disabled{{ } }}">{{- i18n["resource.dataSource.type"] }}</div>\n                                <label class="control select inline" title="{{- i18n[\'resource.dataSource.dsType\'] }}">\n                                    <span class="wrap offLeft">{{- i18n[\'resource.dataSource.dsType\'] }}</span>\n                                    <select name="dataSourceType" {{ if (isEditMode) { }}disabled="disabled"{{ } }}>\n                                        {{ _.each(dataSourceTypeOptions, function(option) { }}\n                                        <option value="{{- option.value }}">{{- option.label }}</option>\n                                        {{ }); }}\n                                    </select>\n                                    <span class="message warning"></span>\n                                </label>\n                            </div>\n                            <div class="body dataSourceBody"></div>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n        <div class="footer ">\n            <fieldset id="wizardNav">\n                <button class="button primary action up" id="saveBtn"><span class="wrap">{{- i18n[\'resource.datasource.saveDialog.save\'] }}</span><span class="icon"></span></button>\n                <button class="button up action" id="cancelBtn"><span class="wrap">{{- i18n[\'resource.datasource.saveDialog.cancel\'] }}</span><span class="icon"></span></button>\n            </fieldset>\n        </div>\n    </div>\n</div>\n',{dataSourceTypeOptions:e,i18n:u,supportsTouch:S.supportsTouch,isEditMode:this.isEditMode})),this.fetchingCustomDataSourcesDeferred.resolve()},initSwipeScroll:function(){var e=this.$("#stepDisplay");e.length&&new b.Z(e.parent()[0],e.parent().parent()[0],{})},render:function(){l().when(this.fetchingCustomDataSourcesDeferred,this.fetchingTheModelDeferred).done(r().bind((function(){this._render()}),this))},_render:function(){var e={};return this.dataSourceView&&(e={label:this.dataSourceView.model.get("label"),name:this.dataSourceView.model.get("name"),description:this.dataSourceView.model.get("description")}),this.dataSourceView&&this.dataSourceView.remove(),delete this.dataSourceView,0===this.$(".row.inputs .body:eq(0)").length&&this.$(".row.inputs > .column > .content").append("<div class='body dataSourceBody'></div>"),this.dataSourceType||(this.dataSourceType=$.JDBC.toLowerCase()),this.dataSourceView=He(r().extend(this.options,{dataSourceType:this.dataSourceType,dataSource:r().extend({},this.dataSource,e),el:this.$(".row.inputs .body:eq(0)")})),this.$(".dataSourceBody").attr("dstype",this.dataSourceType.toLowerCase()),this.$("select[name='dataSourceType']").val(this.dataSourceType),this.dataSource&&this.dataSource.label&&this.$(".pageHeader .pageHeader-title-text").text(this.dataSource.label),this},onDataSourceTypeChange:function(e){var t=l()(e.target).val();this.dataSourceType!=t&&(this.dataSourceType=t,this.render())},_prepareSaveDialog:function(e){this.saveDialog&&this.saveDialog.remove();var t=ut(this.dataSourceType);this.saveDialog=new t(r().extend({},this.options,{model:this.dataSourceView.model,saveFn:this.options.saveFn,success:r().bind(e?this._onSaveAndCreateDomainDone:this._onSaveDone,this),error:r().bind(this._onSaveFail,this)}))},onSaveClick:function(e){if(this.dataSourceView.model.isValid(!0)){var t=this,n=e&&"createDomainBtn"==e.currentTarget.id,a=function(){t._prepareSaveDialog(n),t.saveDialog.startSaveDialog()};r().isUndefined(this.dataSourceView.model.validationMethodOnSaveClick)?r().isUndefined(this.dataSourceView.validationMethodOnSaveClick)?a():this.dataSourceView.validationMethodOnSaveClick(a):this.dataSourceView.model.validationMethodOnSaveClick(a)}},_onSaveDone:function(){D(h.Z.contextPath+"/flow.html?_flowId=repositoryConfirmFlow&resourceType=dataSource")},_onSaveAndCreateDomainDone:function(e){D(ht({resourceUri:e.get("uri")}))},_onSaveFail:function(e,t){this.saveDialog&&(this.saveDialog.close(),this.saveDialog.remove());var n=this,a=!1,s=!1;try{a=JSON.parse(t.responseText)}catch(e){}if(r().isArray(a)||(a=[a]),r().each(a,(function(e){var t=!1,a=!1;e&&("mandatory.parameter.error"===e.errorCode?e.parameters&&e.parameters[0]&&(a=u["resource.datasource.saveDialog.parameterIsMissing"],t=e.parameters[0].substr(e.parameters[0].indexOf(".")+1)):"illegal.parameter.value.error"===e.errorCode&&e.parameters&&e.parameters[0]&&(t=e.parameters[0].substr(e.parameters[0].indexOf(".")+1),a=u["resource.datasource.saveDialog.parameterIsWrong"]),"ConnectionUrl"===t&&(t="connectionUrl"),a&&t&&(n.dataSourceView.invalidField("[name="+t+"]",a),s=!0))})),!1===s){var i=r().template(k,{message:"Failed to save data source.",errorCode:a[0]?a[0].errorCode:null,errorMsg:a.message,respText:t.responseText});v.Z.errorPopup.show(i)}},onCancelClick:function(){this.options.cancelFn?this.options.cancelFn():T(this.historyBackToken)}})}}]);
//# sourceMappingURL=chunk.6871.js.map