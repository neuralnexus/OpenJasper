{"version":3,"sources":["webpack://jrs-ui/./src/components/components.pickers.js","webpack://jrs-ui/./src/resource/resource.base.js"],"names":["picker","options","this","_disabled","undefined","disabled","_uriTextbox","uriTextboxId","jQuery","_browseButtonId","browseButtonId","_onChange","onChange","_options","buttonManager","_id","id","_suffix","suffix","Date","getTime","_treeDomId","treeId","_selectLeavesOnly","selectLeavesOnly","_selectedUri","val","_process","_assignHandlers","_refreshButtonsState","FileSelector","addVar","addMethod","scroll","DEFAULT_TEMPLATE_DOM_ID","template","i18n","_dom","_","clone","attr","_okButton","find","OK_BUTTON_ID","_cancelButton","CANCEL_BUTTON_ID","DEFAULT_TREE_ID","_treeDom","_visible","title","TITLE_PATTERN","update","_onOk","onOk","_onCancel","onCancel","document","body","append","scrollWrapper","next","layoutModule","treeOptions","Object","extend","providerId","_tree","dynamicTree","length","showTreePrefetchNodes","showTree","on","_dialogClickHandler","bindAsEventListener","each","event","observe","_treeClickHandler","_treeLoadHandler","_browseClickHandler","getSelectedNode","param","type","FOLDER_TYPE_NAME","element","target","matchAny","stopPropagation","value","uri","setValue","_hide","_canClickOk","openAndSelectNode","_show","dialogs","remove","resource","messages","resourceLabelMaxLength","resourceIdMaxLength","resourceDescriptionMaxLength","PROPAGATE_EVENT","STEP_DISPLAY_ID","FLOW_CONTROLS_ID","initSwipeScroll","display","TouchController","parent","parents","eq","submitForm","formId","params","fillForm","url","buildActionUrl","submit","registerClickHandlers","handlers","observeElementSelector","addAtBeginning","_bodyClickEventHandlers","Array","prototype","unshift","push","apply","selector","clickEventHandler","result","Event","stop","$break","TreeWrapper","that","_treeId","_resourceUriInput","resourceUriInput","_uri","getValue","interpolate","inject","treeOption","key","memo","node","getTreeId","getTree","selectFolder","folderUri","getSelectedFolderUri","switchButtonState","button","state","call","switchDisableState","disable","generateResourceId","name","window","localContext","initOptions","resourceIdNotSupportedSymbols","replace","RegExp","testResourceId","resourceId","test","labelValidator","isValid","errorMessage","blank","getLabelValidationEntry","validators","method","mandatory","tooLong","maxLength","getIdValidationEntry","resourceIdValidator","_isEditMode","getDescriptionValidationEntry","descriptionValidator","dataSourceValidator","trim","queryValidator","getValidationEntries","elementsToValidate","collect","validationEntry","validator"],"mappings":"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","file":"_chunks/chunk.3854.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @author: Sergey Prilukin\n * @version: $Id$\n */\nimport buttonManager from '../core/core.events.bis';\nimport _ from 'underscore';\nimport layoutModule from '../core/core.layout';\nimport dynamicTree from '../dynamicTree/dynamicTree.utils';\nimport dialogs from './components.dialogs';\nimport {matchAny} from '../util/utils.common';\nimport jQuery from 'jquery';\n\nvar picker = {};    /*\n * File/Folder Selector box.\n *\n * @param options {JSON Object} - Set of options for folder selector:\n * <ul>\n *       <li>id - Dialog template id, by default 'selectFromRepository'</li>\n *       <li>disabled - Wether file picker is disabled. By defailt is false</li>\n *       <li>suffix - Unique suffix to be able to use multiple dialogs, by default unique number - current time</li>\n *       <li>treeId - Dom id of tree container. The option is required</li>\n *       <li>selectLeavesOnly - Wether only tree leaves should be selectable.\n *                          Set to true for file selection and false for folder selection by default false</li>\n *       <li>title - Title of dialog. Not required. If not setted - title will not be changed</li>\n *       <li>onOk - If setted will be called after select button is clicked. Not required</li>\n *       <li>onCancel - If setted will be called after cancel button clicked. not required</li>\n *       <li>uriTextboxId - Dom id of textbox where uri is placed. Required.</li>\n *       <li>browseButtonId - Dom id of button which should opens file selector dialog. Required.</li>\n *       <li>providerId - Tree data provider id. The option is required.</li>\n *       <li>treeOptions - Additional tree params like rootUri, bShowRoot etc. Not required.</li>\n * </ul>\n *\n * Minimal usage example:\n * <pre>\n *  new picker.FileSelector({\n *       treeId: treeId,\n *       providerId: providerId,\n *       uriTextboxId: uriTextboxId,\n *       browseButtonId: browseButtonId\n *   })\n * </pre>\n *\n */\n/*\n * File/Folder Selector box.\n *\n * @param options {JSON Object} - Set of options for folder selector:\n * <ul>\n *       <li>id - Dialog template id, by default 'selectFromRepository'</li>\n *       <li>disabled - Wether file picker is disabled. By defailt is false</li>\n *       <li>suffix - Unique suffix to be able to use multiple dialogs, by default unique number - current time</li>\n *       <li>treeId - Dom id of tree container. The option is required</li>\n *       <li>selectLeavesOnly - Wether only tree leaves should be selectable.\n *                          Set to true for file selection and false for folder selection by default false</li>\n *       <li>title - Title of dialog. Not required. If not setted - title will not be changed</li>\n *       <li>onOk - If setted will be called after select button is clicked. Not required</li>\n *       <li>onCancel - If setted will be called after cancel button clicked. not required</li>\n *       <li>uriTextboxId - Dom id of textbox where uri is placed. Required.</li>\n *       <li>browseButtonId - Dom id of button which should opens file selector dialog. Required.</li>\n *       <li>providerId - Tree data provider id. The option is required.</li>\n *       <li>treeOptions - Additional tree params like rootUri, bShowRoot etc. Not required.</li>\n * </ul>\n *\n * Minimal usage example:\n * <pre>\n *  new picker.FileSelector({\n *       treeId: treeId,\n *       providerId: providerId,\n *       uriTextboxId: uriTextboxId,\n *       browseButtonId: browseButtonId\n *   })\n * </pre>\n *\n */\npicker.FileSelector = function (options) {\n    this._disabled = options.disabled !== undefined ? options.disabled : false;\n    this._uriTextbox = typeof options.uriTextboxId === 'string' ? jQuery('#' + options.uriTextboxId)[0]: options.uriTextboxId;\n    this._browseButtonId = typeof options.uriTextboxId === 'string' ? jQuery('#' + options.browseButtonId)[0]: options.browseButtonId;\n    this._onChange = options.onChange || false;\n    this._options = options;\n    if (!this._disabled) {\n        this._id = options.id;    //There can be multiple fileSelectors so made them all unique using id suffix\n        //There can be multiple fileSelectors so made them all unique using id suffix\n        this._suffix = options.suffix ? options.suffix : new Date().getTime();\n        this._treeDomId = options.treeId;\n        this._selectLeavesOnly = options.selectLeavesOnly !== undefined ? options.selectLeavesOnly : false;\n        this._selectedUri = jQuery(this._uriTextbox).val();\n        this._process(options);\n        this._assignHandlers();\n        this._refreshButtonsState();\n    } else {\n        buttonManager.disable(this._uriTextbox);\n        buttonManager.disable(this._browseButtonId);\n    }\n};\npicker.FileSelector.addVar('DEFAULT_TEMPLATE_DOM_ID', 'selectFromRepository');\npicker.FileSelector.addVar('DEFAULT_TREE_ID', 'selectFromRepoTree');\npicker.FileSelector.addVar('OK_BUTTON_ID', 'selectFromRepoBtnSelect');\npicker.FileSelector.addVar('CANCEL_BUTTON_ID', 'selectFromRepoBtnCancel');\npicker.FileSelector.addVar('TITLE_PATTERN', 'div.title');\npicker.FileSelector.addMethod('_process', function (options) {\n    !this._id && (this._id = this.DEFAULT_TEMPLATE_DOM_ID);\n    if (!jQuery('#' + this._id)[0] && this._options.template && this._options.i18n) {\n        this._dom = jQuery(_.template(this._options.template, { i18n: this._options.i18n }));\n        this._dom = this._dom[0];\n    } else {\n        this._dom = jQuery('#' + this._id).clone(true);\n    }\n    jQuery(this._dom).attr('id', this._id + this._suffix);\n    this._okButton = jQuery(this._dom).find('#' + this.OK_BUTTON_ID)[0];\n    jQuery(this._okButton).attr('id', this.OK_BUTTON_ID + this._suffix);\n    this._cancelButton = jQuery(this._dom).find('#' + this.CANCEL_BUTTON_ID)[0];\n    jQuery(this._cancelButton).attr('id', this.CANCEL_BUTTON_ID + this._suffix);\n    !this._treeDomId && (this._treeDomId = this.DEFAULT_TREE_ID);\n    this._treeDom = jQuery(this._dom).find('#' + this._treeDomId)[0];\n    jQuery(this._treeDom).attr('id', this._treeDomId + this._suffix);\n    this._visible = false;\n    options.title && jQuery(this._dom).find(this.TITLE_PATTERN)[0].update(options.title);\n    this._onOk = options.onOk;\n    this._onCancel = options.onCancel;\n    jQuery(document.body).append(this._dom);\n    var scroll;\n    var scrollWrapper = jQuery(this._dom)[0].next(layoutModule.SWIPE_SCROLL_PATTERN);\n    scrollWrapper && (scroll = layoutModule.createScroller(scrollWrapper));\n    var treeOptions = Object.extend({\n        providerId: options.providerId,\n        scroll: scroll\n    }, options.treeOptions);\n    this._tree = dynamicTree.createRepositoryTree(this._treeDomId + this._suffix, treeOptions);\n    this._selectedUri && this._selectedUri.length > 0 ? this._tree.showTreePrefetchNodes(this._selectedUri) : this._tree.showTree(1);\n});\npicker.FileSelector.addMethod('_assignHandlers', function () {\n    jQuery(this._dom).on('click', this._dialogClickHandler.bindAsEventListener(this));\n    [\n        'node:dblclick',\n        'leaf:dblclick'\n    ].each(function (event) {\n        this._tree.observe(event, this._treeClickHandler.bindAsEventListener(this));\n    }, this);\n    [\n        'node:click',\n        'leaf:click',\n        'node:selected',\n        'leaf:selected'\n    ].each(function (event) {\n        this._tree.observe(event, this._refreshButtonsState.bindAsEventListener(this));\n    }, this);\n    [\n        'childredPrefetched:loaded',\n        'tree:loaded'\n    ].each(function (event) {\n        this._tree.observe(event, this._treeLoadHandler.bindAsEventListener(this));\n    }, this);\n    jQuery(this._browseButtonId).on('click', this._browseClickHandler.bindAsEventListener(this));\n});\npicker.FileSelector.addMethod('_canClickOk', function (event) {\n    return this._tree.getSelectedNode() && (this._selectLeavesOnly ? this._tree.getSelectedNode().param.type !== this._tree.getSelectedNode().FOLDER_TYPE_NAME : true);\n});\npicker.FileSelector.addMethod('_dialogClickHandler', function (event) {\n    var element = event.target;\n    if (matchAny(element, ['#' + this.OK_BUTTON_ID + this._suffix], true)) {\n        event.stopPropagation();\n        var value = this._tree.getSelectedNode().param.uri;\n        this._uriTextbox.setValue(value);\n        this._onChange && this._onChange(value);\n        this._hide();\n        this._onOk && this._onOk();\n    } else if (matchAny(element, ['#' + this.CANCEL_BUTTON_ID + this._suffix], true)) {\n        event.stopPropagation();\n        this._hide();\n        this._onCancel && this._onCancel();\n    }\n});\npicker.FileSelector.addMethod('_treeClickHandler', function (event) {\n    if (this._canClickOk()) {\n        var value = this._tree.getSelectedNode().param.uri;\n        this._uriTextbox.setValue(value);\n        this._onChange && this._onChange(value);\n        this._hide();\n        this._onOk && this._onOk();\n    }\n});\npicker.FileSelector.addMethod('_treeLoadHandler', function (event) {\n    this._visible && this._selectedUri && this._tree.openAndSelectNode(this._selectedUri);\n});\npicker.FileSelector.addMethod('_browseClickHandler', function (event) {\n    event.stopPropagation();\n    this._show();\n});\npicker.FileSelector.addMethod('_refreshButtonsState', function () {\n    this._canClickOk() ? buttonManager.enable(this._okButton) : buttonManager.disable(this._okButton);\n});\npicker.FileSelector.addMethod('_hide', function () {\n    dialogs.popup.hide(this._dom);\n    this._visible = false;\n});\npicker.FileSelector.addMethod('_show', function () {\n    this._selectedUri = jQuery(this._uriTextbox).val();\n    this._selectedUri && this._selectedUri.length > 0 ? this._tree.showTreePrefetchNodes(this._selectedUri) : this._tree.showTree(1);\n    dialogs.popup.show(this._dom, true);\n    this._visible = true;\n    this._selectedUri && this._tree.openAndSelectNode(this._selectedUri);\n    this._refreshButtonsState();\n});\npicker.FileSelector.addMethod('remove', function () {\n    jQuery(this._dom).remove();\n});\n\nexport default picker;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\nimport {$break} from 'prototype';\nimport TouchController from '../util/touch.controller';\nimport {buildActionUrl} from \"../util/utils.common\";\nimport buttonManager from '../core/core.events.bis';\nimport dynamicTree from '../dynamicTree/dynamicTree.utils';\nimport jQuery from 'jquery';\n\nvar resource = {\n    messages: {},\n    resourceLabelMaxLength: 100,\n    resourceIdMaxLength: 100,\n    resourceDescriptionMaxLength: 250,\n    PROPAGATE_EVENT: 'propagateEvent',\n    STEP_DISPLAY_ID: 'stepDisplay',\n    FLOW_CONTROLS_ID: 'flowControls',\n    initSwipeScroll: function () {\n        var display = jQuery('#' + resource.STEP_DISPLAY_ID)[0];    //        var hasControls = $(resource.FLOW_CONTROLS_ID).childElements().length > 0;\n        //\n        //        var scrollElement = hasControls ? display.up() : display;\n        //        var hasControls = $(resource.FLOW_CONTROLS_ID).childElements().length > 0;\n        //\n        //        var scrollElement = hasControls ? display.up() : display;\n        display && new TouchController(display.parent(), display.parents().eq(2), {}    //            debug: true\n        );\n    },\n    submitForm: function (formId, params, fillForm) {\n        if (!params) {\n            return;\n        }    // prepare action url\n        // prepare action url\n        var url = buildActionUrl(params);\n        fillForm && fillForm();    // write form attributes and submit it\n        // write form attributes and submit it\n        jQuery('#' + formId).attr('method', 'post').attr('action', url);\n        jQuery('#' + formId)[0].submit();\n    },\n    // Setup main event handler for click events on Add Resource pages.\n    registerClickHandlers: function (handlers, observeElementSelector, addAtBeginning) {\n        if (resource._bodyClickEventHandlers) {\n            //If we want some handlers to fire before others we should pass addAtBeginning = true\n            (addAtBeginning ? Array.prototype.unshift : Array.prototype.push).apply(resource._bodyClickEventHandlers, handlers);\n            return;\n        }\n        resource._bodyClickEventHandlers = handlers;\n        var selector = observeElementSelector || 'body';\n        jQuery(selector).on('click', function (event) {\n            resource._bodyClickEventHandlers && resource._bodyClickEventHandlers.each(function (clickEventHandler) {\n                var result = clickEventHandler(event);    //if handler returns some result\n                //this means that we have found necessary handler so\n                //do not need to process other\n                //if handler returns some result\n                //this means that we have found necessary handler so\n                //do not need to process other\n                if (result) {\n                    if (result !== resource.PROPAGATE_EVENT) {\n                        Event.stop(event);\n                    }\n                    throw $break;\n                }\n            });\n        });\n    },\n    TreeWrapper: function (options) {\n        var that = this;\n        this._treeId = options.treeId;\n        this._resourceUriInput = jQuery('#' + options.resourceUriInput || '#resourceUri')[0];\n        this._uri = this._resourceUriInput && this._resourceUriInput.getValue() || options.uri || '/';\n        if (!options.providerId)\n            throw 'There is no tree provider set for tree #{id}'.interpolate({ id: this._treeId });    // Setup folders tree\n        // Setup folders tree\n        var treeOptions = [\n            'providerId',\n            'rootUri',\n            'organizationId',\n            'publicFolderUri',\n            'urlGetNode',\n            'urlGetChildren'\n        ].inject({}, function (treeOption, key) {\n            options[key] !== null && (treeOption[key] = options[key]);\n            return treeOption;\n        });\n        this._tree = new dynamicTree.createRepositoryTree(this._treeId, treeOptions);\n        this._tree.observe('tree:loaded', function () {\n            that._tree.openAndSelectNode(jQuery('#' + that._resourceUriInput)[0].getValue());\n        });\n        this._tree.observe('leaf:selected', function (event) {\n            that._uri = event.memo.node.param.uri;\n            that._resourceUriInput.setValue(that._uri);\n        });\n        this._tree.observe('node:selected', function () {\n            that._resourceUriInput.setValue(that._uri = '');\n        });\n        return {\n            getTreeId: function () {\n                return that._treeId;\n            },\n            getTree: function () {\n                return that._tree;\n            },\n            selectFolder: function (folderUri) {\n                that._tree.openAndSelectNode(folderUri);\n            },\n            getSelectedFolderUri: function () {\n                return that._uri;\n            }\n        };\n    },\n    ////////////////////////////////\n    // Utility Methods\n    ////////////////////////////////\n    switchButtonState: function (button, state) {\n        buttonManager[state ? 'enable' : 'disable'].call(buttonManager, button);\n    },\n    switchDisableState: function (element, disable) {\n        (element = jQuery(element)[0]) && element[disable ? 'disable' : 'enable'].call(element);\n    },\n    generateResourceId: function (name) {\n        if (window.localContext && window.localContext.initOptions && window.localContext.initOptions.resourceIdNotSupportedSymbols) {\n            return name.replace(new RegExp(window.localContext.initOptions.resourceIdNotSupportedSymbols, 'g'), '_');\n        } else {\n            throw 'There is no resourceIdNotSupportedSymbols property in init options.';\n        }\n    },\n    testResourceId: function (resourceId) {\n        if (window.localContext && window.localContext.initOptions && window.localContext.initOptions.resourceIdNotSupportedSymbols) {\n            return new RegExp(window.localContext.initOptions.resourceIdNotSupportedSymbols, 'g').test(resourceId);\n        } else {\n            throw 'There is no resourceIdNotSupportedSymbols property in init options.';\n        }\n    },\n    labelValidator: function (value) {\n        var isValid = true;\n        var errorMessage = '';\n        if (value.blank()) {\n            errorMessage = resource.messages['labelIsEmpty'];\n            isValid = false;\n        } else if (value.length > resource.resourceLabelMaxLength) {\n            errorMessage = resource.messages['labelToLong'];\n            isValid = false;\n        }\n        return {\n            isValid: isValid,\n            errorMessage: errorMessage\n        };\n    },\n    getLabelValidationEntry: function (element) {\n        return {\n            element: element,\n            validators: [\n                {\n                    method: 'mandatory',\n                    messages: { mandatory: resource.messages['labelIsEmpty'] }\n                },\n                {\n                    method: 'minMaxLength',\n                    messages: { tooLong: resource.messages['labelToLong'] },\n                    options: { maxLength: resource.resourceLabelMaxLength }\n                }\n            ]\n        };\n    },\n    getIdValidationEntry: function (element) {\n        return {\n            element: element,\n            validators: [\n                {\n                    method: 'resourceIdChars',\n                    messages: resource.messages\n                },\n                {\n                    method: 'mandatory',\n                    messages: { mandatory: resource.messages['resourceIdIsEmpty'] }\n                },\n                {\n                    method: 'minMaxLength',\n                    messages: { tooLong: resource.messages['resourceIdToLong'] },\n                    options: { maxLength: resource.resourceIdMaxLength }\n                }\n            ]\n        };\n    },\n    /**\n     * The context of this method should contain _isEditMode property. Id it is true then validator will not validate\n     * the value but will return isValid=true.\n     */\n    resourceIdValidator: function (value) {\n        var isValid = true;\n        var errorMessage = '';\n        if (!this._isEditMode) {\n            if (value.blank()) {\n                errorMessage = resource.messages['resourceIdIsEmpty'];\n                isValid = false;\n            } else if (value.length > resource.resourceIdMaxLength) {\n                errorMessage = resource.messages['resourceIdToLong'];\n                isValid = false;\n            } else if (resource.testResourceId(value)) {\n                errorMessage = resource.messages['resourceIdInvalidChars'];\n                isValid = false;\n            }\n        }\n        return {\n            isValid: isValid,\n            errorMessage: errorMessage\n        };\n    },\n    getDescriptionValidationEntry: function (element) {\n        return {\n            element: element,\n            validators: [{\n                method: 'minMaxLength',\n                messages: { tooLong: resource.messages['descriptionToLong'] },\n                options: { maxLength: resource.resourceDescriptionMaxLength }\n            }]\n        };\n    },\n    descriptionValidator: function (value) {\n        var isValid = true;\n        var errorMessage = '';\n        if (value.length > resource.resourceDescriptionMaxLength) {\n            errorMessage = resource.messages['descriptionToLong'];\n            isValid = false;\n        }\n        return {\n            isValid: isValid,\n            errorMessage: errorMessage\n        };\n    },\n    dataSourceValidator: function (value) {\n        var isValid = true;\n        var errorMessage = '';\n        if (value.trim() === '') {\n            errorMessage = resource.messages['dataSourceInvalid'];\n            isValid = false;\n        }\n        return {\n            isValid: isValid,\n            errorMessage: errorMessage\n        };\n    },\n    queryValidator: function (value) {\n        var isValid = true;\n        var errorMessage = '';\n        if (value.trim() === '') {\n            errorMessage = resource.messages['queryInvalid'];\n            isValid = false;\n        }\n        return {\n            isValid: isValid,\n            errorMessage: errorMessage\n        };\n    },\n    getValidationEntries: function (elementsToValidate) {\n        // To use this method all elements should have validator or validationEntry property set.\n        return elementsToValidate.collect(function (element) {\n            if (element.validationEntry) {\n                return element.validationEntry;\n            } else {\n                return {\n                    validator: element.validator,\n                    element: element\n                };\n            }\n        });\n    }\n};\n\nexport default resource;"],"sourceRoot":""}