{"version":3,"sources":["webpack://jrs-ui/./src/dataSource/dataSource.common.js","webpack://jrs-ui/./src/resource/resource.locate.js"],"names":["options","jrsConfigs","array","exec","location","href","dfd","$","done","dataSourceController","DataSourceController","append","$el","render","parentFolderUri","decodeURIComponent","resolve","repositoryModel","RepositoryResourceModel","uri","contextPath","fetch","always","type","repositoryResourceTypes","toLowerCase","resourceLocator","CONTENT_REPOSITORY","LOCAL","NONE","FILE_SYSTEM","LOCATE_EVENT","ALLOWED_FILE_RESOURCE_EXTENSIONS","initialize","get","element","_","jQuery","this","resourceUri","resourceInput","browseButton","filePath","fileUploadInput","fakeFilePath","fakeFileUploadInput","fakeFileInput","fakeFileUploadInputText","newResourceLink","_initFileSelector","e","_initEvents","document","on","_clickHandler","providerId","_nextClickHandler","_uploadChangeHandler","event","hasClass","preventDefault","removeClass","validFileName","value","match","extension","message","resource","join","addClass","find","html","_updateResourceSelectorState","target","id","classes","_switchElementClasses","fileSelector","picker","uriTextboxId","browseButtonId","title","dialogTitle","remove"],"mappings":"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","file":"_chunks/chunk.4337.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2019 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport RepositoryResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport DataSourceController from './DataSourceController';\n\nvar options = jrsConfigs.addDataSource.initOptions;\nvar array = /ParentFolderUri=([^&]+)/.exec(location.href);\nvar dfd = $.Deferred().done(function () {\n    var dataSourceController = new DataSourceController(options);\n    $('#display').append(dataSourceController.$el);\n    dataSourceController.render();\n});\nif (array && array[1]) {\n    var parentFolderUri = decodeURIComponent(array[1]);\n    if ('/' === parentFolderUri) {\n        // it's root folder, it's always exists and it is always a folder ;)\n        // So, don't need to check any thing\n        options.parentFolderUri = parentFolderUri;\n        dfd.resolve();\n    } else {\n        var repositoryModel = new RepositoryResourceModel({ uri: parentFolderUri }, { contextPath: jrsConfigs.contextPath });\n        repositoryModel.fetch().always(function () {\n            if (repositoryModel.type && repositoryResourceTypes.FOLDER.toLowerCase() === repositoryModel.type.toLowerCase()) {\n                options.parentFolderUri = parentFolderUri;\n            }\n            dfd.resolve();\n        });\n    }\n} else {\n    dfd.resolve();\n}\n","/*\r\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\r\n * http://www.jaspersoft.com.\r\n *\r\n * Unless you have purchased a commercial license agreement from Jaspersoft,\r\n * the following license terms apply:\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as\r\n * published by the Free Software Foundation, either version 3 of the\r\n * License, or (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n * GNU Affero General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n/**\r\n * @version: $Id$\r\n */\r\n\r\nimport jQuery from 'jquery';\r\nimport _ from 'underscore';\r\nimport resource from './resource.base';\r\nimport picker from '../components/components.pickers';\r\n\r\nvar resourceLocator = {\r\n    CONTENT_REPOSITORY : 'CONTENT_REPOSITORY',\r\n    LOCAL : 'LOCAL',\r\n    NONE : 'NONE',\r\n    FILE_SYSTEM : 'FILE_SYSTEM',\r\n    LOCATE_EVENT : 'resource:locate',\r\n    ALLOWED_FILE_RESOURCE_EXTENSIONS: [\r\n        \"css\", //css\r\n        \"ttf\", //font\r\n        \"jpg\", \"jpeg\", \"gif\", \"bmp\", \"png\", //img\r\n        \"jar\", //jar\r\n        \"jrxml\", //jrxml\r\n        \"properties\", //properties\r\n        \"jrtx\", //jrtx\r\n        \"xml\", \"agxml\", //xml\r\n        \"docx\", \"doc\", \"ppt\", \"pptx\", \"xls\", \"xlsx\", \"ods\", \"odt\", \"odp\", \"pdf\", \"rtf\", \"html\" //contentResource\r\n    ],\r\n\r\n    /*\r\n     * Initializes Resource Locator common logic.\r\n     * @param options Object with following properties:\r\n     *     options = {\r\n     *          fileUploadInput : 'filePath',\r\n     *          resourceInput : 'resourceUri',\r\n     *          browseButton : 'browser_button',\r\n     *          newResourceLink : 'link_id',\r\n     *          treeId : 'resourceBrowserTreeId',\r\n     *          providerId : 'treeProviderId',\r\n     *          dialogTitle : 'Select Resource From Repository'\r\n     *      }\r\n     *\r\n     */\r\n    initialize: function(options) {\r\n        var get = function(element) {\r\n            return _.isObject(element) ? element : jQuery('#' + element)[0];\r\n        };\r\n\r\n        this.resourceUri = get(options.resourceInput);\r\n        this.browseButton = get(options.browseButton);\r\n        this.filePath = get(options.fileUploadInput);\r\n        this.fakeFilePath = get(options.fakeFileUploadInput);\r\n        this.fakeFileInput = get(options.fakeFileUploadInputText);\r\n        this.newResourceLink = get(options.newResourceLink);\r\n\r\n        try {\r\n            this._initFileSelector(options);\r\n        } catch(e) {\r\n            /* bypass logging to console */\r\n        } finally {\r\n            this._initEvents(options);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    _initEvents: function(options) {\r\n        jQuery(document).on(\"click\", \"#CONTENT_REPOSITORY, #FILE_SYSTEM, #NONE, #LOCAL\", this._clickHandler);\r\n        if (options.providerId === \"fileResourceTreeDataProvider\") {\r\n            jQuery(\"#next\").on(\"click\", resourceLocator._nextClickHandler);\r\n            jQuery(\"#filePath\").on(\"change\", resourceLocator._uploadChangeHandler);\r\n        }\r\n    },\r\n\r\n    _nextClickHandler: function(event) {\r\n        if (jQuery(\"#fileUpload\").hasClass(\"error\")) {\r\n            event.preventDefault();\r\n        }\r\n    },\r\n\r\n    _uploadChangeHandler: function(event) {\r\n        jQuery(\"#fileUpload\").removeClass(\"error\");\r\n\r\n        var validFileName = true;\r\n\r\n        var fileName = jQuery(\"#filePath\")[0].value;\r\n        if (fileName) {\r\n            var match = jQuery(\"#filePath\")[0].value.match(/.*\\.([^\\.]+)$/);\r\n            if (match) {\r\n                var extension = match[1];\r\n                if (_.indexOf(resourceLocator.ALLOWED_FILE_RESOURCE_EXTENSIONS, extension) < 0) {\r\n                    validFileName = false;\r\n                }\r\n            } else {\r\n                validFileName = false;\r\n            }\r\n        } else {\r\n            validFileName = false;\r\n        }\r\n\r\n        if (!validFileName) {\r\n            var message =\r\n                resource.messages['resource.report.unsupportedFileType.error'] +\r\n                    \" \" +resourceLocator.ALLOWED_FILE_RESOURCE_EXTENSIONS.join(\", \");\r\n\r\n            jQuery(\"#fileUpload\").addClass(\"error\").find(\"span.warning\")\r\n                .html(message);\r\n        }\r\n    },\r\n\r\n    _clickHandler : function(event) {\r\n        resourceLocator._updateResourceSelectorState(event.target.id);\r\n    },\r\n\r\n    _updateResourceSelectorState : function(id) {\r\n        // Update File upload component state.\r\n        resource.switchButtonState(this.filePath, id === this.FILE_SYSTEM);\r\n        resource.switchButtonState(this.fakeFilePath, id === this.FILE_SYSTEM);\r\n        resource.switchButtonState(this.fakeFileInput, id === this.FILE_SYSTEM);\r\n        // Update Resource selector component state: button + text input.\r\n        resource.switchButtonState(this.browseButton, id === this.CONTENT_REPOSITORY);\r\n        resource.switchDisableState(this.resourceUri, id !== this.CONTENT_REPOSITORY);\r\n        // Update Create new resource link state.\r\n        var classes = id === this.LOCAL ? ['disabled', 'launcher'] : [];\r\n        this._switchElementClasses(this.newResourceLink, classes);\r\n    },\r\n\r\n    _initFileSelector : function(options) {\r\n        this.fileSelector = new picker.FileSelector(_.extend({}, options, {\r\n            uriTextboxId: this.resourceUri,\r\n            browseButtonId: this.browseButton,\r\n            title: options.dialogTitle\r\n        }));\r\n    },\r\n\r\n    remove : function(options) {\r\n        this.fileSelector.remove();\r\n    },\r\n\r\n    ///////////////////////////\r\n    // Utility methods.\r\n    ///////////////////////////\r\n    _switchElementClasses : function(element, classes) {\r\n        element && classes && jQuery(element).removeClass(classes[0]).addClass(classes[1]);\r\n    }\r\n};\r\n\r\nexport default resourceLocator;\r\n"],"sourceRoot":""}