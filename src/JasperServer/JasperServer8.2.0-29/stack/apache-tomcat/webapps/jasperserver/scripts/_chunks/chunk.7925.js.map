{"version":3,"sources":["webpack://jrs-ui/../bi-report/src/bi/report/jive/model/BaseComponentModel.js","webpack://jrs-ui/../bi-report/src/bi/report/jive/model/CrosstabComponentModel.js"],"names":["Backbone","constructor","attributes","options","this","parent","_notify","evt","handleServerError","result","uiModuleType","get","handleClientError","BaseComponentModel","defaults","type","jiveTypes","module","uimodule","id","undefined","crosstabId","fragmentId","startColumnIndex","rowGroups","dataColumns","actions","xTabElement","order","sort","componentType","interactiveComponentTypes","sortMeasureIndex","columnValues","groupIndex","initialize","o","config","_","events","ACTION_PERFORMED","BEFORE_ACTION_PERFORMED","getId","getCrosstabId","getFragmentId","sortRowGroup","self","payload","action","name","trigger","reportEvents","isDataColumnSortable","columnIndex","getColumnOrder","sortByDataColumn","dataColumn","updateFromReportComponentObject","obj","setterObj","length","set","toReportComponentObject","getDataColumns","concat","getRowGroups","createIdAccordingToStructure","generateIdsForColumns","columns","column","generateIdsForRows","rows","row","sortable","index","subArr","level","i","l","value","push","key","j"],"mappings":"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","file":"_chunks/chunk.7925.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\nimport Backbone from 'backbone';\nexport default Backbone.Model.extend({\n    constructor: function (attributes, options) {\n        options || (options = {});\n        this.parent = options.parent;\n        Backbone.Model.prototype.constructor.call(this, attributes, options);\n    },\n    // internal functions\n    _notify: function (evt) {\n        // bubble the event\n        this.parent._notify(evt);\n    },\n    handleServerError: function (result) {\n        var uiModuleType = this.get('uiModuleType');\n        uiModuleType && uiModuleType.handleServerError(result);\n    },\n    handleClientError: function (result) {\n        var uiModuleType = this.get('uiModuleType');\n        uiModuleType && uiModuleType.handleClientError(result);\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\nimport BaseComponentModel from './BaseComponentModel';\nimport jiveTypes from '../enum/jiveTypes';\nimport interactiveComponentTypes from '../enum/interactiveComponentTypes';\nimport _ from 'underscore';\nimport reportEvents from '../../enum/reportEvents';\n\nexport default BaseComponentModel.extend({\n    defaults: function () {\n        return {\n            type: jiveTypes.CROSSTAB,\n            module: 'jive.crosstab',\n            uimodule: 'jive.crosstab.interactive',\n            id: undefined,\n            crosstabId: undefined,\n            fragmentId: undefined,\n            startColumnIndex: 0,\n            rowGroups: [],\n            dataColumns: []\n        };\n    },\n    actions: {\n        'change:order': function (xTabElement) {\n            var order = null;\n            xTabElement.sort.order === 'asc' && (order = 'ASCENDING');\n            xTabElement.sort.order === 'desc' && (order = 'DESCENDING');\n            return xTabElement.componentType === interactiveComponentTypes.CROSSTAB_COLUMN ? {\n                'actionName': 'sortXTabByColumn',\n                'sortData': {\n                    'crosstabId': this.attributes.crosstabId,\n                    'order': order,\n                    'measureIndex': xTabElement.sortMeasureIndex,\n                    'columnValues': xTabElement.columnValues\n                }\n            } : {\n                'actionName': 'sortXTabRowGroup',\n                'sortData': {\n                    'crosstabId': this.attributes.crosstabId,\n                    'order': order || 'NONE',\n                    'groupIndex': xTabElement.groupIndex\n                }\n            };\n        }\n    },\n    initialize: function (o) {\n        this.config = {};\n        _.extend(this.config, o);\n        this.events = {\n            ACTION_PERFORMED: 'action',\n            BEFORE_ACTION_PERFORMED: 'beforeAction'\n        };\n    },\n    getId: function () {\n        return this.config.id;\n    },\n    getCrosstabId: function () {\n        return this.config.crosstabId;\n    },\n    getFragmentId: function () {\n        return this.config.fragmentId;\n    },\n    sortRowGroup: function (groupIndex, order) {\n        var self = this, payload = {\n            action: {\n                'actionName': 'sortXTabRowGroup',\n                'sortData': {\n                    'crosstabId': this.getCrosstabId(),\n                    'order': order,\n                    'groupIndex': groupIndex\n                }\n            }\n        };\n        self._notify({ name: self.events.BEFORE_ACTION_PERFORMED });\n        self.trigger(reportEvents.ACTION, payload.action);\n    },\n    isDataColumnSortable: function (columnIndex) {\n        var dataColumn = this.config.dataColumns[columnIndex - this.config.startColumnIndex];\n        return typeof dataColumn.sortMeasureIndex == 'number';\n    },\n    getColumnOrder: function (columnIndex) {\n        return this.config.dataColumns[columnIndex - this.config.startColumnIndex].order;\n    },\n    sortByDataColumn: function (columnIndex, order) {\n        var self = this, dataColumn = this.config.dataColumns[columnIndex - this.config.startColumnIndex], payload = {\n            action: {\n                'actionName': 'sortXTabByColumn',\n                'sortData': {\n                    'crosstabId': this.getCrosstabId(),\n                    'order': order,\n                    'measureIndex': dataColumn.sortMeasureIndex,\n                    'columnValues': dataColumn.columnValues\n                }\n            }\n        };\n        self._notify({ name: self.events.BEFORE_ACTION_PERFORMED });\n        self.trigger(reportEvents.ACTION, payload.action);\n    },\n    updateFromReportComponentObject: function (obj) {\n        var setterObj = {};\n        if ('order' in obj.sort) {\n            setterObj.order = obj.sort.order;\n        } else if (_.keys(obj.sort).length === 0) {\n            setterObj.order = null;\n        }\n        this.set(setterObj, obj);\n    },\n    toReportComponentObject: function () {\n        return this.getDataColumns(this.attributes.dataColumns).concat(this.getRowGroups(this.attributes.rowGroups));\n    },\n    getDataColumns: function () {\n        var cloneAndCreateIdField = function (columns) {\n                var id = {\n                    id: this.getId() + '/dataColumns',\n                    componentType: interactiveComponentTypes.CROSSTAB_COLUMN\n                };\n                return _.map(columns, function (column) {\n                    return _.extend({}, id, column);\n                });\n            }, createIdAccordingToStructure = _.bind(generateIdsForColumns, this, 0), filterNotSortable = function (columns) {\n                return _.filter(columns, function (column) {\n                    return typeof column.sortMeasureIndex == 'number';\n                });\n            }, transformAccordingToTable = function (columns) {\n                _.each(columns, function (column) {\n                    column.sort = {};\n                    column.order === 'ASCENDING' && (column.sort.order = 'asc');\n                    column.order === 'DESCENDING' && (column.sort.order = 'desc');\n                    delete column.order;\n                });\n                return columns;\n            };\n        return _.compose(transformAccordingToTable, filterNotSortable, createIdAccordingToStructure, cloneAndCreateIdField);\n    }(),\n    getRowGroups: function () {\n        var cloneAndCreateIdField = function (rows) {\n                var id = {\n                    id: this.getId() + '/rowGroups',\n                    componentType: interactiveComponentTypes.CROSSTAB_ROW\n                };\n                return _.map(rows, function (row) {\n                    return _.extend({}, id, row);\n                });\n            }, createIdAccordingToStructure = generateIdsForRows, filterNotSortable = function (rows) {\n                return _.filter(rows, function (row) {\n                    return row.sortable;\n                });\n            }, transformAccordingToTable = function (rows) {\n                _.each(rows, function (row) {\n                    row.sort = {};\n                    row.order === 'ASCENDING' && (row.sort.order = 'asc');\n                    row.order === 'DESCENDING' && (row.sort.order = 'desc');\n                    delete row.order;\n                    delete row.sortable;\n                });\n                return rows;\n            };\n        return _.compose(transformAccordingToTable, filterNotSortable, createIdAccordingToStructure, cloneAndCreateIdField);\n    }()\n});\nfunction generateIdsForColumns(index, columns) {\n    var level = {}, subArr, name = 0;\n    if (!columns.length || columns[0].columnValues && columns[0].columnValues.length > index) {\n        for (var i = 0, l = columns.length; i < l; i++) {\n            subArr = level[columns[i].columnValues[index].value] || (level[columns[i].columnValues[index].value] = []);\n            subArr.push(columns[i]);\n        }\n        for (var key in level) {\n            subArr = level[key];\n            for (var j = 0, l = subArr.length; j < l; j++) {\n                subArr[j].id += '/' + name;\n            }\n            generateIdsForColumns(index + 1, level[key]);\n            name++;\n        }\n    }\n    return columns;\n}\nfunction generateIdsForRows(rows) {\n    for (var i = 0, l = rows.length; i < l; i++) {\n        rows[i].groupIndex = i;\n        rows[i].id += '/' + i;\n    }\n    return rows;\n}"],"sourceRoot":""}