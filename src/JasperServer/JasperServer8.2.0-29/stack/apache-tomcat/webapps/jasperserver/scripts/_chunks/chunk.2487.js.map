{"version":3,"sources":["webpack://jrs-ui/../bi-report/src/bi/report/jive/view/CrosstabJiveComponentView.js","webpack://jrs-ui/../js-sdk/src/common/component/base/util/attachableComponentPositionUtil.ts"],"names":["BaseJiveComponentView","init","this","reportContainer","getReportContainer","getReportId","initJiveComponents","resetSelected","initJiveEvents","model","crosstab","headerToolbar","listenTo","_onHeaderToolbarSelect","overlay","_overlayClicked","crosstabElement","fragmentId","getFragmentId","on","_","_onClick","get","stateModel","isFloatingCrosstabHeaderEnabled","_initFloatingHeaders","$scrollContainer","find","is","_scrollHeaders","floatingColumnHeader","floatingRowHeader","floatingCrossHeader","firstCol","lastCell","hide","isSelectionActive","JiveOverlayView","parentElement","headerToolbarViewFactory","$el","addClass","e","$","target","parent","currentTarget","hasClass","buttonView","buttonModel","order","sort","selectDataColumn","cell","columnIdx","data","parentTable","parents","firstHeader","selected","header","isColumn","overlaySize","getOverlaySize","css","width","height","show","setPosition","of","my","at","collision","firstHeaderColumnIdx","sortingEnabled","isDataColumnSortable","_setToolbarAndOverlayPosition","selectRowGroup","headers","lastHeader","length","lastEl","firstEl","scaleFactor","lastElOffset","offset","firstElOffset","left","outerWidth","top","outerHeight","sortOrder","getColumnOrder","sortByDataColumn","rowGroupIdx","config","rowGroups","sortRowGroup","render","dfd","setDataReportId","report","id","isDefaultJiveUiEnabled","resolve","canFloat","_getModulesToLoad","modules","push","detachEvents","off","remove","arguments","leading","trailing","scrollData","bColMoved","bRowMoved","_onColumnHeaderScroll","_onColumnHeaderScrollStop","_onRowHeaderScroll","_onRowHeaderScrollStop","evt","forceScroll","_isCrosstabVisible","scrollContainer","scrolledTop","scrolledLeft","scrollTop","scrollLeft","_scrollColumnHeader","_scrollRowHeader","_scrollCrossSection","containerTop","crosstabId","first","closest","last","_getColumnHeaderFloatingTable","floatingTbl","headerTop","firstHeaderCel","firstRowHeaderCel","lastTableCel","diff","floatCondition","_applyScaleTransform","trigger","_getFloatingTable","containerLeft","headerLeft","_markCrossHeaderElements","floatingCrossTbl","floatingColumnTbl","floatingRowTbl","bCrossMoved","tableClass","elementClass","altElementClass","tbl","appendTo","jo","attr","colIdx","altJo","filter","eq","clone","row","$row","lastRow","cloneTD","rowTD","rowTDs","i","j","k","tblJrPage","parentTableRows","rows","cloneWidth","startIndex","colSpanLength","finishedCalculatedStartIndex","index","lastRowIndex","allRowSpans","td","prop","maxSpan","Math","max","apply","idx","append","undefined","firstRowTDs","firstRowClone","position","crosstabFloatingHeader","lastInteractiveRowHeaderRow","lastInteractiveRowHeader","firstRow","firstRowIndex","currentRowMaxSpan","currentRowSpans","colSpanStop","bFoundColHeader","firstColHeader","each","tdIdx","$td","floatingTable","floatingHeader","abs","newTop","floatingRowTable","floatingRowTableRight","tableHeader","overlayOffset","bHeaderToolbarPositioned","getInitialPos","options","attachToOffset","attachToSize","padding","placeElementAboveAttachTo","elementSize","placeElementOnTheRightSideOfAttachTo","placeElementOnTheLeftSideOfAttachTo","alignElementVertically","alignElementHorizontally","alignElementByRightEdgeOfAttachTo","getPosition","attachTo","element","jQuery","query","body","$attachTo","attachToHeight","tagName","toLowerCase","attachToWidth","bodyHeight","bodyWidth","elementWidth","innerWidth","elementHeight","innerHeight","initialPos","verticallyAligned","elementIntersectsViewPortBottomBoundary","elementIntersectsViewportTopBoundary","elementIntersectsViewportRightBoundary","elementIntersectsViewportLeftBoundary"],"mappings":"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","file":"_chunks/chunk.2487.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\n\n/**\n * @author: Kostiantyn Tsaregradskyi\n * @version: $Id$\n */\n\nimport BaseJiveComponentView from './BaseJiveComponentView';\nimport _ from 'underscore';\nimport headerToolbarViewFactory from '../factory/headerToolbarViewFactory';\nimport JiveOverlayView from './overlay/JiveOverlayView';\nimport $ from 'jquery';\n\nimport 'jquery-ui/ui/position';\n\nexport default BaseJiveComponentView.extend({\n\n    init: function(){\n        this.reportContainer = this.getReportContainer(this.getReportId());\n\n        this.initJiveComponents(this.reportContainer);\n        this.resetSelected();\n\n        this.initJiveEvents(this.model);\n    },\n\n    initJiveEvents: function(crosstab){\n        this.headerToolbar && this.listenTo(this.headerToolbar, \"select\", this._onHeaderToolbarSelect);\n\n        this.overlay && this.listenTo(this.overlay, \"overlayClicked\", this._overlayClicked);\n\n        this.crosstabElement = this.getReportContainer(this.getReportId());\n\n        var fragmentId = crosstab.getFragmentId();\n\n        this.crosstabElement.on('click touchend', '.jrxtcolheader[data-jrxtid=\\'' +\n            fragmentId + '\\']', _.bind(this._onClick, this, crosstab));\n        this.crosstabElement.on('click touchend', '.jrxtdatacell[data-jrxtid=\\'' +\n            fragmentId + '\\']', _.bind(this._onClick, this, crosstab));\n        this.crosstabElement.on('click touchend', '.jrxtrowheader[data-jrxtid=\\'' +\n            fragmentId + '\\']', _.bind(this._onClick, this, crosstab));\n\n        if (this.model.get(\"hasFloatingHeaders\") && this.stateModel.isFloatingCrosstabHeaderEnabled()) {\n            this._initFloatingHeaders();\n\n            this.listenTo(this.model, \"change:scaleFactor\", function() {\n                // force rescaling the floating header\n                if (this.$scrollContainer.find(\"table.jr_floating_cross_header\").is(\":visible\") ||\n                    this.$scrollContainer.find(\"table.jr_floating_row_header\").is(\":visible\") ||\n                    this.$scrollContainer.find(\"table.jr_floating_column_header\").is(\":visible\")) {\n                    this._scrollHeaders(null, true);\n                }\n\n                this.floatingColumnHeader = null;\n                this.floatingRowHeader = null;\n                this.floatingCrossHeader = null;\n\n                this.firstCol = null;\n                this.lastCell = null;\n            });\n        }\n\n        // hide visual selection elements when scaling\n        this.listenTo(this.model, \"change:scaleFactor\", function() {\n            this.hide();\n            this.resetSelected();\n            this.isSelectionActive = false;\n        });\n    },\n\n    initJiveComponents: function(reportContainer){\n        //TODO i18n\n        this.overlay = new JiveOverlayView({\n            parentElement: reportContainer\n        });\n\n        this.headerToolbar = headerToolbarViewFactory(this.model.get(\"type\"), {\n            parentElement: reportContainer\n        });\n\n        this.headerToolbar.$el.addClass(\"jr_xtab\");\n    },\n\n    _onClick: function(crosstab, e){\n        if(!$(e.target).parent().is('._jrHyperLink')) {\n            var axis = $(e.currentTarget).hasClass(\"jrxtrowheader\") ? \"RowGroup\" : \"DataColumn\";\n            this[\"select\" + axis](crosstab, $(e.currentTarget));\n            return false;\n        }\n    },\n\n    _onHeaderToolbarSelect: function(buttonView, buttonModel, e){\n        var order = buttonModel.get(\"order\");\n        buttonView.$el.hasClass(\"disabled\") ? this.hide() : this.sort(order);\n    },\n\n    selectDataColumn: function(crosstab, cell) {\n        var columnIdx = cell.data('jrxtcolidx');\n        var fragmentId = cell.data('jrxtid');\n        var parentTable = cell.parents(\"table:first\");\n        var firstHeader = $('.jrxtcolheader[data-jrxtid=\\'' + fragmentId + '\\'][data-jrxtcolidx=\\'' + columnIdx + '\\']:first', parentTable);\n        var lastCell = $('.jrxtdatacell[data-jrxtid=\\'' + fragmentId + '\\'][data-jrxtcolidx=\\'' + columnIdx + '\\']:last', parentTable);\n\n        var selected = {crosstab: crosstab, header: firstHeader, cell:cell, isColumn: true};\n        this.resetSelected(selected);\n\n        var overlaySize = this.getOverlaySize(lastCell, firstHeader, this.model.get(\"scaleFactor\"));\n\n        this.overlay.css({\n            width: overlaySize.width,\n            height: overlaySize.height\n        }).show().setPosition({\n            of: firstHeader,\n            my: 'left top',\n            at:'left top',\n            collision:'none'\n        });\n\n        var firstHeaderColumnIdx = firstHeader.data('jrxtcolidx');\n        var sortingEnabled = crosstab.isDataColumnSortable(firstHeaderColumnIdx);\n\n        this.headerToolbar.show(sortingEnabled);\n        this._setToolbarAndOverlayPosition();\n\n        this.isSelectionActive = true;\n    },\n    selectRowGroup: function(crosstab, cell) {\n        var columnIdx = cell.data('jrxtcolidx');\n        var fragmentId = cell.data('jrxtid');\n        var headers = $('.jrxtrowheader[data-jrxtid=\\'' + fragmentId + '\\'][data-jrxtcolidx=\\'' + columnIdx + '\\']', cell.parents(\"table:first\"));\n        var firstHeader = $(headers[0]);\n        var lastHeader = $(headers[headers.length - 1]);\n\n        var selected = {crosstab: crosstab, header: firstHeader, cell: cell, isColumn: false};\n        this.resetSelected(selected);\n\n        var overlaySize = this.getOverlaySize(lastHeader, firstHeader, this.model.get(\"scaleFactor\"));\n\n        this.overlay.css({\n            width: overlaySize.width,\n            height: overlaySize.height\n        }).show();\n        this.headerToolbar.show(true);\n        this._setToolbarAndOverlayPosition();\n\n        this.isSelectionActive = true;\n    },\n\n    getOverlaySize: function(lastEl, firstEl, scaleFactor){\n        var lastElOffset = lastEl.offset(),\n            firstElOffset = firstEl.offset(),\n            scaleFactor = scaleFactor || 1;\n\n        return {\n            width: (lastElOffset.left + lastEl.outerWidth() - firstElOffset.left) * scaleFactor,\n            height: lastElOffset.top + (lastEl.outerHeight() * scaleFactor)  - firstElOffset.top\n        }\n    },\n\n    sort: function(order){\n        this.hide();\n\n        var selected = this.selected;\n        var crosstab = selected.crosstab;\n\n        if (this.selected.header.hasClass('jrxtcolheader')) {\n            var columnIdx = selected.header.data('jrxtcolidx');\n            var sortOrder = order;\n            if (sortOrder == crosstab.getColumnOrder(columnIdx)) {\n                sortOrder = 'NONE';\n            }\n            crosstab.sortByDataColumn(columnIdx, sortOrder);\n\n        } else if (selected.header.hasClass('jrxtrowheader')) {\n            var rowGroupIdx = selected.header.data('jrxtcolidx');\n            var sortOrder = order;\n            if (sortOrder == crosstab.config.rowGroups[rowGroupIdx].order) {\n                sortOrder = 'NONE';\n            }\n            crosstab.sortRowGroup(rowGroupIdx, sortOrder);\n        }\n    },\n\n    hide: function(){\n        this.overlay && this.overlay.hide();\n        this.headerToolbar && this.headerToolbar.hide();\n        this.$el.hide();\n    },\n\n    show: function(){\n        this.overlay && this.overlay.show();\n        this.headerToolbar && this.headerToolbar.$el.show();\n        this.$el.show();\n    },\n\n    render: function($el){\n        var dfd = new $.Deferred();\n\n        this.setDataReportId($el, this.report.id);\n\n        if (!this.stateModel.isDefaultJiveUiEnabled()) {\n            dfd.resolve();\n            return dfd;\n        }\n\n        this.init();\n\n        this.overlay && this.overlay.render();\n        this.headerToolbar && this.headerToolbar.render();\n\n        dfd.resolve();\n\n        this.canFloat = true;\n\n        return dfd;\n    },\n\n    resetSelected: function(selected){\n        this.selected = selected ? selected : null;\n    },\n\n    _getModulesToLoad: function() {\n        var modules = BaseJiveComponentView.prototype._getModulesToLoad.call(this);\n\n        //TODO: find out why it's not in a themes folder\n        modules.push(\"csslink!jr.jive.crosstab.templates.styles.css\");\n\n        return modules;\n    },\n\n    detachEvents: function(){\n        this.crosstabElement && this.crosstabElement.off();\n    },\n\n    remove: function() {\n        this.overlay && this.overlay.remove();\n        this.headerToolbar && this.headerToolbar.remove();\n\n        if (this.$scrollContainer) {\n            this.floatingColumnHeader && this.floatingColumnHeader.remove();\n            this.floatingRowHeader && this.floatingRowHeader.remove();\n            this.floatingCrossHeader && this.floatingCrossHeader.remove();\n\n            this.floatingColumnHeader = null;\n            this.floatingRowHeader = null;\n            this.floatingCrossHeader = null;\n\n            this.firstCol = null;\n            this.lastCell = null;\n\n            this.$scrollContainer.off(\"scroll\");\n        }\n\n        BaseJiveComponentView.prototype.remove.call(this, arguments);\n    },\n\n    _overlayClicked: function() {\n        this.hide();\n        this.resetSelected();\n        this.isSelectionActive = false;\n    },\n\n    _initFloatingHeaders: function() {\n        this.$scrollContainer = $(this.stateModel.get(\"container\"));\n\n        // scrollContainer must have position!=static in order for the floating headers to behave properly\n        if (this.$scrollContainer.css(\"position\") === \"static\") {\n            this.$scrollContainer.css(\"position\", \"relative\");\n        }\n\n        this.canFloat = false;\n\n        // relax the scroll event triggering a bit by throttling it\n        this.$scrollContainer.on(\"scroll\", _.throttle(_.bind(this._scrollHeaders, this), 100, { leading: true, trailing: true }));\n\n        this.scrollData = {\n            bColMoved: false,\n            bRowMoved: false\n        };\n\n        this.on(\"columnHeader:scroll\", this._onColumnHeaderScroll);\n        this.on(\"columnHeader:scrollStop\", this._onColumnHeaderScrollStop);\n\n        this.on(\"rowHeader:scroll\", this._onRowHeaderScroll);\n        this.on(\"rowHeader:scrollStop\", this._onRowHeaderScrollStop);\n    },\n\n    _scrollHeaders: function(evt, forceScroll) {\n        if (!this.canFloat || !this._isCrosstabVisible()) {\n            return;\n        }\n\n        var scrollContainer = this.$scrollContainer,\n            scrolledTop = false,\n            scrolledLeft = false,\n            scrollData = this.scrollData;\n\n        // Determine scroll direction\n        if (scrollData.scrollTop != null) { // check previous scrollTop\n            if (scrollContainer.scrollTop() != scrollData.scrollTop) {\n                scrollData.scrollTop = scrollContainer.scrollTop();\n                scrolledTop = true;\n            }\n        } else if (scrollContainer.scrollTop() !== 0) {\n            scrollData.scrollTop = scrollContainer.scrollTop();\n            scrolledTop = true;\n        }\n\n        if (scrollData.scrollLeft != null) { // check previous scrollLeft\n            if (scrollContainer.scrollLeft() != scrollData.scrollLeft) {\n                scrollData.scrollLeft = scrollContainer.scrollLeft();\n                scrolledLeft = true;\n            }\n        } else if (scrollContainer.scrollLeft() !== 0) {\n            scrollData.scrollLeft = scrollContainer.scrollLeft();\n            scrolledLeft = true;\n        }\n\n        if (!scrolledLeft && !scrolledTop && !forceScroll) {\n            return;\n        }\n\n        this._scrollColumnHeader();\n        this._scrollRowHeader();\n        this._scrollCrossSection();\n    },\n\n    /**\n     * Checks if the crosstab is in the visible area of the report container\n     * @returns {boolean}\n     * @private\n     */\n    _isCrosstabVisible: function() {\n        var scrollContainer = this.$scrollContainer,\n            containerTop = scrollContainer.offset().top,\n            crosstabId = this.model.getFragmentId(),\n            firstCol, lastCell, isNotVisible;\n\n        if (!this.firstCol) {\n            this.firstCol = scrollContainer.find(\".jrxtcolfloating[data-jrxtid='\" + crosstabId + \"']\").first();\n        }\n        firstCol = this.firstCol;\n\n        if (!this.lastCell) {\n            this.lastCell = firstCol.closest(\"table\").find(\".jrxtdatacell[data-jrxtid='\" + crosstabId + \"']\").last();\n        }\n        lastCell = this.lastCell;\n\n        isNotVisible = lastCell.offset().top < containerTop || firstCol.offset().top > (containerTop + scrollContainer.outerHeight());\n        return !isNotVisible;\n    },\n\n    _scrollColumnHeader: function() {\n        var scrollContainer = this.$scrollContainer,\n            scrollData = this.scrollData,\n            crosstabId = this.model.getFragmentId(),\n            firstHeader = scrollContainer.find(\".jrxtcolfloating[data-jrxtid='\" + crosstabId + \"']\").first();\n\n        if (!firstHeader.length) {\n            return;\n        }\n\n        if (!this.floatingColumnHeader) {\n            this.floatingColumnHeader = this._getColumnHeaderFloatingTable(firstHeader, crosstabId);\n        }\n\n        var floatingTbl = this.floatingColumnHeader,\n            containerTop = scrollContainer.offset().top,\n            headerTop = firstHeader.closest('tr').offset().top,\n            firstHeaderCel = scrollContainer.find(\".jrxtcolfloating[data-jrxtid='\" + crosstabId + \"']\").first(),\n            firstRowHeaderCel = scrollContainer.find(\".jrxtrowheader[data-jrxtid='\" + crosstabId + \"']\").first(),\n            lastTableCel = firstHeaderCel.closest(\"table\").find(\".jrxtdatacell[data-jrxtid='\" + crosstabId + \"']\").last(),\n            diff = lastTableCel.length ? lastTableCel.offset().top - floatingTbl.outerHeight() - containerTop: -1, // if last cell is not visible, hide the floating header\n            scaleFactor = this.model.get(\"scaleFactor\"),\n            floatCondition = headerTop - containerTop < 0 && diff > 0;\n\n        if ((!scrollData.bColMoved && floatCondition) || (scrollData.bColMoved && floatCondition)) {\n            floatingTbl.show();\n\n            if (scaleFactor) {\n                this._applyScaleTransform(floatingTbl, scaleFactor);\n            }\n\n            floatingTbl.offset({\n                top: containerTop,\n                left: firstRowHeaderCel.offset().left\n            });\n\n            scrollData.bColMoved = true;\n            this.trigger(\"columnHeader:scroll\");\n        } else if (scrollData.bColMoved) {\n            floatingTbl.hide();\n            scrollData.bColMoved = false;\n            this.trigger(\"columnHeader:scrollStop\");\n        }\n    },\n\n    _scrollRowHeader: function() {\n        var scrollContainer = this.$scrollContainer,\n            scrollData = this.scrollData,\n            crosstabId = this.model.getFragmentId();\n\n        var firstHeader = scrollContainer.find(\".jrxtrowfloating[data-jrxtid='\" + crosstabId + \"']\").first();\n        if (!firstHeader.length) {\n            return;\n        }\n\n        if (!this.floatingRowHeader) {\n            this.floatingRowHeader = this._getFloatingTable(firstHeader, crosstabId, \"jr_floating_row_header\", \"jrxtrowfloating\");\n        }\n\n        var floatingTbl = this.floatingRowHeader,\n            containerLeft = scrollContainer.offset().left,\n            headerLeft = firstHeader.offset().left,\n            lastTableCel = scrollContainer.find(\"table.jrPage .jrxtdatacell[data-jrxtid='\" + crosstabId + \"']\").last(),\n            diff = lastTableCel.length ? lastTableCel.offset().left - floatingTbl.width() - containerLeft: -1, // if last cell is not visible, hide the floating header\n            scaleFactor = this.model.get(\"scaleFactor\"),\n            floatCondition = headerLeft - containerLeft < 0 && diff > 0;\n\n        if (((!scrollData.bRowMoved && floatCondition) || (scrollData.bRowMoved && floatCondition)) &&\n            0.8 * scrollContainer.outerWidth() > floatingTbl.outerWidth() * scaleFactor) {\n\n            floatingTbl.show();\n\n            if (scaleFactor) {\n                this._applyScaleTransform(floatingTbl, scaleFactor);\n            }\n\n            floatingTbl.offset({\n                top: firstHeader.offset().top,\n                left: containerLeft\n            });\n\n            scrollData.bRowMoved = true;\n            this.trigger(\"rowHeader:scroll\");\n        } else if (scrollData.bRowMoved) {\n            floatingTbl.hide();\n            scrollData.bRowMoved = false;\n            this.trigger(\"rowHeader:scrollStop\");\n        }\n    },\n\n    _scrollCrossSection: function() {\n        var scrollContainer = this.$scrollContainer,\n            scrollData = this.scrollData,\n            crosstabId = this.model.getFragmentId();\n\n        if (!scrollContainer.find(\"table.jr_floating_cross_header[data-jrxtid='\" + crosstabId + \"']\").length) {\n            this._markCrossHeaderElements(crosstabId);\n        }\n\n        var firstHeader = scrollContainer.find(\".jrxtcrossheader[data-jrxtid='\" + crosstabId + \"']\").first();\n        if (!firstHeader.length) {\n            return;\n        }\n\n        if (!this.floatingCrossHeader) {\n            this.floatingCrossHeader = this._getFloatingTable(firstHeader, crosstabId, \"jr_floating_cross_header\", \"jrxtcrossheader\");\n        }\n\n        var floatingCrossTbl = this.floatingCrossHeader,\n            floatingColumnTbl = this.floatingColumnHeader || this._getFloatingTable(firstHeader, crosstabId, \"jr_floating_column_header\"),\n            floatingRowTbl = this.floatingRowHeader || this._getFloatingTable(firstHeader, crosstabId, \"jr_floating_row_header\"),\n            scaleFactor = this.model.get(\"scaleFactor\");\n\n        if ((scrollData.bColMoved || scrollData.bRowMoved) &&\n            0.8 * scrollContainer.outerWidth() > floatingRowTbl.outerWidth() * scaleFactor) {\n\n            floatingCrossTbl.show();\n\n            if (scaleFactor) {\n                this._applyScaleTransform(floatingCrossTbl, scaleFactor);\n            }\n\n            floatingCrossTbl.offset({\n                top: scrollData.bColMoved ? floatingColumnTbl.offset().top : firstHeader.offset().top,\n                left: scrollData.bRowMoved ? floatingRowTbl.offset().left : firstHeader.offset().left\n            });\n\n            scrollData.bCrossMoved = true;\n\n        } else if (scrollData.bCrossMoved) {\n            floatingCrossTbl.hide();\n            scrollData.bCrossMoved = false;\n        }\n    },\n\n    _getFloatingTable: function(firstHeader, crosstabId, tableClass, elementClass, altElementClass) {\n        var tbl = this.$scrollContainer.find(\"table.\" + tableClass + \"[data-jrxtid='\" + crosstabId + \"']\");\n\n        if (firstHeader && tbl.length === 0) {\n            tbl = $(\"<table class='\" + tableClass + \"' data-jrxtid='\" + crosstabId + \"' style='display:none'></table>\").appendTo(this.$scrollContainer);\n\n            if (elementClass == \"jrxtrowfloating\") {\n                tbl.on(\"click\", \".jrxtrowfloating\", function(evt){\n                    // keep links functional\n                    if(!$(evt.target).parent().is(\"._jrHyperLink\")) {\n                        var jo = $(this),\n                            crosstabId = jo.attr(\"data-jrxtid\"),\n                            colIdx = jo.attr(\"data-jrxtcolidx\"),\n                            altJo = tbl.parent()\n                                .find(\"table.jrPage .jrxtrowfloating[data-jrxtid='\" + crosstabId + \"']\")\n                                .filter(\"[data-jrxtcolidx='\" + colIdx + \"']\").eq(0);\n\n                        altJo.length && altJo.trigger(\"click\");\n                        return false;\n                    }\n                });\n            } else if (elementClass == \"jrxtcrossheader\") {\n                tbl.on(\"click\", \".jrxtcrossheader\", function(evt){\n                    // keep links functional\n                    if(!$(evt.target).parent().is(\"._jrHyperLink\")) {\n                        var jo = $(this),\n                            crosstabId = jo.attr(\"data-jrxtid\"),\n                            colIdx = jo.attr(\"data-jrxtcolidx\"),\n                            altJo;\n\n                        altJo = tbl.parent()\n                            .find(\"table.jrPage .jrxtrowfloating[data-jrxtid='\" + crosstabId + \"']\")\n                            .filter(\"[data-jrxtcolidx='\" + colIdx + \"']\").eq(0);\n\n                        altJo.length && altJo.trigger(\"click\");\n                        return false;\n                    }\n                });\n            }\n\n            var parentTable = firstHeader.closest(\"table\"),\n                lastHeader = parentTable.find(\".\" + elementClass + \"[data-jrxtid='\" + crosstabId + \"']\").last(),\n                rows = [], clone, cloneWidth = [],\n                row, $row, lastRow, cloneTD, rowTD, rowTDs, i, j, k,\n                tblJrPage, parentTableRows,\n                startIndex = 0, colSpanLength = 0, finishedCalculatedStartIndex = false;\n\n            if (firstHeader.length > 0) {\n                row = firstHeader.closest(\"tr\");\n                lastRow = lastHeader.closest(\"tr\");\n                tblJrPage = firstHeader.closest(\"table\");\n                parentTableRows = parentTable.find(\"tr\");\n\n                if (row.get(0) === lastRow.get(0)) {    // need to compare the actual dom nodes\n                    rows.push(row);\n                } else {\n                    i = parentTableRows.index(row);\n                    j = parentTableRows.index(lastRow);\n\n                    for (k = i; k <= j; k++) {\n                        rows.push(parentTableRows.get(k));\n                    }\n                }\n\n                /*\n                 * Need to compensate the cross section with rows due to rowspan variations\n                 */\n                if (elementClass === \"jrxtcrossheader\") {\n                    lastRow = $(rows[rows.length - 1]);\n\n                    var lastRowIndex = parentTableRows.index(lastRow),\n                        allRowSpans = $.map(lastRow.find(\".jrxtcrossheader\"), function(td) {\n                            return $(td).prop(\"rowspan\");\n                        }),\n                        maxSpan = Math.max.apply(Math, allRowSpans);\n\n                    k = 1;\n                    if (maxSpan > 1) {\n                        for (k; k < maxSpan; k++) {\n                            rows.push(parentTableRows.get(lastRowIndex + k));\n                        }\n                    }\n                }\n\n                $.each(rows, function(idx, row) {\n                    $row = $(row);\n                    rowTDs = $row.find(\"td,th\");\n                    clone = $(\"<tr></tr>\");\n                    cloneWidth[idx] = 0;\n                    clone.attr(\"style\", $row.attr(\"style\"));\n                    clone.css(\"height\", $row.css(\"height\"));\n                    clone.attr(\"valign\", $row.attr(\"valign\"));\n\n                    // add only the tds with elementClass class\n                    for (i = 0; i < rowTDs.length; i++) {\n                        rowTD = $(rowTDs.get(i));\n                        !finishedCalculatedStartIndex && (startIndex += rowTD.prop(\"colspan\"));\n                        if (rowTD.data(\"jrxtid\") === crosstabId && (rowTD.is(\".\" + elementClass) || (altElementClass && rowTD.is(\".\" + altElementClass)))) {\n                            if (elementClass !== \"jrxtrowfloating\") {\n                                if (idx === 0 && !finishedCalculatedStartIndex) {\n                                    startIndex -= rowTD.prop(\"colspan\");\n                                    finishedCalculatedStartIndex = true;\n                                }\n                                colSpanLength += rowTD.prop(\"colspan\");\n                            }\n\n                            // put empty TDs/THs for the rowheader to prevent rowspans from interfering\n                            if (elementClass == \"jrxtrowfloating\" && rowTD.is(\".jrxtinteractive\")) {\n                                if (rowTD.is(\"th\")) {\n                                    cloneTD = $(\"<th class='jrxtrowfloating jrxtinteractive'></th>\");\n                                } else {\n                                    cloneTD = $(\"<td class='jrxtrowfloating jrxtinteractive'></td>\");\n                                }\n                                cloneTD.attr(\"data-jrxtid\", rowTD.attr(\"data-jrxtid\"));\n                                cloneTD.attr(\"data-jrxtcolidx\", rowTD.attr(\"data-jrxtcolidx\"));\n                            } else {\n                                cloneTD = rowTD.clone();\n\n                                // Fix for bug #41786 - set width/height with css method to take box-sizing into account\n                                cloneTD.css(\"width\", rowTD.css(\"width\"));\n                                cloneTD.css(\"height\", rowTD.css(\"height\"));\n\n                                cloneWidth[idx] = cloneWidth[idx] + rowTD.outerWidth();\n                            }\n                            clone.append(cloneTD);\n                        }\n                    }\n\n                    /* First row of table.jrPage contains all the columns(with colspan = 1) with their respective\n                     * size, so we must copy all the columns from it, across which the floating column header\n                     * expands so that future columns with colspan will expand properly\n                     */\n                    if (idx === 0 && startIndex !== undefined && elementClass !== \"jrxtrowfloating\") {\n                        var firstRow = tblJrPage.find(\"tr\").first(),\n                            firstRowTDs = firstRow.find(\"td\"),\n                            firstRowClone = $(\"<tr></tr>\"),\n                            j = startIndex;\n\n                        for (j; j < startIndex + colSpanLength; j ++) {\n                            firstRowClone.append($(firstRowTDs.get(j)).clone());\n                        }\n\n                        tbl.append(firstRowClone);\n                    }\n\n                    tbl.append(clone);\n                });\n\n                tbl.css({\n                    position: \"absolute\",\n                    width: Math.max.apply(Math, cloneWidth),\n                    \"empty-cells\": tblJrPage.css(\"empty-cells\"),\n                    \"border-collapse\": tblJrPage.css(\"border-collapse\"),\n                    \"background-color\": tblJrPage.css(\"background-color\")\n                });\n                tbl.attr(\"cellpadding\", tblJrPage.attr(\"cellpadding\"));\n                tbl.attr(\"cellspacing\", tblJrPage.attr(\"cellspacing\"));\n                tbl.attr(\"border\", tblJrPage.attr(\"border\"));\n            }\n        }\n\n        return tbl;\n    },\n\n    _getColumnHeaderFloatingTable: function(firstHeader, crosstabId) {\n        var tableClass = \"jr_floating_column_header\",\n            elementClass = \"jrxtcolfloating\",\n            tbl = this.$scrollContainer.find(\"table.\" + tableClass + \"[data-jrxtid='\" + crosstabId + \"']\");\n\n        if (firstHeader && tbl.length === 0) {\n            tbl = $(\"<table class='\" + tableClass + \"' data-jrxtid='\" + crosstabId + \"' style='display:none'></table>\").appendTo(this.$scrollContainer);\n\n            tbl.on(\"click\", \".jrxtcolfloating\", function(evt){\n                // keep links functional\n                if(!$(evt.target).parent().is(\"._jrHyperLink\")) {\n                    var jo = $(this),\n                        crosstabId = jo.attr(\"data-jrxtid\"),\n                        colIdx = jo.attr(\"data-jrxtcolidx\"),\n                        crosstabFloatingHeader = tbl.parent()\n                            .find(\"table.jrPage .jrxtcolheader[data-jrxtid='\" + crosstabId + \"']\")\n                            .filter(\"[data-jrxtcolidx='\" + colIdx + \"']\").eq(0);\n\n                    crosstabFloatingHeader.length && crosstabFloatingHeader.trigger(\"click\");\n                    return false;\n                }\n            });\n\n            var parentTable = firstHeader.closest(\"table\"),\n                lastHeader = parentTable.find(\".\" + elementClass + \"[data-jrxtid='\" + crosstabId + \"']\").last(),\n                lastInteractiveRowHeader = parentTable.find(\".jrxtrowheader.jrxtinteractive[data-jrxtid='\" + crosstabId + \"']\").last(),\n                rows = [], clone, cloneWidth = [],\n                row, $row, lastRow, lastInteractiveRowHeaderRow, cloneTD, rowTD, rowTDs, i, j, k,\n                tblJrPage, parentTableRows,\n                startIndex = 0, colSpanLength = 0, finishedCalculatedStartIndex = false;\n\n            if (firstHeader.length > 0) {\n                row = firstHeader.closest(\"tr\");\n                lastRow = lastHeader.closest(\"tr\");\n                lastInteractiveRowHeaderRow = lastInteractiveRowHeader.closest(\"tr\");\n                tblJrPage = parentTable;\n                parentTableRows = parentTable.find(\"tr\");\n\n                if (lastInteractiveRowHeaderRow.length && parentTableRows.index(lastInteractiveRowHeaderRow) > parentTableRows.index(lastRow)) {\n                    lastRow = lastInteractiveRowHeaderRow;\n                }\n\n                if (row.get(0) === lastRow.get(0)) {    // need to compare the actual dom nodes\n                    rows.push(row);\n                } else {\n                    i = parentTableRows.index(row);\n                    j = parentTableRows.index(lastRow);\n\n                    for (k = i; k <= j; k++) {\n                        rows.push(parentTableRows.get(k));\n                    }\n                }\n\n                $.each(rows, function(idx, row) {\n                    $row = $(row);\n                    rowTDs = $row.find(\"td,th\");\n                    clone = $(\"<tr></tr>\");\n                    cloneWidth[idx] = 0;\n\n                    clone.attr(\"style\", $row.attr(\"style\"));\n                    clone.css(\"height\", $row.css(\"height\"));\n                    clone.attr(\"valign\", $row.attr(\"valign\"));\n\n                    for (i = 0; i < rowTDs.length; i++) {\n                        rowTD = $(rowTDs.get(i));\n\n                        !finishedCalculatedStartIndex && (startIndex += rowTD.prop(\"colspan\"));\n\n                        if (rowTD.data(\"jrxtid\") === crosstabId) {\n                            if (idx === 0 && !finishedCalculatedStartIndex) {\n                                startIndex -= rowTD.prop(\"colspan\");\n                                finishedCalculatedStartIndex = true;\n                            }\n\n                            colSpanLength += rowTD.prop(\"colspan\");\n                            cloneTD = rowTD.clone();\n\n                            // Fix for bug #41786 - set width/height with css method to take box-sizing into account\n                            cloneTD.css(\"width\", rowTD.css(\"width\"));\n                            cloneTD.css(\"height\", rowTD.css(\"height\"));\n\n                            cloneWidth[idx] = cloneWidth[idx] + rowTD.outerWidth();\n\n                            clone.append(cloneTD);\n                        }\n                    }\n\n                    /* First row of table.jrPage contains all the columns(with colspan = 1) with their respective\n                     * size, so we must copy all the columns from it, across which the floating column header\n                     * expands so that future columns with colspan will expand properly\n                     */\n                    if (idx === 0 && startIndex !== undefined) {\n                        var firstRow = tblJrPage.find(\"tr\").first(),\n                            firstRowTDs = firstRow.find(\"td\"),\n                            firstRowClone = $(\"<tr></tr>\"),\n                            j = startIndex;\n\n                        for (j; j < startIndex + colSpanLength; j ++) {\n                            firstRowClone.append($(firstRowTDs.get(j)).clone());\n                        }\n\n                        tbl.append(firstRowClone);\n                    }\n\n                    tbl.append(clone);\n                });\n\n                tbl.css({\n                    position: \"absolute\",\n                    width: Math.max.apply(Math, cloneWidth),\n                    \"empty-cells\": tblJrPage.css(\"empty-cells\"),\n                    \"border-collapse\": tblJrPage.css(\"border-collapse\"),\n                    \"background-color\": tblJrPage.css(\"background-color\")\n                });\n                tbl.attr(\"cellpadding\", tblJrPage.attr(\"cellpadding\"));\n                tbl.attr(\"cellspacing\", tblJrPage.attr(\"cellspacing\"));\n                tbl.attr(\"border\", tblJrPage.attr(\"border\"));\n            }\n        }\n\n        return tbl;\n    },\n\n    _markCrossHeaderElements: function(crosstabId) {\n        var scrollContainer = this.$scrollContainer;\n        // Prepare the crosssection in case it doesn't exist\n        if (!scrollContainer.find(\".jrxtcrossheader[data-jrxtid='\" + crosstabId + \"']\").length) {\n            var firstColHeader = scrollContainer.find(\".jrxtcolfloating[data-jrxtid='\" + crosstabId + \"']\").first(),\n                firstRow, lastRow, parentTable, parentTableRows, i,\n                firstRowIndex, lastRowIndex, rows = [],\n                maxSpan = 1, row, currentRowMaxSpan, currentRowSpans,\n                colSpanLength, colSpanStop, bFoundColHeader;\n\n            if (firstColHeader.length) {\n                parentTable = firstColHeader.closest(\"table\");\n                firstRow = firstColHeader.closest(\"tr\");\n                parentTableRows = parentTable.find(\"tr\");\n\n                lastRow = parentTable.find(\".jrxtrowheader.jrxtinteractive[data-jrxtid='\" + crosstabId + \"']\").last().closest(\"tr\");\n\n                if (!lastRow.length) {\n                    lastRow = parentTable.find(\".jrxtcolfloating[data-jrxtid='\" + crosstabId + \"']\").last().closest(\"tr\");\n                }\n\n                firstRowIndex = parentTableRows.index(firstRow);\n                lastRowIndex = parentTableRows.index(lastRow);\n\n                for (i = firstRowIndex; i <= lastRowIndex; i++) {\n                    rows.push(parentTableRows.get(i));\n\n                    row = $(parentTableRows.get(i));\n                    currentRowSpans = $.map(row.find(\"td,th\"), function(td) {\n                        return $(td).prop(\"rowspan\");\n                    });\n                    currentRowMaxSpan = Math.max.apply(Math, currentRowSpans);\n\n                    if (currentRowMaxSpan > maxSpan) {\n                        maxSpan = currentRowMaxSpan;\n                    }\n\n                    maxSpan--;\n                }\n\n                i = 1;\n                if (maxSpan > 1) {\n                    for (i; i < maxSpan; i++) {\n                        rows.push(parentTableRows.get(lastRowIndex + i));\n                    }\n                }\n\n                $.each(rows, function(idx, row) {\n                    colSpanLength = 0;\n\n                    $(row).find(\"td,th\").each(function(tdIdx, td) {\n                        var $td = $(td);\n\n                        colSpanLength += $td.prop(\"colspan\");\n\n                        if ($td.data(\"jrxtid\") === crosstabId) {\n                            if (idx === 0 && !bFoundColHeader && $td.is(\".jrxtcolfloating\")) {\n                                bFoundColHeader = true;\n                                colSpanStop = colSpanLength - $td.prop(\"colspan\");\n                            }\n\n                            if (!bFoundColHeader || (colSpanLength <= colSpanStop && !$td.is(\".jrxtcolfloating\"))) {\n                                $td.addClass(\"jrxtcrossheader\");\n                            }\n                        }\n                    });\n                });\n            }\n        }\n    },\n\n    _onColumnHeaderScroll: function() {\n        if (this.headerToolbar.$el.is(\":visible\")) {\n            var floatingTable, floatingHeader, my;\n\n            // data column is selected\n            if (this.selected.isColumn) {\n                floatingTable = this.floatingColumnHeader;\n                floatingHeader = floatingTable.find(\".jrxtcolheader[data-jrxtcolidx='\" + this.selected.header.data(\"jrxtcolidx\") + \"']\").first();\n            }\n            // row group column is selected\n            else {\n                floatingTable = this.floatingCrossHeader;\n\n                // the row header is floating and no cross-header table present\n                if (this.scrollData.bRowMoved && !floatingTable.length) {\n                    floatingTable = this.floatingRowHeader;\n                }\n\n                floatingHeader = floatingTable.find(\".jrxtrowheader[data-jrxtcolidx='\" + this.selected.header.data(\"jrxtcolidx\") + \"']\").first();\n            }\n\n            if (floatingHeader && floatingHeader.length) {\n                if (floatingHeader.offset().top > floatingTable.offset().top) {\n                    var diff = floatingHeader.offset().top - floatingTable.offset().top - this.headerToolbar.$el.outerHeight();\n                    my = \"left bottom\";\n                    diff < 0 && (my += \"+\" + Math.abs(diff));\n                } else {\n                    my = \"left top\";\n                }\n\n                this.headerToolbar.setPosition({\n                    my: my,\n                    at: \"left top\",\n                    of: floatingHeader,\n                    collision: \"none\"\n                });\n            }\n            /* this happens when the row group is selected & the row header is not floating\n             * & there is no floating cross-section(usually for non-adhoc generated cross-tabs)\n            */\n            else {\n                var containerTop = this.$scrollContainer.offset().top,\n                    diff = this.selected.header.offset().top - this.headerToolbar.$el.outerHeight() - containerTop,\n                    newTop;\n\n                if (diff <= 0) {\n                    newTop = containerTop;\n                } else {\n                    newTop = this.selected.header.offset().top - this.headerToolbar.$el.outerHeight() + 1;\n                }\n\n                this.headerToolbar.$el.offset({ top: newTop, left: this.headerToolbar.$el.offset().left });\n            }\n\n        }\n    },\n\n    _onColumnHeaderScrollStop: function() {\n        if (this.headerToolbar.$el.is(\":visible\")) {\n            this._setToolbarAndOverlayPosition();\n        }\n    },\n\n    _onRowHeaderScroll: function() {\n        if (!this.isSelectionActive) {\n            return;\n        }\n\n        var floatingRowTable = this.floatingRowHeader,\n            scaleFactor = this.model.get(\"scaleFactor\"),\n            floatingRowTableRight = floatingRowTable.offset().left + floatingRowTable.width() * scaleFactor;\n\n        // toolbar is visible and selected header goes under the floating row header\n        if (this.headerToolbar.$el.is(\":visible\") && this.selected.header.offset().left < floatingRowTableRight) {\n            this.hide();\n        }\n        // toolbar is not visible(because of actions above) and selected header is no longer under the floating row header\n        else if (!this.headerToolbar.$el.is(\":visible\") && this.selected.header.offset().left >= floatingRowTableRight) {\n            this.show();\n        }\n    },\n\n    _onRowHeaderScrollStop: function() {\n        if (!this.isSelectionActive) {\n            return;\n        }\n\n        if (!this.headerToolbar.$el.is(\":visible\")) {\n            this.show();\n            this._setToolbarAndOverlayPosition();\n        }\n    },\n\n    _setToolbarAndOverlayPosition: function() {\n        var scrollData = this.scrollData || {},\n            tableHeader, floatingTable, my, diff, overlayOffset,\n            crosstabId = this.model.getFragmentId(),\n            bHeaderToolbarPositioned = false;\n\n        if ((!scrollData.bColMoved && !scrollData.bRowMoved) || (scrollData.bRowMoved && !scrollData.bColMoved)) {\n            tableHeader = this.selected.header;\n        }\n\n        this.overlay.setPosition({\n            my: 'left top',\n            at: 'left top',\n            of: this.selected.header,\n            collision: 'none'\n        });\n\n        if (scrollData.bColMoved) {\n            // data column is selected\n            if (this.selected.isColumn) {\n                floatingTable = this.floatingColumnHeader || this._getFloatingTable(null, crosstabId, \"jr_floating_column_header\");\n                tableHeader = floatingTable.find(\".jrxtcolheader[data-jrxtcolidx='\" + this.selected.header.data(\"jrxtcolidx\") + \"']\").first();\n            }\n            // row group column is selected\n            else {\n                floatingTable = this.floatingCrossHeader || this._getFloatingTable(null, crosstabId, \"jr_floating_cross_header\");\n\n                // the row header is floating and (no cross-header table present or present but with no row headers)\n                if (this.scrollData.bRowMoved && (!floatingTable.length || !floatingTable.find(\".jrxtrowheader\").length)) {\n                    floatingTable = this.floatingRowHeader || this._getFloatingTable(null, crosstabId, \"jr_floating_row_header\");\n                }\n\n                tableHeader = floatingTable.find(\".jrxtrowheader[data-jrxtcolidx='\" + this.selected.header.data(\"jrxtcolidx\") + \"']\").first();\n            }\n\n            if (tableHeader && tableHeader.length) {\n                if (tableHeader.offset().top > floatingTable.offset().top) {\n                    diff = tableHeader.offset().top - floatingTable.offset().top - this.headerToolbar.$el.outerHeight();\n                    my = \"left bottom\";\n                    diff < 0 && (my += \"+\" + Math.abs(diff));\n                } else {\n                    my = \"left top\";\n                }\n\n                /* the floatingRowHeader floats only horizontally, so the header toolbar position must be calculated\n                 * relatively to the container's top offset\n                 */\n                if (floatingTable.is(\".jr_floating_row_header\")) {\n                    if (tableHeader.offset().top < this.$scrollContainer.offset().top) {\n                        my = \"left top+\" + (this.$scrollContainer.offset().top - tableHeader.offset().top);\n                    } else {\n                        my = \"left bottom\";\n                        diff =  tableHeader.offset().top - this.$scrollContainer.offset().top - this.headerToolbar.$el.outerHeight();\n                        diff < 0 && (my += \"+\" + Math.abs(diff));\n                    }\n                }\n\n                this.headerToolbar.setPosition({\n                    my: my,\n                    at: \"left top\",\n                    of: tableHeader,\n                    collision: \"none\"\n                });\n\n                bHeaderToolbarPositioned = true;\n            }\n            /* this happens when the row group is selected & the row header is not floating\n             * & there is no floating cross-section(usually for non-adhoc generated cross-tabs)\n             */\n            else {\n                var containerTop = this.$scrollContainer.offset().top,\n                    diff = this.selected.header.offset().top - this.headerToolbar.$el.outerHeight() - containerTop,\n                    newTop;\n\n                if (diff <= 0) {\n                    newTop = containerTop;\n                } else {\n                    newTop = this.selected.header.offset().top - this.headerToolbar.$el.outerHeight() + 1;\n                }\n\n                this.headerToolbar.$el.offset({ top: newTop, left: this.selected.header.offset().left });\n\n                bHeaderToolbarPositioned = true;\n            }\n        }\n\n        if (scrollData.bRowMoved) {\n            if (!this.selected.isColumn) {\n                floatingTable = this.floatingCrossHeader || this._getFloatingTable(null, crosstabId, \"jr_floating_cross_header\");\n\n                if (!floatingTable.length || !floatingTable.find(\".jrxtrowheader\").length) {\n                    floatingTable = this.floatingRowHeader || this._getFloatingTable(null, crosstabId, \"jr_floating_row_header\");\n                }\n\n                tableHeader = floatingTable.find(\".jrxtrowheader[data-jrxtcolidx='\" + this.selected.header.data(\"jrxtcolidx\") + \"']\").first();\n\n                overlayOffset = this.overlay.$el.offset();\n                this.overlay.$el.offset({\n                    left: tableHeader.offset().left,\n                    top: overlayOffset.top\n                });\n            }\n        }\n\n        !bHeaderToolbarPositioned && this.headerToolbar.setPosition({\n            my: my ? my: \"left bottom+1\",\n            at: \"left top\",\n            of: tableHeader,\n            collision: \"none\"\n        });\n    }\n});\n\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\n\ninterface PosFunctionOptions {\n    attachToOffset: {\n        top: number,\n        left: number\n    },\n    attachToSize: {\n        width: number,\n        height: number\n    },\n    elementSize: {\n        width: number,\n        height: number\n    },\n    padding: {\n        top: number,\n        left: number\n    }\n}\n\nconst getInitialPos = (options: PosFunctionOptions) => {\n    return {\n        top: options.attachToOffset.top + options.attachToSize.height + options.padding.top,\n        left: options.attachToOffset.left\n    }\n};\n\nconst placeElementAboveAttachTo = (options: PosFunctionOptions) => {\n    return options.attachToOffset.top - options.elementSize.height - options.padding.top;\n};\n\nconst placeElementOnTheRightSideOfAttachTo = (options: PosFunctionOptions) => {\n    return options.attachToOffset.left + options.attachToSize.width;\n};\n\nconst placeElementOnTheLeftSideOfAttachTo = (options: PosFunctionOptions) => {\n    return options.attachToOffset.left - options.elementSize.width;\n};\n\nconst alignElementVertically = (options: PosFunctionOptions) => {\n    return options.attachToOffset.top - options.elementSize.height / 2 - options.padding.top;\n};\n\nconst alignElementHorizontally = (options: PosFunctionOptions) => {\n    return options.attachToOffset.left + options.attachToSize.width / 2 - options.elementSize.width / 2;\n};\n\nconst alignElementByRightEdgeOfAttachTo = (options: PosFunctionOptions) => {\n    return options.attachToOffset.left + options.attachToSize.width - options.elementSize.width;\n};\n\nexport default {\n    getPosition(\n        attachTo: HTMLElement,\n        padding: {top: number, left: number} = { top: 0, left: 0 },\n        element: HTMLElement,\n        jQuery?: (e: HTMLElement|string) => any\n    ): {top: number, left: number} {\n        const query = jQuery || $;\n\n        const body = query('body');\n        const $attachTo = query(attachTo);\n        const $el = query(element);\n\n        const attachToOffset = $attachTo.offset() || { top: 0, left: 0 };\n        const attachToHeight = $attachTo[0].tagName && $attachTo[0].tagName.toLowerCase() === 'input'\n            ? $attachTo.outerHeight() || 0 : $attachTo.height() || 0;\n        const attachToWidth = $attachTo.width() || 0;\n\n        const bodyHeight = body.height() || 0;\n        const bodyWidth = body.width() || 0;\n        const elementWidth = $el.innerWidth() || 0;\n        const elementHeight = $el.innerHeight() || 0;\n\n        const options = {\n            attachToOffset,\n            attachToSize: {\n                width: attachToWidth,\n                height: attachToHeight\n            },\n            elementSize: {\n                width: elementWidth,\n                height: elementHeight\n            },\n            padding\n        };\n\n        const initialPos = getInitialPos(options);\n\n        let { top, left } = initialPos;\n\n        let verticallyAligned = false;\n\n        const elementIntersectsViewPortBottomBoundary = top + elementHeight > bodyHeight;\n\n        if (elementIntersectsViewPortBottomBoundary) {\n            top = placeElementAboveAttachTo(options);\n        }\n\n        const elementIntersectsViewportTopBoundary = top < 0;\n\n        if (elementIntersectsViewportTopBoundary) {\n            top = alignElementVertically(options);\n            left = placeElementOnTheRightSideOfAttachTo(options);\n\n            verticallyAligned = true;\n        }\n\n        const elementIntersectsViewportRightBoundary = left + elementWidth > bodyWidth;\n\n        if (elementIntersectsViewportRightBoundary) {\n            left = verticallyAligned\n                ? placeElementOnTheLeftSideOfAttachTo(options)\n                : alignElementByRightEdgeOfAttachTo(options);\n        }\n\n        const elementIntersectsViewportLeftBoundary = left < 0;\n\n        if (elementIntersectsViewportLeftBoundary) {\n            left = alignElementHorizontally(options);\n        }\n\n        // when viewport is still to small to fit the element\n        if (top < 0) {\n            top = 0;\n        }\n\n        if (left < 0) {\n            left = 0;\n        }\n\n        return {\n            top,\n            left,\n        };\n    },\n};\n"],"sourceRoot":""}