{"version":3,"sources":["webpack://jrs-ui/../bi-report/src/bi/report/jive/model/ReportConfigModel.js"],"names":["Backbone","defaults","id","undefined","reportConfig","type","jiveTypes","parse","rest","processedConfig","Map","length","forEach","element","suffix","value"],"mappings":"shBASA,QAAeA,iBAAsB,CACjCC,SAAU,WACN,MAAO,CACHC,QAAIC,EACJC,kBAAcD,EACdE,KAAMC,oBAGdC,MAAO,YAAoC,IAAzBH,EAAyB,EAAzBA,aAAiBI,EAAQ,sBACnCC,EAAkB,IAAIC,IAQ1B,OANIN,EAAaO,OAAS,GACtBP,EAAaQ,SAAQ,SAAAC,GACjBJ,EAAgBI,EAAQC,QAAUD,EAAQE,SAIlD,eAASX,aAAcK,GAAoBD","file":"_chunks/chunk.2344.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\nimport Backbone from 'backbone';\nimport jiveTypes from '../enum/jiveTypes';\n\n\nexport default Backbone.Model.extend({\n    defaults: function () {\n        return {\n            id: undefined,\n            reportConfig: undefined,\n            type: jiveTypes.REPORT_CONFIG\n        };\n    },\n    parse: function({ reportConfig, ...rest }) {\n        let processedConfig = new Map();\n\n        if (reportConfig.length > 0) {\n            reportConfig.forEach(element => {\n                processedConfig[element.suffix] = element.value;\n            });\n        }\n\n        return { reportConfig: processedConfig, ...rest };\n    }\n});"],"sourceRoot":""}