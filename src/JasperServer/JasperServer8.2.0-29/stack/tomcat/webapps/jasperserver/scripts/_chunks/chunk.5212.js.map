{"version":3,"sources":["webpack://jrs-ui/../bi-report/src/bi/report/jive/model/ConditionModel.js","webpack://jrs-ui/../bi-report/src/bi/report/jive/collection/ConditionCollection.js","webpack://jrs-ui/../bi-report/src/bi/report/jive/model/BaseComponentModel.js","webpack://jrs-ui/../bi-report/src/bi/report/jive/model/FormatModel.js","webpack://jrs-ui/../bi-report/src/bi/report/jive/util/jiveDataConverter.js","webpack://jrs-ui/../bi-report/src/bi/report/jive/util/validationCodes.js","webpack://jrs-ui/../js-sdk/src/common/util/datetime/RelativeTime.js","webpack://jrs-ui/../js-sdk/src/common/util/datetime/Time.js","webpack://jrs-ui/../js-sdk/src/common/util/parse/time.js"],"names":["Backbone","defaults","parse","jiveObj","valueAndOperator","jiveDataConverter","this","collection","parent","conditionTypeOperator","dataType","conditionStart","conditionEnd","conditionPattern","operator","value","backgroundColor","conditionMode","conditionFontBackColor","font","conditionFontItalic","conditionFontBold","conditionFontUnderline","conditionFontColor","toJiveFormat","genericProperties","get","isTransparent","bold","italic","underline","color","model","ConditionModel","initialize","models","options","constructor","attributes","_notify","evt","handleServerError","result","uiModuleType","handleClientError","POSITIVE_NUMBER_FORMAT","DURATION_PATTERN","currencyMap","undefined","attrs","res","align","fontHAlign","toLowerCase","mode","fontBackColor","fontName","parseFloat","fontSize","fontItalic","fontBold","fontUnderline","fontColor","formatPattern","pattern","precisionRegexp","RegExp","grouping","percentage","precision","negativeFormat","currency","indexOf","replace","precisionTestResult","exec","length","Array","join","parts","split","has","patternObj","positivePart","negativePart","index","slice","precisionIndex","mapping","jQueryUiTimestampToIsoTimestamp","val","calendarPatterns","datePattern","date","timePattern","time","dateUtil","$","ex","BiComponentError","validationCodes","jQueryUiTimeToIsoTime","parsedTimeObj","timeUtil","hour","minute","second","isoTimestampTojQueryUiTimestamp","separator","getHours","getMinutes","getSeconds","isoTimeTojQueryUiTime","hours","minutes","seconds","filterStartValue","clearFilter","isNullCheckOperator","isBooleanColumn","isDatetimeColumn","isTimeColumn","_","filterEndValue","dataTypeToSchemaFormat","schemaFormatOperatorToFilterOperatorMap","filterOperatorToSchemaFormatMap","schemaFormatOperatorToFilterOperator","operatorAndValueToSchemaFormat","valueStart","valueEnd","response","isRange","isNullCheck","config","INVALID_TIMESTAMP","INVALID_TIME","RelativeTime","RelativeDate","arguments","F","prototype","PATTERNS","MINUTE","HOUR","relativeTimeString","isValid","relativeTime","toString","test","Time","milliseconds","total","format","compare","time1","time2","total1","total2","timeFormat","timeRegexpPattern","getTimeRegexpPattern","timeObj","components","timeFormatComponents","matches","match","componentOrders","h","m","s","l","i","charAt","getTimeFormatComponents","parseInt","ISO_8061_TIME_PATTERN","localeSettingsObject","jrsConfigs","isTime","Boolean","isRelativeTime","isIso8601Time","compareTimes","value1","value2","timeToIso8061Time","obj","iso8601TimeToTimeObject"],"mappings":"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","file":"_chunks/chunk.5212.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\nimport Backbone from 'backbone';\nimport jiveDataConverter from '../util/jiveDataConverter';\n\nexport default Backbone.Model.extend({\n    defaults: function () {\n        return {\n            'operator': null,\n            'value': null,\n            'backgroundColor': null,\n            'font': {\n                'bold': null,\n                'italic': null,\n                'underline': null,\n                'color': null\n            }\n        };\n    },\n    parse: function (jiveObj) {\n        var valueAndOperator = jiveDataConverter.operatorAndValueToSchemaFormat.call(this.collection.parent, jiveObj.conditionTypeOperator, this.collection.dataType, jiveObj.conditionStart, jiveObj.conditionEnd, this.collection.conditionPattern);\n        return {\n            operator: valueAndOperator.operator,\n            value: valueAndOperator.value,\n            backgroundColor: jiveObj.conditionMode === 'Transparent' ? 'transparent' : jiveObj.conditionFontBackColor,\n            font: {\n                'italic': jiveObj.conditionFontItalic,\n                'bold': jiveObj.conditionFontBold,\n                'underline': jiveObj.conditionFontUnderline,\n                'color': jiveObj.conditionFontColor\n            }\n        };\n    },\n    toJiveFormat: function (genericProperties) {\n        var conditionPattern = this.collection.conditionPattern;\n        var dataType = this.collection.dataType;\n        var operator = this.get('operator');\n        var value = this.get('value');\n        var conditionStart = jiveDataConverter.filterStartValue(operator, value, dataType, genericProperties, conditionPattern);\n        var conditionEnd = jiveDataConverter.filterEndValue(operator, value, dataType, genericProperties, conditionPattern);\n        var conditionTypeOperator = jiveDataConverter.schemaFormatOperatorToFilterOperator(operator, value, dataType);\n        var backgroundColor = this.get('backgroundColor');\n        var isTransparent = backgroundColor === 'transparent';\n        var conditionMode = isTransparent ? 'Transparent' : backgroundColor === null ? null : 'Opaque';\n        var conditionFontBackColor = isTransparent ? null : backgroundColor;\n        var font = this.get('font');\n        return {\n            'conditionStart': conditionStart,\n            'conditionEnd': conditionEnd,\n            'conditionTypeOperator': conditionTypeOperator,\n            'conditionFontBold': font.bold,\n            'conditionFontItalic': font.italic,\n            'conditionFontUnderline': font.underline,\n            'conditionFontColor': font.color,\n            'conditionFontBackColor': conditionFontBackColor,\n            'conditionMode': conditionMode\n        };\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\nimport Backbone from 'backbone';\nimport ConditionModel from '../model/ConditionModel';\nexport default Backbone.Collection.extend({\n    model: ConditionModel,\n    initialize: function (models, options) {\n        options || (options = {});\n        this.dataType = options.dataType;\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\nimport Backbone from 'backbone';\nexport default Backbone.Model.extend({\n    constructor: function (attributes, options) {\n        options || (options = {});\n        this.parent = options.parent;\n        Backbone.Model.prototype.constructor.call(this, attributes, options);\n    },\n    // internal functions\n    _notify: function (evt) {\n        // bubble the event\n        this.parent._notify(evt);\n    },\n    handleServerError: function (result) {\n        var uiModuleType = this.get('uiModuleType');\n        uiModuleType && uiModuleType.handleServerError(result);\n    },\n    handleClientError: function (result) {\n        var uiModuleType = this.get('uiModuleType');\n        uiModuleType && uiModuleType.handleClientError(result);\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\nimport Backbone from 'backbone';\nvar POSITIVE_NUMBER_FORMAT = '###0';\nvar DURATION_PATTERN = '[h]:mm:ss';\nvar currencyMap = {\n    'LOCALE_SPECIFIC': '\\xA4',\n    'USD': '$',\n    'GBP': '\\xA3',\n    'EUR': '\\u20AC',\n    'YEN': '\\xA5'\n};\nexport default Backbone.Model.extend({\n    defaults: function () {\n        return {\n            'backgroundColor': undefined,\n            'align': undefined,\n            'font': {\n                'name': undefined,\n                'size': 11,\n                'bold': false,\n                'italic': false,\n                'underline': false,\n                'color': '000000'\n            }\n        };\n    },\n    initialize: function (attrs, options) {\n        options || (options = {});\n        this.dataType = options.dataType;\n    },\n    parse: function (jiveObj) {\n        var res = {\n            align: jiveObj.fontHAlign.toLowerCase(),\n            backgroundColor: jiveObj.mode === 'Opaque' ? jiveObj.fontBackColor : 'transparent',\n            font: {\n                'name': jiveObj.fontName,\n                'size': parseFloat(jiveObj.fontSize),\n                'italic': jiveObj.fontItalic,\n                'bold': jiveObj.fontBold,\n                'underline': jiveObj.fontUnderline,\n                'color': jiveObj.fontColor\n            }\n        };\n        if (jiveObj.formatPattern) {\n            if (this.dataType === 'numeric' && DURATION_PATTERN === jiveObj.formatPattern) {\n                res.pattern = jiveObj.formatPattern;\n            } else if (this.dataType === 'numeric') {\n                var pattern = jiveObj.formatPattern, precisionRegexp = new RegExp('0\\\\.(0+)'), grouping = false, percentage = false, precision = 0, negativeFormat = '-' + POSITIVE_NUMBER_FORMAT, currency = null;\n                if (pattern.indexOf(',') > -1) {\n                    grouping = true;\n                    pattern = pattern.replace(/,/g, '');\n                }\n                if (pattern.indexOf('%') > -1) {\n                    percentage = true;\n                    pattern = pattern.replace(/%/g, '');\n                }\n                if (pattern.indexOf('\\xA4') > -1) {\n                    currency = 'LOCALE_SPECIFIC';\n                    pattern = pattern.replace(/\\u00A4/g, '');\n                } else if (pattern.indexOf('$') > -1) {\n                    currency = 'USD';\n                    pattern = pattern.replace(/\\u0024/g, '');\n                } else if (pattern.indexOf('\\xA3') > -1) {\n                    currency = 'GBP';\n                    pattern = pattern.replace(/\\u00A3/g, '');\n                } else if (pattern.indexOf('\\u20AC') > -1) {\n                    currency = 'EUR';\n                    pattern = pattern.replace(/\\u20AC/g, '');\n                } else if (pattern.indexOf('\\xA5') > -1) {\n                    currency = 'YEN';\n                    pattern = pattern.replace(/\\u00A5/g, '');\n                }\n                pattern = pattern.replace(/\\s/g, '');\n                var precisionTestResult = precisionRegexp.exec(pattern);\n                if (precisionTestResult && precisionTestResult.length == 2) {\n                    precision = precisionTestResult[1].length;\n                    pattern = pattern.replace(new RegExp('\\\\.' + Array(precision + 1).join('0'), 'g'), '');\n                }\n                var parts = pattern.split(';');\n                if (parts && parts.length === 2) {\n                    negativeFormat = parts[1];\n                }\n                res.pattern = {\n                    negativeFormat: negativeFormat,\n                    currency: currency,\n                    precision: precision,\n                    grouping: grouping,\n                    percentage: percentage\n                };\n            } else {\n                res.pattern = jiveObj.formatPattern;\n            }\n        }\n        return res;\n    },\n    toJiveFormat: function () {\n        if (!this.has('pattern')) {\n            return '';\n        } else {\n            if (this.dataType !== 'numeric' || this.dataType === 'numeric' && DURATION_PATTERN === this.get('pattern')) {\n                return this.get('pattern');\n            } else {\n                var patternObj = this.get('pattern'), positivePart = POSITIVE_NUMBER_FORMAT, negativePart = patternObj.negativeFormat || '-' + POSITIVE_NUMBER_FORMAT;\n                if (patternObj.percentage) {\n                    positivePart += ' %';\n                    negativePart += ' %';\n                }\n                if (patternObj.currency && currencyMap[patternObj.currency]) {\n                    positivePart = currencyMap[patternObj.currency] + ' ' + positivePart;\n                    negativePart = currencyMap[patternObj.currency] + ' ' + negativePart;\n                }\n                if (patternObj.grouping) {\n                    var index = positivePart.indexOf('#');\n                    positivePart = positivePart.slice(0, index) + '#,' + positivePart.slice(index + 1);\n                    index = negativePart.indexOf('#');\n                    negativePart = negativePart.slice(0, index) + '#,' + negativePart.slice(index + 1);\n                }\n                if (patternObj.precision) {\n                    var precisionIndex = positivePart.indexOf('##0');\n                    positivePart = positivePart.slice(0, precisionIndex) + '##0' + ('.' + Array(patternObj.precision + 1).join('0')) + positivePart.slice(precisionIndex + 3);\n                    precisionIndex = negativePart.indexOf('##0');\n                    negativePart = negativePart.slice(0, precisionIndex) + '##0' + ('.' + Array(patternObj.precision + 1).join('0')) + negativePart.slice(precisionIndex + 3);\n                }\n                return positivePart + ';' + negativePart;\n            }\n        }\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\n\n/**\n * @author: Kostiantyn Tsaregradskyi\n * @version: $Id$\n */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport dateUtil from 'js-sdk/src/common/util/parse/date';\nimport timeUtil from 'js-sdk/src/common/util/parse/time';\nimport BiComponentError from 'js-sdk/src/common/bi/error/BiComponentError';\nimport validationCodes from \"./validationCodes\";\n\nimport 'js-sdk/src/common/extension/jQueryTimepickerExtension';\n\nvar jiveDataConverter = {\n\n    DURATION_PATTERN: \"[h]:mm:ss\",\n\n    jQueryUiTimestampToIsoTimestamp: function(val, genericProperties) {\n        if (val && genericProperties && genericProperties.calendarPatterns) {\n            var datePattern = genericProperties.calendarPatterns.date,\n                timePattern = genericProperties.calendarPatterns.time;\n\n            try {\n                return dateUtil.dateObjectToIso8601Timestamp($.datepicker.parseDateTime(datePattern, timePattern, val));\n            } catch(ex) {\n                throw new BiComponentError(validationCodes.INVALID_TIMESTAMP, ex, { value: val });\n            }\n        }\n\n        return undefined;\n    },\n\n    jQueryUiTimeToIsoTime: function(val, genericProperties) {\n        if (val && genericProperties && genericProperties.calendarPatterns) {\n            var timePattern = genericProperties.calendarPatterns.time;\n\n            try {\n                var parsedTimeObj = $.datepicker.parseTime(timePattern, val);\n\n                if (parsedTimeObj) {\n                    return timeUtil.timeToIso8061Time(parsedTimeObj.hour, parsedTimeObj.minute, parsedTimeObj.second);\n                }\n            } catch(ex) {\n                throw new BiComponentError(validationCodes.INVALID_TIME, ex, { value: val });\n            }\n        }\n\n        return undefined;\n    },\n\n    isoTimestampTojQueryUiTimestamp: function(val, genericProperties) {\n        if (val && genericProperties && genericProperties.calendarPatterns) {\n            var date = dateUtil.iso8601TimestampToDateObject(val),\n                datePattern = genericProperties.calendarPatterns.date,\n                timePattern = genericProperties.calendarPatterns.time,\n                separator = $.timepicker && $.timepicker._defaults && $.timepicker._defaults.separator ? $.timepicker._defaults.separator : \" \",\n                dateStr = $.datepicker.formatDate(datePattern, date),\n                timeStr = $.datepicker.formatTime(timePattern, {\n                    hour: date.getHours(),\n                    minute: date.getMinutes(),\n                    second: date.getSeconds()\n                });\n\n            return dateStr + separator + timeStr;\n        }\n\n        return undefined;\n    },\n\n    isoTimeTojQueryUiTime: function(val, genericProperties) {\n        if (val && genericProperties && genericProperties.calendarPatterns) {\n            var time = timeUtil.iso8601TimeToTimeObject(val),\n                timePattern = genericProperties.calendarPatterns.time;\n\n            if (time) {\n                return $.datepicker.formatTime(timePattern, {\n                    hour: time.hours,\n                    minute: time.minutes,\n                    second: time.seconds\n                });\n            }\n        }\n\n        return undefined;\n    },\n\n    filterStartValue: function(operator, value, dataType, genericProperties) {\n        var clearFilter = value == null && operator == null,\n            isNullCheckOperator = operator != null && operator.indexOf(\"null\") !== -1,\n            isBooleanColumn = dataType === \"boolean\",\n            isDatetimeColumn = dataType === \"datetime\",\n            isTimeColumn = dataType === \"time\";\n\n        if (clearFilter || isNullCheckOperator) {\n            return \"\";\n        } else {\n            if (_.isArray(value)) {\n                if (isDatetimeColumn) {\n                    return jiveDataConverter.isoTimestampTojQueryUiTimestamp(value[0], genericProperties);\n                } else if (isTimeColumn) {\n                    return jiveDataConverter.isoTimeTojQueryUiTime(value[0], genericProperties);\n                } else {\n                    return value[0];\n                }\n            } else {\n                if (isBooleanColumn) {\n                    return \"\";\n                } else if (isDatetimeColumn) {\n                    return jiveDataConverter.isoTimestampTojQueryUiTimestamp(value, genericProperties);\n                } else if (isTimeColumn) {\n                    return jiveDataConverter.isoTimeTojQueryUiTime(value, genericProperties);\n                } else {\n                    return value;\n                }\n            }\n        }\n    },\n\n    filterEndValue: function(operator, value, dataType, genericProperties) {\n        var clearFilter = value == null && operator == null,\n            isDatetimeColumn = dataType === \"datetime\",\n            isTimeColumn = dataType === \"time\";\n\n        if (clearFilter) {\n            return \"\";\n        } else {\n            if (_.isArray(value)) {\n                if (isDatetimeColumn) {\n                    return jiveDataConverter.isoTimestampTojQueryUiTimestamp(value[1], genericProperties);\n                } else if (isTimeColumn) {\n                    return jiveDataConverter.isoTimeTojQueryUiTime(value[1], genericProperties);\n                } else {\n                    return value[1];\n                }\n            } else {\n                return \"\";\n            }\n        }\n    },\n\n    dataTypeToSchemaFormat: {\n        \"Text\": \"string\",\n        \"Numeric\": \"numeric\",\n        \"Date\": \"datetime\",\n        \"Boolean\": \"boolean\",\n        \"Time\": \"time\"\n    },\n\n    schemaFormatOperatorToFilterOperatorMap: (function() {\n        var mapping = {};\n\n        mapping[\"string\"] = {};\n        mapping[\"string\"][\"equal\"] = \"EQUALS\";\n        mapping[\"string\"][\"not_equal\"] = \"IS_NOT_EQUAL_TO\";\n        mapping[\"string\"][\"contain\"] = \"CONTAINS\";\n        mapping[\"string\"][\"not_contain\"] = \"DOES_NOT_CONTAIN\";\n        mapping[\"string\"][\"start_with\"] = \"STARTS_WITH\";\n        mapping[\"string\"][\"not_start_with\"] = \"DOES_NOT_START_WITH\";\n        mapping[\"string\"][\"end_with\"] = \"ENDS_WITH\";\n        mapping[\"string\"][\"not_end_with\"] = \"DOES_NOT_END_WITH\";\n        mapping[\"string\"][\"is_null\"] = \"IS_NULL\";\n        mapping[\"string\"][\"is_not_null\"] = \"IS_NOT_NULL\";\n        mapping[\"datetime\"] = {};\n        mapping[\"datetime\"][\"equal\"] = \"EQUALS\";\n        mapping[\"datetime\"][\"not_equal\"] = \"IS_NOT_EQUAL_TO\";\n        mapping[\"datetime\"][\"between\"] = \"IS_BETWEEN\";\n        mapping[\"datetime\"][\"not_between\"] = \"IS_NOT_BETWEEN\";\n        mapping[\"datetime\"][\"on_or_before\"] = \"IS_ON_OR_BEFORE\";\n        mapping[\"datetime\"][\"before\"] = \"IS_BEFORE\";\n        mapping[\"datetime\"][\"on_or_after\"] = \"IS_ON_OR_AFTER\";\n        mapping[\"datetime\"][\"after\"] = \"IS_AFTER\";\n        mapping[\"datetime\"][\"is_null\"] = \"IS_NULL\";\n        mapping[\"datetime\"][\"is_not_null\"] = \"IS_NOT_NULL\";\n        mapping[\"time\"] = {};\n        mapping[\"time\"][\"equal\"] = \"EQUALS\";\n        mapping[\"time\"][\"not_equal\"] = \"IS_NOT_EQUAL_TO\";\n        mapping[\"time\"][\"between\"] = \"IS_BETWEEN\";\n        mapping[\"time\"][\"not_between\"] = \"IS_NOT_BETWEEN\";\n        mapping[\"time\"][\"on_or_before\"] = \"IS_ON_OR_BEFORE\";\n        mapping[\"time\"][\"before\"] = \"IS_BEFORE\";\n        mapping[\"time\"][\"on_or_after\"] = \"IS_ON_OR_AFTER\";\n        mapping[\"time\"][\"after\"] = \"IS_AFTER\";\n        mapping[\"time\"][\"is_null\"] = \"IS_NULL\";\n        mapping[\"time\"][\"is_not_null\"] = \"IS_NOT_NULL\";\n        mapping[\"numeric\"] = {};\n        mapping[\"numeric\"][\"equal\"] = \"EQUALS\";\n        mapping[\"numeric\"][\"not_equal\"] = \"DOES_NOT_EQUAL\";\n        mapping[\"numeric\"][\"greater\"] = \"GREATER_THAN\";\n        mapping[\"numeric\"][\"greater_or_equal\"] = \"GREATER_THAN_EQUAL_TO\";\n        mapping[\"numeric\"][\"less\"] = \"LESS_THAN\";\n        mapping[\"numeric\"][\"less_or_equal\"] = \"LESS_THAN_EQUAL_TO\";\n        mapping[\"numeric\"][\"between\"] = \"IS_BETWEEN\";\n        mapping[\"numeric\"][\"not_between\"] = \"IS_NOT_BETWEEN\";\n        mapping[\"numeric\"][\"is_null\"] = \"IS_NULL\";\n        mapping[\"numeric\"][\"is_not_null\"] = \"IS_NOT_NULL\";\n\n        return mapping;\n    })(),\n\n    filterOperatorToSchemaFormatMap: (function() {\n        var mapping = {};\n        mapping[\"string\"] = {};\n        mapping[\"string\"][\"EQUALS\"] = \"equal\";\n        mapping[\"string\"][\"IS_NOT_EQUAL_TO\"] = \"not_equal\";\n        mapping[\"string\"][\"CONTAINS\"] = \"contain\";\n        mapping[\"string\"][\"DOES_NOT_CONTAIN\"] = \"not_contain\";\n        mapping[\"string\"][\"STARTS_WITH\"] = \"start_with\";\n        mapping[\"string\"][\"DOES_NOT_START_WITH\"] = \"not_start_with\";\n        mapping[\"string\"][\"ENDS_WITH\"] = \"end_with\";\n        mapping[\"string\"][\"DOES_NOT_END_WITH\"] = \"not_end_with\";\n        mapping[\"string\"][\"IS_NULL\"] = \"is_null\";\n        mapping[\"string\"][\"IS_NOT_NULL\"] = \"is_not_null\";\n        mapping[\"datetime\"] = {};\n        mapping[\"datetime\"][\"EQUALS\"] = \"equal\";\n        mapping[\"datetime\"][\"IS_NOT_EQUAL_TO\"] = \"not_equal\";\n        mapping[\"datetime\"][\"IS_BETWEEN\"] = \"between\";\n        mapping[\"datetime\"][\"IS_NOT_BETWEEN\"] = \"not_between\";\n        mapping[\"datetime\"][\"IS_ON_OR_BEFORE\"] = \"on_or_before\";\n        mapping[\"datetime\"][\"IS_BEFORE\"] = \"before\";\n        mapping[\"datetime\"][\"IS_ON_OR_AFTER\"] = \"on_or_after\";\n        mapping[\"datetime\"][\"IS_AFTER\"] = \"after\";\n        mapping[\"datetime\"][\"IS_NULL\"] = \"is_null\";\n        mapping[\"datetime\"][\"IS_NOT_NULL\"] = \"is_not_null\";\n        mapping[\"numeric\"] = {};\n        mapping[\"numeric\"][\"EQUALS\"] = \"equal\";\n        mapping[\"numeric\"][\"DOES_NOT_EQUAL\"] = \"not_equal\";\n        mapping[\"numeric\"][\"GREATER_THAN\"] = \"greater\";\n        mapping[\"numeric\"][\"GREATER_THAN_EQUAL_TO\"] = \"greater_or_equal\";\n        mapping[\"numeric\"][\"LESS_THAN\"] = \"less\";\n        mapping[\"numeric\"][\"LESS_THAN_EQUAL_TO\"] = \"less_or_equal\";\n        mapping[\"numeric\"][\"IS_BETWEEN\"] = \"between\";\n        mapping[\"numeric\"][\"IS_NOT_BETWEEN\"] = \"not_between\";\n        mapping[\"numeric\"][\"IS_NULL\"] = \"is_null\";\n        mapping[\"numeric\"][\"IS_NOT_NULL\"] = \"is_not_null\";\n        mapping[\"time\"] = {};\n        mapping[\"time\"][\"EQUALS\"] = \"equal\";\n        mapping[\"time\"][\"IS_NOT_EQUAL_TO\"] = \"not_equal\";\n        mapping[\"time\"][\"IS_BETWEEN\"] = \"between\";\n        mapping[\"time\"][\"IS_NOT_BETWEEN\"] = \"not_between\";\n        mapping[\"time\"][\"IS_ON_OR_BEFORE\"] = \"on_or_before\";\n        mapping[\"time\"][\"IS_BEFORE\"] = \"before\";\n        mapping[\"time\"][\"IS_ON_OR_AFTER\"] = \"on_or_after\";\n        mapping[\"time\"][\"IS_AFTER\"] = \"after\";\n        mapping[\"time\"][\"IS_NULL\"] = \"is_null\";\n        mapping[\"time\"][\"IS_NOT_NULL\"] = \"is_not_null\";\n\n        return mapping;\n    })(),\n\n    schemaFormatOperatorToFilterOperator: function(operator, value, dataType) {\n        if (dataType !== \"boolean\") {\n            return jiveDataConverter.schemaFormatOperatorToFilterOperatorMap[dataType][operator];\n        } else {\n            if (operator === \"equal\" && value === true) {\n                return \"IS_TRUE\";\n            } else if (operator === \"equal\" && value === false) {\n                return \"IS_FALSE\";\n            } else if (operator === \"not_equal\" && value === true) {\n                return \"IS_NOT_TRUE\";\n            } else if (operator === \"not_equal\" && value === false) {\n                return \"IS_NOT_FALSE\";\n            } else if (operator === \"is_null\") {\n                return \"IS_NULL\";\n            } else if (operator === \"is_not_null\") {\n                return \"IS_NOT_NULL\";\n            }\n        }\n    },\n\n    operatorAndValueToSchemaFormat: function(operator, dataType, valueStart, valueEnd, pattern) {\n        var response = {};\n\n        if (dataType === \"boolean\") {\n            if (operator === \"IS_TRUE\") {\n                response.operator = \"equal\";\n                response.value = true;\n            } else if (operator === \"IS_FALSE\") {\n                response.operator = \"equal\";\n                response.value = false;\n            } else if (operator === \"IS_NOT_TRUE\") {\n                response.operator = \"not_equal\";\n                response.value = true;\n            } else if (operator === \"IS_NOT_FALSE\") {\n                response.operator = \"not_equal\";\n                response.value = false;\n            } else if (operator === \"IS_NULL\") {\n                response.operator = \"is_null\";\n                response.value = \"\";\n            } else if (operator === \"IS_NOT_NULL\") {\n                response.operator = \"is_not_null\";\n                response.value = \"\";\n            }\n        } else {\n            response.operator = jiveDataConverter.filterOperatorToSchemaFormatMap[dataType][operator];\n            var isRange = response.operator === \"between\" || response.operator === \"not_between\";\n            var isNullCheck = response.operator === \"is_null\" || response.operator === \"is_not_null\";\n\n            if (dataType === \"string\") {\n                response.value = valueStart == null ? '' : valueStart;\n            } else if (dataType === \"numeric\") {\n                if (isRange) {\n                    response.value = [valueStart, valueEnd]\n                } else {\n                    response.value = valueStart;\n                }\n            } else {\n                var genericProperties = this.parent && this.parent.config ? this.parent.config.genericProperties : undefined;\n\n                if (dataType === \"datetime\") {\n                    if (isRange) {\n                        response.value = [\n                            jiveDataConverter.jQueryUiTimestampToIsoTimestamp(valueStart, genericProperties),\n                            jiveDataConverter.jQueryUiTimestampToIsoTimestamp(valueEnd, genericProperties)\n                        ];\n                    } else {\n                        response.value = isNullCheck ?\n                            valueStart :\n                            jiveDataConverter.jQueryUiTimestampToIsoTimestamp(valueStart, genericProperties);\n                    }\n                } else if (dataType === \"time\") {\n                    if (isRange) {\n                        response.value = [\n                            jiveDataConverter.jQueryUiTimeToIsoTime(valueStart, genericProperties),\n                            jiveDataConverter.jQueryUiTimeToIsoTime(valueEnd, genericProperties)\n                        ];\n                    } else {\n                        response.value = isNullCheck ?\n                            valueStart :\n                            jiveDataConverter.jQueryUiTimeToIsoTime(valueStart, genericProperties);\n                    }\n                }\n            }\n        }\n\n        return response;\n    }\n};\n\nexport default jiveDataConverter;\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.\n * Licensed pursuant to commercial TIBCO End User License Agreement.\n */\n\nexport default {\n    INVALID_TIMESTAMP: \"invalid.timestamp\",\n    INVALID_TIME: \"invalid.time\"\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport RelativeDate from './RelativeDate';\nimport _ from 'underscore';\nvar RelativeTime = function () {\n    RelativeDate.apply(this, arguments);\n};\nvar F = function () {\n};\nF.prototype = RelativeDate.prototype;\nRelativeTime.prototype = new F();\nRelativeTime.prototype.constructor = RelativeTime;\nRelativeTime.PATTERNS = {\n    MINUTE: /^(MINUTE)(([+|\\-])(\\d{1,9}))?$/i,\n    HOUR: /^(HOUR)(([+|\\-])(\\d{1,9}))?$/i\n};\nRelativeTime.parse = function (relativeTimeString) {\n    if (RelativeTime.isValid(relativeTimeString)) {\n        for (var pattern in RelativeTime.PATTERNS) {\n            var result = RelativeTime.PATTERNS[pattern].exec(relativeTimeString);\n            if (result !== null && _.isArray(result) && result.length === 5) {\n                return new RelativeTime(result[1], result[3], result[4]);\n            }\n        }\n    }\n    return undefined;\n};\nRelativeTime.isValid = function (relativeTime) {\n    if (relativeTime instanceof RelativeTime) {\n        return relativeTime.toString() !== '';\n    } else if (_.isString(relativeTime)) {\n        for (var pattern in RelativeTime.PATTERNS) {\n            if (RelativeTime.PATTERNS[pattern].test(relativeTime)) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\nexport default RelativeTime;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nfunction getTimeRegexpPattern(timeFormat) {\n    const pattern = '^' + timeFormat\n        .toLowerCase()\n        .replace('hh', '([0-1][0-9]|2[0-3])')\n        .replace('mm', '([0-5][0-9])')\n        .replace('ss', '([0-5][0-9])')\n        .replace('l', '([0-9][0-9][0-9])') + '$';\n    return new RegExp(pattern);\n}\nfunction getTimeFormatComponents(timeFormat) {\n    const matches = timeFormat.toLowerCase().match(/(hh|mm|ss|l)/g), componentOrders = {\n        h: -1,\n        m: -1,\n        s: -1,\n        l: -1\n    };\n    if (matches) {\n        for (let i = 0; i < matches.length; i++) {\n            if (componentOrders[matches[i].toString().charAt(0)] === -1) {\n                componentOrders[matches[i].toString().charAt(0)] = i + 1;\n            }\n        }\n    }\n    return componentOrders;\n}\nfunction Time(hours, minutes, seconds, milliseconds) {\n    this.hours = hours || 0;\n    this.minutes = minutes || 0;\n    this.seconds = seconds || 0;\n    this.milliseconds = milliseconds || 0;\n}\nTime.prototype.total = function () {\n    return this.hours * 3600 + this.minutes * 60 + this.seconds;\n};\nTime.prototype.isValid = function () {\n    return this.hours >= 0 && this.hours <= 23\n        && this.minutes >= 0 && this.minutes <= 59\n        && this.seconds >= 0 && this.seconds <= 59\n        && this.milliseconds >= 0 && this.milliseconds <= 999;\n};\nTime.prototype.format = function (pattern) {\n    return pattern\n        .toLowerCase()\n        .replace('hh', this.hours < 10 ? '0' + this.hours : this.hours)\n        .replace('mm', this.minutes < 10 ? '0' + this.minutes : this.minutes)\n        .replace('ss', this.seconds < 10 ? '0' + this.seconds : this.seconds)\n        .replace('l', this.milliseconds < 10 ? '00' + this.milliseconds : (this.milliseconds < 100 ? '0' + this.milliseconds : this.milliseconds));\n};\nTime.compare = function (time1, time2) {\n    var total1 = time1.total(), total2 = time2.total();\n    if (total1 < total2) {\n        return -1;\n    } else if (total1 > total2) {\n        return 1;\n    } else {\n        return 0;\n    }\n};\nTime.parse = function (value, timeFormat) {\n    const timeRegexpPattern = getTimeRegexpPattern(timeFormat);\n    if (!_.isString(value) || !timeRegexpPattern.test(value)) {\n        return undefined;\n    }\n\n    const timeObj = new Time(),\n        components = timeRegexpPattern.exec(value);\n    const timeFormatComponents = getTimeFormatComponents(timeFormat);\n    timeObj.hours = parseInt(components[timeFormatComponents.h], 10);\n    timeObj.minutes = parseInt(components[timeFormatComponents.m], 10);\n    timeObj.seconds = parseInt(components[timeFormatComponents.s], 10);\n    if (timeFormatComponents.l !== -1) {\n        timeObj.milliseconds = parseInt(components[timeFormatComponents.l], 10);\n    }\n\n    return timeObj;\n};\nexport default Time;\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport jrsConfigs from \"../../../jrs.configs\";\nimport RelativeTime from '../datetime/RelativeTime';\nimport Time from '../datetime/Time';\n\nvar ISO_8061_TIME_PATTERN = 'HH:mm:ss';\n\nlet localeSettingsObject = jrsConfigs.localeSettings;\n\nfunction isRelativeTime(value) {\n    return RelativeTime.isValid(value);\n}\nfunction isTime(value, timeFormat) {\n    let time = Time.parse(value, timeFormat ? timeFormat : localeSettingsObject.timeFormat);\n    if (time) {\n        // is we got into this IF that means the format matches the value, so now let's see if the value contains\n        // correct time\n        return time.isValid();\n    }\n    // if the format didn't match the value then, maybe, the value contains millisecnds, and to check this we need to\n    // add a millisecond formatter to the format.\n    // BUT: if the format was specified as an argument, then we don't need to guess if the value has the milliseconds\n    // or not, we just follow the parse() result.\n    if (timeFormat) {\n        return false;\n    }\n    // ok, so, checking with milliseconds formatter:\n    time = Time.parse(value, localeSettingsObject.timeFormat + '.l');\n    return Boolean(time && time.isValid());\n}\nfunction isIso8601Time(value) {\n    return isTime(value, ISO_8061_TIME_PATTERN);\n}\nfunction compareTimes(value1, value2, timeFormat) {\n    const time1 = value1 instanceof Time ? value1 : Time.parse(value1, timeFormat != null ? timeFormat : localeSettingsObject.timeFormat),\n        time2 = value2 instanceof Time ? value2 : Time.parse(value2, timeFormat != null ? timeFormat : localeSettingsObject.timeFormat);\n    if (typeof time1 === 'undefined' || typeof time2 === 'undefined') {\n        return;\n    }\n    return Time.compare(time1, time2);\n}\nfunction timeToIso8061Time(hours, minutes, seconds) {\n    const obj = new Time(hours, minutes, seconds);\n    if (obj.isValid()) {\n        return obj.format(ISO_8061_TIME_PATTERN);\n    }\n    return undefined;\n}\nfunction iso8601TimeToTimeObject(val) {\n    return Time.parse(val, ISO_8061_TIME_PATTERN);\n}\nexport default {\n    isRelativeTime: isRelativeTime,\n    isTime: isTime,\n    isIso8601Time: isIso8601Time,\n    compareTimes: compareTimes,\n    timeToIso8061Time: timeToIso8061Time,\n    iso8601TimeToTimeObject: iso8601TimeToTimeObject\n};\n"],"sourceRoot":""}