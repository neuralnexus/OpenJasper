{"version":3,"sources":["webpack://jrs-ui/../bi-repository/src/i18n/all.properties.js","webpack://jrs-ui/../js-sdk/src/common/component/panel/trait/tabbedPanelTrait.js","webpack://jrs-ui/../js-sdk/src/common/component/panel/template/tabbedPanelButtonTemplate.htm","webpack://jrs-ui/../js-sdk/src/common/component/tree/plugin/SearchPlugin.js","webpack://jrs-ui/../js-sdk/src/common/component/tree/template/searchPluginTemplate.htm","webpack://jrs-ui/../js-sdk/src/common/component/tree/plugin/InfiniteScrollPlugin.js","webpack://jrs-ui/../js-sdk/src/common/component/tree/plugin/NoSearchResultsMessagePlugin.js","webpack://jrs-ui/../js-sdk/src/common/component/tree/template/noResourcesFoundMessageTemplate.htm","webpack://jrs-ui/../bi-repository/src/bi/repository/dialog/resourceChooser/template/itemDialog/resourceDialogTemplate.htm","webpack://jrs-ui/../bi-repository/src/bi/repository/dialog/resourceChooser/template/itemDialog/sidebarTreeLeafTemplate.htm","webpack://jrs-ui/../bi-repository/src/bi/repository/dialog/resourceChooser/template/itemDialog/treeTooltipTemplate.htm","webpack://jrs-ui/../bi-repository/src/bi/repository/dialog/resourceChooser/view/RepositoryItemChooserDialogView.js","webpack://jrs-ui/../bi-repository/src/bi/repository/dialog/resourceChooser/template/itemDialog/tabPanelButtonTemplate.htm","webpack://jrs-ui/../bi-repository/src/bi/repository/dialog/resourceChooser/view/RepositoryFolderChooserDialogView.js","webpack://jrs-ui/../bi-repository/src/bi/repository/dialog/resourceChooser/template/repositoryFolderChooserDialogTemplate.htm","webpack://jrs-ui/../bi-repository/src/bi/repository/dialog/resourceChooser/RepositoryChooserDialogFactory.js"],"names":["bundle","Object","keys","reduce","acc","key","onTabSelect","tabView","tabModel","tabAction","get","this","_contentRendered","tabs","render","$tabs","hide","filter","$","data","css","selectedTab","trigger","_","abstractPanelTrait","onConstructor","options","length","Error","tabContainerClass","tabHeaderContainerSelector","tabHeaderContainerClass","tabbedPanelClass","tab","action","content","afterSetElement","$el","addClass","$tabHeaderContainer","append","$contentContainer","empty","tabContainer","html","Backbone","classes","split","afterInitialize","tabHeaderContainer","OptionContainer","el","contextName","toggleClass","toggle","optionTemplate","listenTo","join","i","primary","openTab","onRemove","remove","extension","tabId","optionView","getOptionView","select","showTab","show","hideTab","SearchForm","template","events","initialize","owner","$searchInput","find","search","searchString","val","refresh","removeClass","clearInput","clear","clickHandler","clearSilently","context","keyHandler","evt","which","setSearchString","string","TreePlugin","searchParameter","additionalParams","dataLayerObtained","dataLayer","self","__searchPluginExtended","getDataUri","uri","apply","arguments","params","indexOf","treeInitialized","searchForm","dfdRenderTo","done","prepend","treeRemoved","itemsRendered","height","_onNoResourcesResult","rootLevel","list","totalItems","noResourcesFoundMessage","msg","i18n","stopListening","contextPath","jrsConfigs","DISABLE_LIST","LIST_TAB_NAME","TREE_TAB_NAME","dataUriTemplate_hackForRootFolderInTree","cssClassItemProcessor","item","value","resourceType","repositoryResourceTypes","cssClass","Dialog","constructor","disableListTab","resourcesTypeToSelect","resourcesTypeToSelectTree","_dfdRenderSerachFormTo","processors","treeNodeProcessor","processItem","_node","filterPublicFolderProcessor","filterTempFolderProcessor","filterEmptyFoldersProcessor","_links","resourcesTreeView","Tree","InfiniteScrollPlugin","use","TooltipPlugin","attachTo","contentTemplate","treeTooltipTemplate","create","instance","type","itemsTemplate","sidebarTreeLeafTemplate","listItemHeight","selection","allowed","multiple","rootless","collapsed","lazyLoad","bufferSize","treeBufferSize","additionalCssClasses","resourcesTreeGetDataUriFnUtil","getFolderUri","id","recursive","containerType","forceTotalCount","forceFullPage","levelDataId","customDataLayers","TreeDataLayer","dataUriTemplate","omit","values","getDataArray","rootItems","label","extractRootLevelDataFromHtmlResponse","publicFolder","children","push","accept","dataType","status","xhr","getDataSize","getResponseHeader","resourcesListView","NoSearchResultsMessagePlugin","SearchTreePlugin","rootLevelHeight","_getContentHeight","cache","searchKey","pageSize","modal","resizable","minWidth","minHeight","title","traits","tabbedPanelTrait","exposeAction","buttons","_selectionListener","_onLevelRenderError","_onOkButtonClick","_onSearch","_resetTreeAndList","_onCancelButtonClick","_tabChangedEvent","_haveBeenOpened","_isOpened","selectedResource","_lastSelectedResource","resize","resolve","open","_openDialog","close","_closeDialog","setDefaultSelectedItem","defaultSelectedItem","_defaultSelectedItem","_resizableContainerShiftHeight","_initialDialogWidth","_initialDialogHeight","width","setTabContainerStyles","browserDetection","setTimeout","not","each","outerHeight","disableButton","_onceVisible","_preselectItem","_openTab","reject","selectionKeys","itemSelected","resourceUri","undefined","resourceLabel","text","description","event","_getAdHocFlowEvent","enableButton","collapse","silent","resetSelection","itemToSelect","treeScrollArea","parent","_selectTreeNode","_onResize","tabName","adHocFlowEvent","_getErrorDialog","errorDialog","AlertDialog","responseStatus","error","level","JSON","parse","setMessage","parameters","substring","loadingClass","openClass","foldersTree","repositoryTreeFactory","types","tooltipOptions","setMinSizeAsSize","_resetTree","_onDialogResize","treeBox","dialogBody","closest","outerWidth","scrollArea","registeredDialogs","RepositoryItemChooserDialog","RepositoryFolderChooserDialog","getDialog","dialogType"],"mappings":"yKAGQ,IAAIA,EAEA,QAAU,KACV,QAAe,SAAgB,GAC/BA,EAAS,SAETA,EAASC,OAAOC,KAAK,KAAOC,QAAO,CAACC,EAAKC,KAC9B,IACAD,KACA,IAAMC,MAEd,IAGP,U,qGCoBR,SAASC,EAAYC,EAASC,GAC1B,IAAIC,EAAYD,EAASE,IAAI,UAExBC,KAAKC,iBAAiBH,KACvBE,KAAKC,iBAAiBH,IAAa,EACnCE,KAAKE,KAAKJ,GAAWK,QAAUH,KAAKE,KAAKJ,GAAWK,UAGxDH,KAAKI,MAAMC,OACXL,KAAKI,MAAME,QAAO,WACd,OAAOC,IAAEP,MAAMQ,KAAK,SAAWV,KAChCW,IAAI,UAAW,SAClBT,KAAKU,YAAcZ,EACnBE,KAAKW,QAAQ,OAASb,EAAWF,EAASC,GAQ9C,QAAee,WAAS,GAAIC,IAAoB,CAY5CC,cAAe,SAASC,GAGpB,GAFAA,IAAYA,EAAU,KAEjBA,EAAQb,OAASU,YAAUG,EAAQb,OAAiC,IAAxBa,EAAQb,KAAKc,OAC1D,MAAM,IAAIC,MAAM,6CAGpBjB,KAAKkB,kBAAoBH,EAAQG,mBAAqB,eACtDlB,KAAKmB,2BAA6BJ,EAAQI,4BAA8B,kCACxEnB,KAAKoB,wBAA0BL,EAAQK,yBAA2B,qBAClEpB,KAAKqB,iBAAmBN,EAAQM,kBAAoB,cAEpDrB,KAAKE,KAAO,GAEZU,SAAOG,EAAQb,KAAMU,UAAO,SAASU,GACjCtB,KAAKE,KAAKoB,EAAIC,QAAUD,EAAIE,eACrBF,EAAIE,UACZxB,QAOPyB,gBAAiB,WACbzB,KAAK0B,IAAIC,SAAS3B,KAAKqB,kBAEvBrB,KAAK4B,oBAAsB5B,KAAKO,EAAEP,KAAKmB,4BAElCnB,KAAK4B,oBAAoBZ,SAC1BhB,KAAK4B,oBAAsBrB,IAAE,eAAeoB,SAAS3B,KAAKoB,yBAC1DpB,KAAKO,EAAE,aAAasB,OAAO7B,KAAK4B,sBAGpC5B,KAAK8B,kBAAkBC,QAEvBnB,SAAOZ,KAAKE,KAAMU,UAAO,SAASY,EAAS1B,GACvC,IAAIkC,EAAezB,IAAE,eAAeoB,SAAS3B,KAAKkB,mBAClDc,EAAaxB,KAAK,MAAOV,GACzBkC,EAAaC,KAAKT,aAAmBU,SAAgBV,EAAQE,IAAMF,GAEnExB,KAAK8B,kBAAkBD,OAAOG,KAC/BhC,OAEH,IAAImC,EAAUnC,KAAKkB,kBAAkBkB,MAAM,KAC3CpC,KAAKI,MAAQJ,KAAKO,EAAE,IAAM4B,EAAQ,KAQtCE,gBAAiB,SAAStB,GACtBf,KAAKsC,mBAAqB,IAAIC,IAAgB,CAC1CxB,QAASA,EAAQb,KACjBsC,GAAIxC,KAAK4B,oBACTa,YAAa,MACbC,YAAa3B,EAAQ2B,aAAe,SACpCC,QAAQ,EACRC,eAAgB7B,EAAQ6B,gBClIpC,+JDqIQ5C,KAAKC,iBAAmB,GAExBD,KAAK6C,SACD7C,KAAKsC,mBACL1B,QAAMG,EAAQb,MAAM,SAASoB,GAAO,MAAO,OAASA,EAAIC,UAAWuB,KAAK,KACxElC,SAAOjB,EAAaK,OAExB,IAAK,IAAI+C,EAAI,EAAGA,EAAIhC,EAAQb,KAAKc,OAAQ+B,IACrC,GAAIhC,EAAQb,KAAK6C,GAAGC,QAAS,CACzBhD,KAAKiD,QAAQlC,EAAQb,KAAK6C,GAAGxB,QAC7B,QASZ2B,SAAU,WACNtC,SAAOZ,KAAKE,MAAM,SAASsB,GACvBA,EAAQ2B,QAAU3B,EAAQ2B,YAG9BnD,KAAKsC,mBAAmBa,UAO5BC,UAAW,CAMPH,QAAS,SAASI,GACd,IAAIC,EAAatD,KAAKsC,mBAAmBiB,cAAcF,GAEvDC,GAAcA,EAAWE,UAG7BC,QAAS,SAASJ,GACd,IAAIC,EAAatD,KAAKsC,mBAAmBiB,cAAcF,GAEvDC,GAAcA,EAAWI,QAG7BC,QAAS,SAASN,GACd,IAAIC,EAAatD,KAAKsC,mBAAmBiB,cAAcF,GAEvDC,GAAcA,EAAWjD,W,eE/JrC,IAAIuD,EAAa1B,gBAAqB,CAClC2B,SAAUjD,aC3Bd,gSD4BI4B,GAAI,WACA,OAAOxC,KAAK6D,YAEhBC,OAAQ,CACJ,uBAAwB,eACxB,4BAA6B,QAC7B,2BAA4B,cAEhCC,WAAY,SAAUhD,GAClBf,KAAKgE,MAAQjD,EAAQiD,MACrBhE,KAAKiE,aAAejE,KAAK0B,IAAIwC,KAAK,qBAEtCC,OAAQ,SAAUpD,GACd,IAAIqD,EAAepE,KAAKiE,aAAaI,MACrCrE,KAAKgE,MAAMM,QAAQ1D,WAAS,CAAEwD,aAAcA,GAAgBrD,IACxDqD,EACApE,KAAK0B,IAAIwC,KAAK,uBAAuBvC,SAAS,MAE9C3B,KAAK0B,IAAIwC,KAAK,uBAAuBK,YAAY,OAGzDC,WAAY,WACRxE,KAAKiE,aAAaI,IAAI,KAE1BI,MAAO,WACHzE,KAAKwE,aACLxE,KAAK0E,eACL1E,KAAKW,QAAQ,QAASX,OAE1B2E,cAAe,WACX3E,KAAKwE,oBACExE,KAAKgE,MAAMY,QAAQR,aAC1BpE,KAAKgE,MAAMM,QAAQ1D,WAAS,CAAEwD,aAAc,IAAMpE,KAAKgE,MAAMY,UAC7D5E,KAAK0B,IAAIwC,KAAK,uBAAuBK,YAAY,OAErDG,aAAc,kBACH1E,KAAKgE,MAAMY,QAAQR,aAC1BpE,KAAKmE,OAAOnE,KAAKgE,MAAMY,SACvB5E,KAAKW,QAAQ,SAAUX,KAAKgE,MAAMY,UAEtCC,WAAY,SAAUC,GACA,KAAdA,EAAIC,OACJ/E,KAAK0E,gBAGbM,gBAAiB,SAAUC,GACvBjF,KAAKiE,aAAaI,IAAIY,MAG9B,QAAeC,WAAkB,CAC7BnB,WAAY,SAAUhD,GAClBf,KAAKmF,gBAAkBpE,GAAWA,EAAQoE,iBAAmB,IAC7DnF,KAAKoF,iBAAmBrE,GAAWA,EAAQqE,kBAE/CC,kBAAmB,SAAUC,GACzB,IAAIC,EAAOvF,KACX,IAAKsF,EAAUE,uBAAwB,CACnC,IAAIC,EAAaH,EAAUG,WAAYN,EAAkBnF,KAAKmF,gBAC9DG,EAAUG,WAAa,SAAU1E,GAC7B,IAAI2E,EAAMD,EAAWE,MAAM3F,KAAM4F,WAAYC,EAAS,GAQtD,OAPI9E,EAAQqD,eACRyB,EAAOV,GAAmBpE,EAAQqD,cAElCmB,EAAKH,kBACLxE,WAASiF,EAAQN,EAAKH,iBAAkBxE,SAAOG,EAASH,SAAO2E,EAAKH,oBAExEM,KAA8B,IAAtBA,EAAII,QAAQ,KAAc,IAAM,KAAOvF,UAAQsF,GAAQ,IAGnEP,EAAUE,wBAAyB,KAG5C,CACCO,gBAAiB,SAAUhF,GACvBA,EAAUA,GAAW,GACrB,IAAIwE,EAAOvF,KACXA,KAAKgG,WAAa,IAAIpC,EAAW,CAAEI,MAAOhE,OACtCe,EAAQkF,YACRlF,EAAQkF,YAAYC,MAAK,SAAUxE,GAC/BA,EAAIyE,QAAQZ,EAAKS,WAAW7F,SAASqC,OAGzCxC,KAAK0B,IAAIyE,QAAQnG,KAAKgG,WAAW7F,SAASqC,KAGlD4D,YAAa,WACTpG,KAAKgG,WAAW7C,Y,eE5FxB,QAAe+B,WAAkB,CAC7BmB,cAAe,WACXrG,KAAKO,EAAE,wCAAwCE,IAAI,CAAE6F,OAAQ,Y,eCCrE,IAAIC,EAAuB,SAAUC,IAChCA,EAAUC,KAAKC,YAAcF,EAAUC,KAAK/E,IAAIO,KAAKjC,KAAK2G,0BAE/D,QAAezB,WAAkB,GAAI,CACjCa,gBAAiB,SAAUhF,GACvBf,KAAK2G,wBAA0B/F,aC9BvC,kGD8BmF,CAAEgG,IAAKC,4BAClF7G,KAAK6C,SAAS7C,KAAKwG,UAAW,QAASD,IAE3CH,YAAa,WACTpG,KAAK8G,cAAc9G,KAAKwG,UAAW,QAASD,M,gDElCpD,MCAA,02BCAA,wXC2CA,IAAIQ,EAAcC,gBACdC,GAAe,EAEfC,EAAgB,OAChBC,EAAgB,OAGhBC,EAA0CL,EAAc,4GAG5D,SAASM,EAAsBC,GAC3B,OAAQA,EAAKC,MAAMC,cACnB,KAAKC,gBACDH,EAAKI,SAAW,SAChB,MACJ,KAAKD,iBACDH,EAAKI,SAAW,eAChB,MACJ,KAAKD,+BACDH,EAAKI,SAAW,SAChB,MACJ,KAAKD,oBACDH,EAAKI,SAAW,gBAChB,MACJ,KAAKD,cACDH,EAAKI,SAAW,OAChB,MACJ,QACIJ,EAAKI,SAAW,gBAGpB,OAAOJ,EAGX,QAAeK,WAAc,CACzBC,YAAa,SAAU7G,GACnBA,IAAYA,EAAU,IACtBf,KAAKe,QAAUA,GACqB,IAAhCf,KAAKe,QAAQ8G,iBACbZ,GAAe,GAEdjH,KAAKe,QAAQ+G,uBAA0B9H,KAAKe,QAAQ+G,sBAAsB9G,SAC3EhB,KAAKe,QAAQ+G,sBAAwB,CAACL,kBAErCzH,KAAKe,QAAQgH,2BAA8B/H,KAAKe,QAAQgH,0BAA0B/G,SACnFhB,KAAKe,QAAQgH,0BAA4B/H,KAAKe,QAAQ+G,uBAE1D9H,KAAKgI,uBAAyBzH,eAC9B,IAAI0H,EAAa,CACbC,kBAAmB,CACfC,YAAa,SAAUb,GAEnB,OADAA,EAAKc,MAAQxH,aAAW,CAAC6G,YAAiCH,EAAKC,MAAMC,cAC9DF,IAGfe,4BAA6B,CACzBF,YAAa,SAAUb,GACnB,GAAuB,YAAnBA,EAAKC,MAAM7B,IACX,OAAO4B,IAInBgB,0BAA2B,CACvBH,YAAa,SAAUb,GACnB,IAAyC,IAArCA,EAAKC,MAAM7B,IAAII,QAAQ,SACvB,OAAOwB,IAInBiB,4BAA6B,CACzBJ,YAAa,SAAUb,GACnB,GAAkC,WAA5BA,EAAKC,MAAMC,cAA2D,KAA9BF,EAAKC,MAAMiB,OAAOhH,QAC5D,OAAO8F,IAInBD,sBAAuB,CAACc,YAAapH,EAAQsG,uBAAyBA,IAE1ErH,KAAKyI,kBAAoBC,QAASC,GAAsBC,IAAIC,IAAe,CACvEhC,KAAMA,EACNiC,SAAU9I,KAAK0B,IACfqH,gBAAiBC,IAClBC,SAASC,SAAS,CACjBC,KAAM,OACNC,cAAeC,EACfC,eAnFM,GAoFNC,UAAW,CACPC,SAAS,EACTC,UAAU,GAEdC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,WAAY9I,EAAQ+I,gBAxFT,IAyFXC,qBAAsB,UACtBtE,YAAYuE,OAA8B,CACtCC,aAAc,SAASC,GACnB,MAAc,UAAPA,EAAiB,GAAKA,GAEjCnD,YAAaA,EACboD,WAAW,EACXhB,KAAMnJ,KAAKe,QAAQgH,0BACnBqC,cAAe3C,WACf4C,iBAAiB,EACjBC,eAAe,IAEnBC,YAAa,MAEbC,iBAAkB,CAEd,IAAK5J,WAAS,IAAI6J,IAAc,CAC5BC,gBAAiBtD,EACjBa,WAAYrH,UAAQqH,GAAY0C,KAAK,+BAA+BC,SAASrD,QAC7EsD,aAAc,SAAUrK,GAGpB,IAAIsK,EAAY,CAAC,CACbZ,GAAI,QACJa,OAJJvK,GAAOwK,OAAqCxK,IAI5BuK,MACZrF,IAAK,IACL8B,aAAc,SACdgB,OAAQ,CAAChH,QAAS,sBAEtB,GAAIwF,iBAAyB,CACzB,IAAIiE,EAAerK,SAAOJ,EAAK0K,UAAU,SAAU5D,GAC/C,MAAoB,YAAbA,EAAK5B,OAGZuF,GACAH,EAAUK,KAAK,CACXjB,GAAI,UACJa,MAAOE,EAAaF,MACpBrF,IAAK,UACL8B,aAAc,SACdgB,OAAQ,CAAChH,QAAS,sBAI9B,OAAOsJ,KAEX,CACAM,OAAQ,YACRC,SAAU,UAGlBpD,WAAYrH,WAASqH,GACrB4C,aAAc,SAAUrK,EAAM8K,EAAQC,GAClC,OAAO/K,GAAQA,EAAKiH,qBAA2CjH,EAAKiH,qBAA2C,IAEnH+D,YAAa,SAAUhL,EAAM8K,EAAQC,GACjC,OAAQA,EAAIE,kBAAkB,kBAGtCzL,KAAK0L,kBAAoBhD,QAASiD,GAA8B/C,IAAIC,IAAe,CAC/EhC,KAAMA,EACNiC,SAAU9I,KAAK0B,IACfqH,gBAAiBC,IAClBJ,IAAIgD,EAAkB,CAAC3F,YAAajG,KAAKgI,yBAAyBiB,SAASC,SAAS,CACnFC,KAAM,OACN0C,gBAAiBjL,SAAOZ,KAAK8L,kBAAmB9L,MAChDoJ,cAAeC,EACfC,eA/JM,GAgKNC,UAAW,CACPC,SAAS,EACTC,UAAU,GAEdC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVnE,YAAYuE,OAA8B,CACtCC,aAAc,SAASC,GACnB,MAAc,UAAPA,EAAiB,GAAKA,GAEjCnD,YAAaA,EACboD,WAAW,EACXhB,KAAMnJ,KAAKe,QAAQ+G,sBACnBuC,iBAAiB,EACjBC,eAAe,IAEnBC,YAAa,MACbwB,MAAO,CACHC,UAAW,eACXC,SAAU,KAEdhE,WAAY,CACRA,EAAWZ,sBACXY,EAAWK,2BAEfuC,aAAc,SAAUrK,EAAM8K,EAAQC,GAClC,OAAO/K,GAAQA,EAAKiH,qBAA2CjH,EAAKiH,qBAA2C,IAEnH+D,YAAa,SAAUhL,EAAM8K,EAAQC,GACjC,OAAQA,EAAIE,kBAAkB,kBAGtC9D,+BAAkC3H,KAAM,CACpC6D,SH/OZ,yfGgPYqI,OAAO,EACPC,WAAW,EACXC,SAAU,IACVC,UAAW,IACXtC,qBAAsB,mBAAqB9C,EAAe,gBAAkB,IAC5EqF,MAAOvL,EAAQuL,OAASzF,6CACxB0F,OAAQ,CAACC,GACTrL,2BAA4B,sBAC5BD,kBAAmB,wCACnB0B,eCzPZ,yZD0PYF,YAAa,OACbxC,KAAM,CACF,CACI6K,MAAOlE,4CACPtF,OAAQ4F,EACR3F,QAASxB,KAAKyI,kBACdgE,cAAc,EACd1C,qBAAsB,sBACtBlD,KAAMA,GAEV,CACIkE,MAAOlE,yCACPtF,OAAQ2F,EACR1F,QAASxB,KAAK0L,kBACde,cAAc,EACd1C,qBAAsB,sBACtBlD,KAAMA,IAGd6F,QAAS,CACL,CACI3B,MAAOlE,0CACPtF,OAAQ,QACRyB,SAAS,GAEb,CACI+H,MAAOlE,8CACPtF,OAAQ,SACRyB,SAAS,OAMzBe,WAAY,SAAUhD,GAClBf,KAAK6C,SAAS7C,KAAKyI,kBAAmB,mBAAoBzI,KAAK2M,oBAC/D3M,KAAK6C,SAAS7C,KAAKyI,kBAAmB,mBAAoBzI,KAAK4M,qBAC/D5M,KAAK6C,SAAS7C,KAAKyI,kBAAmB,gBAAiBzI,KAAK6M,kBAC5D7M,KAAK6C,SAAS7C,KAAK0L,kBAAmB,mBAAoB1L,KAAK2M,oBAC/D3M,KAAK6C,SAAS7C,KAAK0L,kBAAmB,mBAAoB1L,KAAK4M,qBAC/D5M,KAAK6C,SAAS7C,KAAK0L,kBAAmB,gBAAiB1L,KAAK6M,kBAC5D7M,KAAK6C,SAAS7C,KAAK0L,kBAAkB1F,WAAY,SAAUhG,KAAK8M,WAChE9M,KAAK6C,SAAS7C,KAAK0L,kBAAkB1F,WAAY,QAAShG,KAAK+M,mBAC/D/M,KAAK6C,SAAS7C,KAAM,eAAgBY,SAAOZ,KAAK6M,iBAAkB7M,OAClEA,KAAK6C,SAAS7C,KAAM,gBAAiBY,SAAOZ,KAAKgN,qBAAsBhN,OACvEA,KAAK6C,SAAS7C,KAAM,oBAAqBA,KAAKiN,kBAC9CtF,+BAAkC3H,KAAM4F,WACxC5F,KAAKkN,iBAAkB,EACvBlN,KAAKmN,WAAY,EACjBnN,KAAKoN,iBAAmB,KACxBpN,KAAKqN,sBAAwB,MAEjCvJ,OAAQ,CAACwJ,OAAQ,aACjBnN,OAAQ,WAIJ,OAHAwH,2BAA8B3H,KAAM4F,WAEpC5F,KAAKgI,uBAAuBuF,QAAQvN,KAAK4B,qBAClC5B,MAEXwN,KAAM,WACFxN,KAAKyN,eAETC,MAAO,WACH1N,KAAK2N,gBAETxK,OAAQ,WACJnD,KAAK2N,eAEL3N,KAAKyI,kBAAkBtF,SACvBnD,KAAK0L,kBAAkBvI,SACvBwE,2BAA8B3H,KAAM4F,YAExCgI,uBAAwB,SAAUC,GAC9B7N,KAAK8N,qBAAuBD,GAMhChB,iBAAkB,WACV7M,KAAKoN,mBACLpN,KAAK2N,eACL3N,KAAKW,QAAQ,cAAeX,KAAKoN,kBACjCpN,KAAKqN,sBAAwBrN,KAAKoN,mBAG1CJ,qBAAsB,WAElBhN,KAAKoN,iBAAmB,KACpBpN,KAAKqN,wBACLrN,KAAKoN,iBAAmBpN,KAAKqN,uBAEjCrN,KAAK2N,gBAETF,YAAa,WACT,IAAIzN,KAAKmN,UAAT,CAGA,IAAI5H,EAAOvF,KACXA,KAAK+N,+BAAiC,GAAK9G,EAAe,GAAK,IAIlC,IAAzBjH,KAAKkN,iBACLlN,KAAKgO,oBAAsBhO,KAAK0B,IAAIjB,IAAI,SACxCT,KAAKiO,qBAAuBjO,KAAK0B,IAAIjB,IAAI,UACzCT,KAAKkN,iBAAkB,GAGvBlN,KAAK0B,IAAIjB,IAAI,CACTyN,MAAOlO,KAAKgO,oBACZ1H,OAAQtG,KAAKiO,uBAGrBtG,yBAA4B3H,KAAM4F,WAClC,IAAIuI,EAAwBvN,UAAO,WAC/BZ,KAAK8B,kBAAkBoC,KAAK,iBAAiBzD,IAAI,CAC7C,OAAU,UACV,aAAc,WAEnBT,MAECoO,aAA4BA,YAC5BC,WAAWF,EAAuB,GAElCA,IAEJnO,KAAK0B,IAAIwJ,WAAWoD,IAAI,iBAAiBA,IAAI,mBAAmBA,IAAI,oBAAoBC,MAAK,WACzFhJ,EAAKwI,gCAAkCxI,EAAKhF,EAAEP,MAAMwO,aAAY,MAEpExO,KAAK8B,kBAAkBwE,OAAOtG,KAAK0B,IAAI4E,SAAWtG,KAAK+N,gCAEvD/N,KAAK0L,kBAAkB1F,WAAWrB,gBAElC3E,KAAK+M,oBACL/M,KAAKyO,cAAc,SAEnBzO,KAAKyI,kBAAkBiG,aAAe,IAAInO,cAC1CP,KAAK0L,kBAAkBgD,aAAe,IAAInO,cAE1CP,KAAK2O,iBAEL3O,KAAK4O,SAAS3H,EAAeE,EAAgBD,GAC7ClH,KAAKmN,WAAY,IAErBQ,aAAc,WACL3N,KAAKmN,YAIVnN,KAAKyI,kBAAkBiG,aAAaG,SACpC7O,KAAK0L,kBAAkBgD,aAAaG,SACpClH,0BAA6B3H,KAAM4F,WACnC5F,KAAKmN,WAAY,IAErBR,mBAAoB,SAAUpD,GAC1B,IAAIuF,EAAgBxP,OAAOC,KAAKgK,GAC5BwF,EAAexF,IAAc3I,YAAU2I,IAAc3I,aAAW2I,KAAeA,EAAUuF,EAAc,IACvGE,EAAcD,EAAeA,EAAarJ,SAAMuJ,EAChDzH,EAAeuH,EAAeA,EAAavH,kBAAeyH,EAC1DC,EAAgBH,EAAeA,EAAahE,WAAQkE,EACxD,OAAKF,GAKDvH,IAAiBC,WACjBzH,KAAKO,EAAE,oBAAoBwB,QAE3B/B,KAAKO,EAAE,oBAAoB4O,KAAKJ,EAAaK,aAAe,IAG5DxO,aAAWA,UAAQ,CAAC6G,aAAkCD,IAEtDxH,KAAKoN,iBAAmB,UACxBpN,KAAKyO,cAAc,WAMvBzO,KAAKoN,iBAAmB,CACpB4B,YAAaA,EACbxH,aAAcA,EACd0H,cAAeA,EACfG,MAAOrP,KAAKsP,mBAAmB9H,SAEnCxH,KAAKuP,aAAa,YAzBdvP,KAAKyO,cAAc,cACnBzO,KAAKO,EAAE,oBAAoBwB,UA0BnCgL,kBAAmB,WAEf/M,KAAKyI,kBAAkB+G,SAAS,QAAS,CAACC,QAAQ,IAClDzP,KAAKyI,kBAAkB+G,SAAS,UAAW,CAACC,QAAQ,IACpDzP,KAAKyI,kBAAkBiH,iBAEvB1P,KAAK0L,kBAAkBgE,iBAEvB1P,KAAKO,EAAE,oBAAoBwB,SAE/B4M,eAAgB,WASZ,IAAIgB,GAAe,EAMnB,GALI3P,KAAKqN,sBACLsC,EAAe3P,KAAKqN,sBAAsB2B,YACnChP,KAAK8N,uBACZ6B,EAAe3P,KAAK8N,sBAEnB6B,EAAL,CASA,IAAIC,EAAiB5P,KAAKyI,kBAAkB/G,IAAImO,SAChD7P,KAAKyI,kBAAkBiG,aAAaxI,KAAKtF,UAAO,WAC5CZ,KAAKyI,kBAAkBqH,gBAAgBH,EAAcC,KACtD5P,SAEP+P,UAAW,WACP/P,KAAK8B,kBAAkBwE,OAAOtG,KAAK0B,IAAI4E,SAAWtG,KAAK+N,gCACvD/N,KAAK0L,kBAAkBlF,UAAUC,KAAK/E,IAAI4E,OAAOtG,KAAK0B,IAAI4E,SAAWtG,KAAK+N,+BAAiC,GAC3G/N,KAAKyI,kBAAkBjC,UAAUC,KAAK/E,IAAIjB,IAAI,SAAU,SAE5DqL,kBAAmB,WACf,OAAO9L,KAAK0B,IAAI4E,SAAWtG,KAAK+N,+BAAiC,GAErEjB,UAAW,WACP9M,KAAK4O,SAAS1H,GACdlH,KAAKyO,cAAc,UAEvBxB,iBAAkB,WACVjN,KAAKU,cAAgByG,EACrBnH,KAAKyI,kBAAkBiG,aAAanB,UAC7BvN,KAAKU,cAAgBwG,GAC5BlH,KAAK0L,kBAAkBgD,aAAanB,WAG5CqB,SAAU,SAAUoB,GAChBhQ,KAAKiD,QAAQ0C,MAAM3F,KAAM4F,YAE7B0J,mBAAoB,SAAU9H,GAC1B,IAAIyI,EAAiB,GAMrB,OALIzI,GAAgBC,iBAAuCD,GAAgBC,iBACvEwI,EAAiB,sBACVzI,GAAgBC,iCACvBwI,EAAiB,qBAEdA,GAEXC,gBAAiB,WACb,OAAOlQ,KAAKmQ,YAAcnQ,KAAKmQ,YAAcnQ,KAAKmQ,YAAc,IAAIC,KAExExD,oBAAqB,SAAUyD,EAAgBC,EAAOC,GAClDD,EAAQE,KAAKC,MAAMH,GACnB,IAAIH,EAAcnQ,KAAKkQ,kBACvBC,EAAYO,WAAWJ,EAAMK,WAAW,GAAGC,UAAUN,EAAMK,WAAW,GAAG7K,QAAQ,MAAQ,EAAGwK,EAAMK,WAAW,GAAG7K,QAAQ,QACxHqK,EAAY3C,OACZ+C,EAAM7O,IAAI6C,YAAYgM,EAAMM,cAAclP,SAAS4O,EAAMO,c,eE1ejE,QAAenJ,WAAc,CACzBC,YAAa,SAAU7G,GACnBA,IAAYA,EAAU,IACtB,IAAIgJ,EAAuB,eACvBhJ,EAAQgJ,uBACRA,GAAwB,IAAMhJ,EAAQgJ,sBAE1C/J,KAAK+Q,aAAcC,OAAsB,CACrC/I,WAAY,CACR,sBACA,oBACA,oBACA,8BACA,wBACA,oBAEJ6B,eAAgB/I,EAAQ+I,eACxBmH,MAAO,CAACxJ,YACRyJ,eAAgB,KAEpBvJ,+BAAkC3H,KAAM,CACpCkM,OAAO,EACPC,WAAW,EACXC,SAAU,IACVC,UAAW,IACX8E,iBAAkBpQ,EAAQoQ,iBAC1BpH,qBAAsBA,EACtBuC,MAAOzF,wBACPrF,QAASZ,aCvDrB,uODuDqBA,CAA2B,CAAEiG,KAAMA,IAC5C6F,QAAS,CACL,CACI3B,MAAOlE,mBACPtF,OAAQ,SACRyB,SAAS,GAEb,CACI+H,MAAOlE,mBACPtF,OAAQ,SACRyB,SAAS,MAIDhD,KAAK8B,kBAAkBoC,KAAK,2BAClCrC,OAAO7B,KAAK+Q,YAAY5Q,SAASqC,KAEnDuB,WAAY,SAAUhD,GAClBf,KAAK6C,SAAS7C,KAAK+Q,YAAa,mBAAoB/Q,KAAK2M,oBACzD3M,KAAK6C,SAAS7C,KAAM,gBAAiBA,KAAK6M,kBAC1C7M,KAAK6C,SAAS7C,KAAM,gBAAiBA,KAAKgN,sBAC1CrF,+BAAkC3H,KAAM4F,WACxC5F,KAAKmN,WAAY,EACjBnN,KAAKoN,iBAAmB,KACxBpN,KAAKqN,sBAAwB,MAEjCG,KAAM,WACFxN,KAAKyN,eAETC,MAAO,WACH1N,KAAK2N,gBAETxK,OAAQ,WACJnD,KAAK2N,eAEL3N,KAAK+Q,YAAY5N,SACjBwE,2BAA8B3H,KAAM4F,YAExCgI,uBAAwB,SAAUC,GAC9B7N,KAAK8N,qBAAuBD,GAMhChB,iBAAkB,WACV7M,KAAKoN,mBACLpN,KAAK2N,eACL3N,KAAKqN,sBAAwBrN,KAAKoN,mBAG1CJ,qBAAsB,WAElBhN,KAAKoN,iBAAmB,KACpBpN,KAAKqN,wBACLrN,KAAKoN,iBAAmBpN,KAAKqN,uBAEjCrN,KAAK2N,gBAETF,YAAa,WACLzN,KAAKmN,YAGTxF,yBAA4B3H,KAAM4F,WAElC5F,KAAKoR,aACLpR,KAAKyO,cAAc,UAEnBzO,KAAK2O,iBACL3O,KAAKmN,WAAY,IAErBQ,aAAc,WACL3N,KAAKmN,YAGVxF,0BAA6B3H,KAAM4F,WACnC5F,KAAKmN,WAAY,IAErBkE,gBAAiB,WACb,IAEIC,EAAUtR,KAAK8B,kBAAkBoC,KAAK,+BACtCqN,EAAavR,KAAK8B,kBAAkB0P,QAAQ,kCAChDF,EAAQpD,MAAMqD,EAAWE,YAAW,GAJb,IAKvBH,EAAQhL,OAAOiL,EAAW/C,aAAY,GAJd,KAM5B7B,mBAAoB,SAAUpD,GAC1B,IAAIuF,EAAgBxP,OAAOC,KAAKgK,GAC5BwF,EAAexF,IAAc3I,YAAU2I,IAAc3I,aAAW2I,KAAeA,EAAUuF,EAAc,IACvGE,EAAcD,EAAeA,EAAarJ,SAAMuJ,EAC/CF,GAOL/O,KAAKoN,iBAAmB,CAAE4B,YAAaA,GACvChP,KAAKuP,aAAa,WAPdvP,KAAKyO,cAAc,WAS3B2C,WAAY,WAERpR,KAAK+Q,YAAYvB,SAAS,QAAS,CAAEC,QAAQ,IAC7CzP,KAAK+Q,YAAYvB,SAAS,UAAW,CAAEC,QAAQ,IAC/CzP,KAAK+Q,YAAYrB,kBAErBf,eAAgB,WAQZ,IAAIgB,GAAe,EAMnB,GALI3P,KAAKqN,sBACLsC,EAAe3P,KAAKqN,sBAAsB2B,YACnChP,KAAK8N,uBACZ6B,EAAe3P,KAAK8N,sBAEnB6B,EAAL,CAIA,IAAI+B,EAAa1R,KAAK+Q,YAAYrP,IAAImO,SACtC7P,KAAK+Q,YAAYjB,gBAAgBH,EAAc+B,OE7JvD,IAAIC,EAAoB,CACpB,KAAQC,EACR,OAAUC,GAEd,SACIC,UAAW,SAAUC,GACjB,IAAInK,EAMJ,OAJAA,EAAcgK,EACVD,EAAkBI,KAClBnK,EAAc+J,EAAkBI,IAE7BnK","file":"_chunks/chunk.4339.js","sourcesContent":["\n        import {store, MERGED_BUNDLES_NAME} from 'bundleStore';\n        \n        let bundle;\n        \n        if ('all' !== MERGED_BUNDLES_NAME) {\n            store['all'] = store['all'] || {};\n            bundle = store['all'];\n        } else {\n            bundle = Object.keys(store).reduce((acc, key) => {\n                return {\n                    ...acc,\n                    ...store[key]\n                }\n            }, {});\n        }\n                                     \n        export default bundle;\n    ","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n* @author: Zakhar Tomchenko, Kostiantyn Tsaregradskyi\n* @version: $Id$\n*/\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nimport abstractPanelTrait from './abstractPanelTrait';\nimport OptionContainer from '../../base/OptionContainer';\nimport panelButtonTemplate from '../template/tabbedPanelButtonTemplate.htm';\n\n/**\n * @event tabbedPanelTrait#tab:ID\n * @description This event is fired when tab with corresponding ID is selected.\n */\nfunction onTabSelect(tabView, tabModel) {\n    var tabAction = tabModel.get(\"action\");\n\n    if (!this._contentRendered[tabAction]) {\n        this._contentRendered[tabAction] = true;\n        this.tabs[tabAction].render && this.tabs[tabAction].render();\n    }\n\n    this.$tabs.hide();\n    this.$tabs.filter(function() {\n        return $(this).data(\"tab\") === tabAction;\n    }).css(\"display\", \"block\");\n    this.selectedTab = tabAction;\n    this.trigger(\"tab:\" + tabAction, tabView, tabModel);\n}\n\n/**\n * @mixin tabbedPanelTrait\n * @description Extend panel with tabs.\n * @extends abstractPanelTrait\n */\nexport default _.extend({}, abstractPanelTrait, {\n    /**\n     * @description Initialize tab options.\n     * @memberof! tabbedPanelTrait\n     * @param {object} options\n     * @param {array} options.tabs Data for tabs.\n     * @param {string} [options.tabContainerClass=\"tabContainer\"] CSS class for tabs container in DOM.\n     * @param {string} [options.tabHeaderContainerSelector=\"> .header > .tabHeaderContainer\"] CSS selector for tabs header in DOM.\n     * @param {string} [options.tabHeaderContainerClass=\"tabHeaderContainer\"] CSS class for tabs header in DOM.\n     * @param {string} [options.tabbedPanelClass=\"tabbedPanel\"] CSS class for Panel.\n     * @throws {Error} Error if no data for tabs was provided\n     */\n    onConstructor: function(options) {\n        options || (options = {});\n\n        if (!options.tabs || !_.isArray(options.tabs) || options.tabs.length === 0) {\n            throw new Error(\"Tabbed panel should have at least one tab\");\n        }\n\n        this.tabContainerClass = options.tabContainerClass || \"tabContainer\";\n        this.tabHeaderContainerSelector = options.tabHeaderContainerSelector || \"> .header > .tabHeaderContainer\";\n        this.tabHeaderContainerClass = options.tabHeaderContainerClass || \"tabHeaderContainer\";\n        this.tabbedPanelClass = options.tabbedPanelClass || \"tabbedPanel\";\n\n        this.tabs = {};\n\n        _.each(options.tabs, _.bind(function(tab) {\n            this.tabs[tab.action] = tab.content;\n            delete tab.content;\n        }, this));\n    },\n\n    /**\n     * @description Build DOM for tabs.\n     * @memberof! tabbedPanelTrait\n     */\n    afterSetElement: function() {\n        this.$el.addClass(this.tabbedPanelClass);\n\n        this.$tabHeaderContainer = this.$(this.tabHeaderContainerSelector);\n\n        if (!this.$tabHeaderContainer.length) {\n            this.$tabHeaderContainer = $(\"<div></div>\").addClass(this.tabHeaderContainerClass);\n            this.$(\"> .header\").append(this.$tabHeaderContainer);\n        }\n\n        this.$contentContainer.empty();\n\n        _.each(this.tabs, _.bind(function(content, tabAction) {\n            var tabContainer = $(\"<div></div>\").addClass(this.tabContainerClass);\n            tabContainer.data(\"tab\", tabAction);\n            tabContainer.html(content instanceof Backbone.View ? content.$el : content);\n\n            this.$contentContainer.append(tabContainer);\n        }, this));\n\n        var classes = this.tabContainerClass.split(\" \");\n        this.$tabs = this.$('.' + classes[0]);\n    },\n\n    /**\n     * @description Initialize tabs.\n     * @memberof! tabbedPanelTrait\n     * @fires tabbedPanelTrait#tab:ID\n     */\n    afterInitialize: function(options){\n        this.tabHeaderContainer = new OptionContainer({\n            options: options.tabs,\n            el: this.$tabHeaderContainer,\n            contextName: \"tab\",\n            toggleClass: options.toggleClass || \"active\",\n            toggle: true,\n            optionTemplate: options.optionTemplate || panelButtonTemplate\n        });\n\n        this._contentRendered = {};\n\n        this.listenTo(\n            this.tabHeaderContainer,\n            _.map(options.tabs, function(tab) { return \"tab:\" + tab.action; }).join(\" \"),\n            _.bind(onTabSelect, this));\n\n        for (var i = 0; i < options.tabs.length; i++) {\n            if (options.tabs[i].primary) {\n                this.openTab(options.tabs[i].action);\n                break;\n            }\n        }\n    },\n\n    /**\n     * @description Destroy tabs.\n     * @memberof! tabbedPanelTrait\n     */\n    onRemove: function(){\n        _.each(this.tabs, function(content) {\n            content.remove && content.remove();\n        });\n\n        this.tabHeaderContainer.remove();\n    },\n\n    /**\n     * @description Additional methods to expose through Panel's API.\n     * @memberof! tabbedPanelTrait\n     */\n    extension: {\n        /**\n         * @description Open tab by it's ID.\n         * @memberof! tabbedPanelTrait\n         * @param {string} tabId ID of tab to open\n         */\n        openTab: function(tabId) {\n            var optionView = this.tabHeaderContainer.getOptionView(tabId);\n\n            optionView && optionView.select();\n        },\n\n        showTab: function(tabId) {\n            var optionView = this.tabHeaderContainer.getOptionView(tabId);\n\n            optionView && optionView.show();\n        },\n\n        hideTab: function(tabId) {\n            var optionView = this.tabHeaderContainer.getOptionView(tabId);\n\n            optionView && optionView.hide();\n        }\n    }\n});\n","export default \"<button class=\\\"button up\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <span class=\\\"wrap\\\">{{- label }}<span class=\\\"icon\\\"></span></span>\\n</button>\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nimport TreePlugin from './TreePlugin';\nimport template from '../template/searchPluginTemplate.htm';\nvar SearchForm = Backbone.View.extend({\n    template: _.template(template),\n    el: function () {\n        return this.template();\n    },\n    events: {\n        'click .button.search': 'clickHandler',\n        'click .button.searchClear': 'clear',\n        'keydown input[type=text]': 'keyHandler'\n    },\n    initialize: function (options) {\n        this.owner = options.owner;\n        this.$searchInput = this.$el.find('input[type=text]');\n    },\n    search: function (options) {\n        var searchString = this.$searchInput.val();\n        this.owner.refresh(_.extend({ searchString: searchString }, options));\n        if (searchString) {\n            this.$el.find('.button.searchClear').addClass('up');\n        } else {\n            this.$el.find('.button.searchClear').removeClass('up');\n        }\n    },\n    clearInput: function () {\n        this.$searchInput.val('');\n    },\n    clear: function () {\n        this.clearInput();\n        this.clickHandler();\n        this.trigger('clear', this);\n    },\n    clearSilently: function () {\n        this.clearInput();\n        delete this.owner.context.searchString;\n        this.owner.refresh(_.extend({ searchString: '' }, this.owner.context));\n        this.$el.find('.button.searchClear').removeClass('up');\n    },\n    clickHandler: function () {\n        delete this.owner.context.searchString;\n        this.search(this.owner.context);\n        this.trigger('search', this.owner.context);\n    },\n    keyHandler: function (evt) {\n        if (evt.which === 13) {\n            this.clickHandler();\n        }\n    },\n    setSearchString: function (string) {\n        this.$searchInput.val(string);\n    }\n});\nexport default TreePlugin.extend({\n    initialize: function (options) {\n        this.searchParameter = options && options.searchParameter || 'q';\n        this.additionalParams = options && options.additionalParams;\n    },\n    dataLayerObtained: function (dataLayer) {\n        var self = this;\n        if (!dataLayer.__searchPluginExtended) {\n            var getDataUri = dataLayer.getDataUri, searchParameter = this.searchParameter;\n            dataLayer.getDataUri = function (options) {\n                var uri = getDataUri.apply(this, arguments), params = {};\n                if (options.searchString) {\n                    params[searchParameter] = options.searchString;\n                }\n                if (self.additionalParams) {\n                    _.extend(params, self.additionalParams, _.pick(options, _.keys(self.additionalParams)));\n                }\n                uri += (uri.indexOf('?') === -1 ? '?' : '&') + $.param(params, true);\n                return uri;\n            };\n            dataLayer.__searchPluginExtended = true;\n        }\n    }\n}, {\n    treeInitialized: function (options) {\n        options = options || {};\n        var self = this;\n        this.searchForm = new SearchForm({ owner: this });\n        if (options.dfdRenderTo) {\n            options.dfdRenderTo.done(function ($el) {\n                $el.prepend(self.searchForm.render().el);\n            });\n        } else {\n            this.$el.prepend(this.searchForm.render().el);\n        }\n    },\n    treeRemoved: function () {\n        this.searchForm.remove();\n    }\n});","export default \"<span class=\\\"control searchLockup \\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"wrap\\\">\\n        <input type=\\\"text\\\" tabindex=\\\"\\\">\\n    </div>\\n    <b class=\\\"right\\\">\\n        <a class=\\\"button searchClear\\\"></a>\\n    </b>\\n    <a class=\\\"button search up\\\"></a>\\n</span>\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport TreePlugin from './TreePlugin';\nexport default TreePlugin.extend({\n    itemsRendered: function () {\n        this.$('> .subcontainer > .j-view-port-chunk').css({ height: 'auto' });\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport i18n from '../../../../i18n/CommonBundle.properties';\nimport TreePlugin from './TreePlugin';\nimport noResourcesFoundMessageTemplate from '../template/noResourcesFoundMessageTemplate.htm';\nvar _onNoResourcesResult = function (rootLevel) {\n    !rootLevel.list.totalItems && rootLevel.list.$el.html(this.noResourcesFoundMessage);\n};\nexport default TreePlugin.extend({}, {\n    treeInitialized: function (options) {\n        this.noResourcesFoundMessage = _.template(noResourcesFoundMessageTemplate, { msg: i18n['no.resources.found'] });\n        this.listenTo(this.rootLevel, 'ready', _onNoResourcesResult);\n    },\n    treeRemoved: function () {\n        this.stopListening(this.rootLevel, 'ready', _onNoResourcesResult);\n    }\n});","export default \"<div class=\\\"noSearchResults\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    {{- msg}}</div>\";","export default \"<div class=\\\"jr-mDialog jr-uWidth-450px jr reportChooserDialog {{- additionalCssClasses }}\\\" tabindex=\\\"-1\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"jr-mDialog-header mover jr\\\">\\n        <h1 class=\\\"jr-mDialog-header-title jr\\\">{{- title }}</h1>\\n    </div>\\n    <div class=\\\"sub header tabHeaderContainer\\\"></div>\\n    <div class=\\\"jr-mDialog-body jr subcontainer u-height-300px\\\">\\n    </div>\\n    <p class=\\\"itemDescription\\\"></p>\\n    <div class=\\\"jr-mDialog-footer jr\\\"></div>\\n\\n</div>\\n\";","export default \"<ul class=\\\"list collapsible\\\" style=\\\"top: {{- top}}px; position: relative;\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    {{ _.each(items, function(item){ }}\\n    <li class=\\\"{{- item._node ? 'node folders closed' : 'leaf'}} {{- item.selected ? 'selected' : ''}} {{- item.cssClass }}\\\" data-index=\\\"{{- item.index }}\\\" tabindex=\\\"-1\\\">\\n        <p class=\\\"wrap button {{- item._node ? '' : 'draggable'}} \\\" {{ if (item.value.description || item.value.uri) { }}data-tooltip='{{ if (item.value.description) { }}<p class=\\\"message label\\\">Description: </p><p class=\\\"message\\\">{{- item.value.description }}</p>{{ } }} {{ if (item.value.uri) { }} <p class=\\\"message label\\\">Path: </p><p class=\\\"message\\\">{{- item.value.uri }}</p> {{ } }}' {{ } }}><b class=\\\"icon\\\"></b> {{- item.value.label }} </p>\\n        <div class=\\\"subcontainer\\\"></div>\\n    </li>\\n    {{ }) }}\\n</ul>\";","export default \"{{ if (model.value.description) { }}\\n    <p class=\\\"message label\\\">{{- i18n[\\\"tooltip.description\\\"] }} </p>\\n    <p class=\\\"message\\\">{{- model.value.description }}</p>\\n{{ } }}\\n{{ if (model.value.uri) { }}\\n    <p class=\\\"message label\\\">{{- i18n[\\\"tooltip.path\\\"] }}</p>\\n    <p class=\\\"message\\\">{{- model.value.uri }}</p>\\n{{ } }}\\n\\n    <js-templateNonce></js-templateNonce>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../../../../../i18n/all.properties';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport Dialog from 'js-sdk/src/common/component/dialog/Dialog';\nimport AlertDialog from 'js-sdk/src/common/component/dialog/AlertDialog';\nimport Tree from 'js-sdk/src/common/component/tree/Tree';\nimport TreeDataLayer from 'js-sdk/src/common/component/tree/TreeDataLayer';\nimport tabbedPanelTrait from 'js-sdk/src/common/component/panel/trait/tabbedPanelTrait';\nimport SearchTreePlugin from 'js-sdk/src/common/component/tree/plugin/SearchPlugin';\nimport TooltipPlugin from 'js-sdk/src/common/component/tree/plugin/TooltipPlugin';\nimport InfiniteScrollPlugin from 'js-sdk/src/common/component/tree/plugin/InfiniteScrollPlugin';\nimport NoSearchResultsMessagePlugin from 'js-sdk/src/common/component/tree/plugin/NoSearchResultsMessagePlugin';\nimport repositoryResourceTypes from '../../../enum/repositoryResourceTypes';\nimport resourcesTreeGetDataUriFnUtil from '../../../util/resourcesTreeGetDataUriFnUtil';\nimport extractRootLevelDataFromHtmlResponse from '../../../util/extractRootLevelDataFromHtmlResponse';\nimport browserDetection from 'js-sdk/src/common/util/browserDetection';\nimport resourceDialogTemplate from '../template/itemDialog/resourceDialogTemplate.htm';\nimport sidebarTreeLeafTemplate from '../template/itemDialog/sidebarTreeLeafTemplate.htm';\nimport tabPanelButtonTemplate from '../template/itemDialog/tabPanelButtonTemplate.htm';\nimport treeTooltipTemplate from '../template/itemDialog/treeTooltipTemplate.htm';\n\nvar contextPath = jrsConfigs.contextPath;\nvar DISABLE_LIST = false;\nvar ITEM_HEIGHT = 22;\nvar LIST_TAB_NAME = 'list';\nvar TREE_TAB_NAME = 'tree';\nvar TREE_BUFFER_SIZE = 5000;\n\nvar dataUriTemplate_hackForRootFolderInTree = contextPath + \"/flow.html?_flowId=searchFlow&method=getNode&provider=repositoryExplorerTreeFoldersProvider&uri=/&depth=1\";\n\n//////////////////////////////////////////////////////////////\nfunction cssClassItemProcessor(item) {\n    switch (item.value.resourceType) {\n    case repositoryResourceTypes.REPORT_UNIT:\n        item.cssClass = 'report';\n        break;\n    case repositoryResourceTypes.DOMAIN_TOPIC:\n        item.cssClass = 'domain topic';\n        break;\n    case repositoryResourceTypes.SEMANTIC_LAYER_DATA_SOURCE:\n        item.cssClass = 'domain';\n        break;\n    case repositoryResourceTypes.ADHOC_DATA_VIEW:\n        item.cssClass = 'adhocDataView';\n        break;\n    case repositoryResourceTypes.OLAP_CUBE:\n        item.cssClass = 'olap';\n        break;\n    default:\n        item.cssClass = 'adhocDataView';\n        break;\n    }\n    return item;\n}\n\nexport default Dialog.extend({\n    constructor: function (options) {\n        options || (options = {});\n        this.options = options;\n        if (this.options.disableListTab === true) {\n            DISABLE_LIST = true;\n        }\n        if (!this.options.resourcesTypeToSelect || !this.options.resourcesTypeToSelect.length) {\n            this.options.resourcesTypeToSelect = [repositoryResourceTypes.REPORT_UNIT];\n        }\n        if (!this.options.resourcesTypeToSelectTree || !this.options.resourcesTypeToSelectTree.length) {\n            this.options.resourcesTypeToSelectTree = this.options.resourcesTypeToSelect;\n        }\n        this._dfdRenderSerachFormTo = $.Deferred();\n        var processors = {\n            treeNodeProcessor: {\n                processItem: function (item) {\n                    item._node = _.contains([repositoryResourceTypes.FOLDER], item.value.resourceType);\n                    return item;\n                }\n            },\n            filterPublicFolderProcessor: {\n                processItem: function (item) {\n                    if (item.value.uri !== '/public') {\n                        return item;\n                    }\n                }\n            },\n            filterTempFolderProcessor: {\n                processItem: function (item) {\n                    if (item.value.uri.indexOf('/temp') === -1) {\n                        return item;\n                    }\n                }\n            },\n            filterEmptyFoldersProcessor: {\n                processItem: function (item) {\n                    if (!(item.value.resourceType === 'folder' && item.value._links.content === '')) {\n                        return item;\n                    }\n                }\n            },\n            cssClassItemProcessor: {processItem: options.cssClassItemProcessor || cssClassItemProcessor}\n        };\n        this.resourcesTreeView = Tree.use(InfiniteScrollPlugin).use(TooltipPlugin, {\n            i18n: i18n,\n            attachTo: this.$el,\n            contentTemplate: treeTooltipTemplate\n        }).create().instance({\n            type: 'tree',\n            itemsTemplate: sidebarTreeLeafTemplate,\n            listItemHeight: ITEM_HEIGHT,\n            selection: {\n                allowed: true,\n                multiple: false\n            },\n            rootless: true,\n            collapsed: true,\n            lazyLoad: true,\n            bufferSize: options.treeBufferSize || TREE_BUFFER_SIZE,\n            additionalCssClasses: \"folders\",\n            getDataUri: resourcesTreeGetDataUriFnUtil({\n                getFolderUri: function(id) {\n                    return id === \"/root\" ? \"\" : id;\n                },\n                contextPath: contextPath,\n                recursive: false,\n                type: this.options.resourcesTypeToSelectTree,\n                containerType: repositoryResourceTypes.FOLDER,\n                forceTotalCount: true,\n                forceFullPage: true\n            }),\n            levelDataId: \"uri\",\n\n            customDataLayers: {\n                //workaround for correct viewing of '/public' folder label\n                '/': _.extend(new TreeDataLayer({\n                    dataUriTemplate: dataUriTemplate_hackForRootFolderInTree,\n                    processors: _.chain(processors).omit('filterPublicFolderProcessor').values().value(),\n                    getDataArray: function (data) {\n                        data = extractRootLevelDataFromHtmlResponse(data);\n\n                        var rootItems = [{\n                            id: '/root',\n                            label: data.label,\n                            uri: '/',\n                            resourceType: 'folder',\n                            _links: {content: '@fakeContentLink'}\n                        }];\n                        if (jrsConfigs.isProVersion) {\n                            var publicFolder = _.find(data.children, function (item) {\n                                return item.uri === '/public';\n                            });\n\n                            if (publicFolder) {\n                                rootItems.push({\n                                    id: '/public',\n                                    label: publicFolder.label,\n                                    uri: '/public',\n                                    resourceType: 'folder',\n                                    _links: {content: '@fakeContentLink'}\n                                });\n                            }\n                        }\n                        return rootItems;\n                    }\n                }), {\n                    accept: 'text/html',\n                    dataType: 'text'\n                })\n            },\n            processors: _.values(processors),\n            getDataArray: function (data, status, xhr) {\n                return data && data[repositoryResourceTypes.RESOURCE_LOOKUP] ? data[repositoryResourceTypes.RESOURCE_LOOKUP] : [];\n            },\n            getDataSize: function (data, status, xhr) {\n                return +xhr.getResponseHeader('Total-Count');\n            }\n        });\n        this.resourcesListView = Tree.use(NoSearchResultsMessagePlugin).use(TooltipPlugin, {\n            i18n: i18n,\n            attachTo: this.$el,\n            contentTemplate: treeTooltipTemplate\n        }).use(SearchTreePlugin, {dfdRenderTo: this._dfdRenderSerachFormTo}).create().instance({\n            type: 'list',\n            rootLevelHeight: _.bind(this._getContentHeight, this),\n            itemsTemplate: sidebarTreeLeafTemplate,\n            listItemHeight: ITEM_HEIGHT,\n            selection: {\n                allowed: true,\n                multiple: false\n            },\n            rootless: true,\n            collapsed: true,\n            lazyLoad: true,\n            getDataUri: resourcesTreeGetDataUriFnUtil({\n                getFolderUri: function(id) {\n                    return id === \"/root\" ? \"\" : id;\n                },\n                contextPath: contextPath,\n                recursive: true,\n                type: this.options.resourcesTypeToSelect,\n                forceTotalCount: true,\n                forceFullPage: true\n            }),\n            levelDataId: \"uri\",\n            cache: {\n                searchKey: 'searchString',\n                pageSize: 100\n            },\n            processors: [\n                processors.cssClassItemProcessor,\n                processors.filterTempFolderProcessor\n            ],\n            getDataArray: function (data, status, xhr) {\n                return data && data[repositoryResourceTypes.RESOURCE_LOOKUP] ? data[repositoryResourceTypes.RESOURCE_LOOKUP] : [];\n            },\n            getDataSize: function (data, status, xhr) {\n                return +xhr.getResponseHeader('Total-Count');\n            }\n        });\n        Dialog.prototype.constructor.call(this, {\n            template: resourceDialogTemplate,\n            modal: true,\n            resizable: true,\n            minWidth: 400,\n            minHeight: 400,\n            additionalCssClasses: 'sourceDialogNew' + (DISABLE_LIST ? ' listDisabled' : ''),\n            title: options.title || i18n['Repository.ItemSelectDialog.dialogTitle'],\n            traits: [tabbedPanelTrait],\n            tabHeaderContainerSelector: '.tabHeaderContainer',\n            tabContainerClass: 'tabContainer control groupBox treeBox',\n            optionTemplate: tabPanelButtonTemplate,\n            toggleClass: 'down',\n            tabs: [\n                {\n                    label: i18n['Repository.ItemSelectDialog.foldersTab'],\n                    action: TREE_TAB_NAME,\n                    content: this.resourcesTreeView,\n                    exposeAction: true,\n                    additionalCssClasses: 'action square small',\n                    i18n: i18n\n                },\n                {\n                    label: i18n['Repository.ItemSelectDialog.listTab'],\n                    action: LIST_TAB_NAME,\n                    content: this.resourcesListView,\n                    exposeAction: true,\n                    additionalCssClasses: 'action square small',\n                    i18n: i18n\n                }\n            ],\n            buttons: [\n                {\n                    label: i18n['Repository.ItemSelectDialog.okButton'],\n                    action: 'apply',\n                    primary: true\n                },\n                {\n                    label: i18n['Repository.ItemSelectDialog.cancelButton'],\n                    action: 'cancel',\n                    primary: false\n                }\n            ]\n        });\n    },\n\n    initialize: function (options) {\n        this.listenTo(this.resourcesTreeView, 'selection:change', this._selectionListener);\n        this.listenTo(this.resourcesTreeView, 'levelRenderError', this._onLevelRenderError);\n        this.listenTo(this.resourcesTreeView, 'item:dblclick', this._onOkButtonClick);\n        this.listenTo(this.resourcesListView, 'selection:change', this._selectionListener);\n        this.listenTo(this.resourcesListView, 'levelRenderError', this._onLevelRenderError);\n        this.listenTo(this.resourcesListView, 'item:dblclick', this._onOkButtonClick);\n        this.listenTo(this.resourcesListView.searchForm, 'search', this._onSearch);\n        this.listenTo(this.resourcesListView.searchForm, 'clear', this._resetTreeAndList);\n        this.listenTo(this, 'button:apply', _.bind(this._onOkButtonClick, this));\n        this.listenTo(this, 'button:cancel', _.bind(this._onCancelButtonClick, this));\n        this.listenTo(this, 'tab:tree tab:list', this._tabChangedEvent);\n        Dialog.prototype.initialize.apply(this, arguments);\n        this._haveBeenOpened = false;\n        this._isOpened = false;\n        this.selectedResource = null;\n        this._lastSelectedResource = null;\n    },\n    events: {resize: '_onResize'},\n    render: function () {\n        Dialog.prototype.render.apply(this, arguments);    // connect search form to dialog header\n        // connect search form to dialog header\n        this._dfdRenderSerachFormTo.resolve(this.$tabHeaderContainer);\n        return this;\n    },\n    open: function () {\n        this._openDialog();\n    },\n    close: function () {\n        this._closeDialog();\n    },\n    remove: function () {\n        this._closeDialog();    // remove internal components\n        // remove internal components\n        this.resourcesTreeView.remove();\n        this.resourcesListView.remove();\n        Dialog.prototype.remove.apply(this, arguments);\n    },\n    setDefaultSelectedItem: function (defaultSelectedItem) {\n        this._defaultSelectedItem = defaultSelectedItem;\n    },\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Next go private methods\n    _onOkButtonClick: function () {\n        if (this.selectedResource) {\n            this._closeDialog();\n            this.trigger('item:select', this.selectedResource);\n            this._lastSelectedResource = this.selectedResource;\n        }\n    },\n    _onCancelButtonClick: function () {\n        // removing the selection if some was made\n        this.selectedResource = null;\n        if (this._lastSelectedResource) {\n            this.selectedResource = this._lastSelectedResource;\n        }\n        this._closeDialog();\n    },\n    _openDialog: function () {\n        if (this._isOpened) {\n            return;\n        }\n        var self = this;\n        this._resizableContainerShiftHeight = 6 - (DISABLE_LIST ? 40 : 0);    // QA team said: if user has changed size of the dialog, then closed it, and then opened it again -- the dialog\n        // should restore it's size. Le'ts implement it !\n        // QA team said: if user has changed size of the dialog, then closed it, and then opened it again -- the dialog\n        // should restore it's size. Le'ts implement it !\n        if (this._haveBeenOpened === false) {\n            this._initialDialogWidth = this.$el.css('width');\n            this._initialDialogHeight = this.$el.css('height');\n            this._haveBeenOpened = true;\n        } else {\n            // restore saved values upon opening\n            this.$el.css({\n                width: this._initialDialogWidth,\n                height: this._initialDialogHeight\n            });\n        }\n        Dialog.prototype.open.apply(this, arguments);\n        var setTabContainerStyles = _.bind(function () {\n            this.$contentContainer.find('.tabContainer').css({\n                'height': 'inherit',\n                'overflow-y': 'auto'\n            });\n        }, this);    //IE8, IE9 compatibility workaround\n        //IE8, IE9 compatibility workaround\n        if (browserDetection.isIE8() || browserDetection.isIE9()) {\n            setTimeout(setTabContainerStyles, 1);\n        } else {\n            setTabContainerStyles();\n        }\n        this.$el.children().not('.subcontainer').not('.ui-resizable-e').not('.ui-resizable-se').each(function () {\n            self._resizableContainerShiftHeight += self.$(this).outerHeight(true);\n        });\n        this.$contentContainer.height(this.$el.height() - this._resizableContainerShiftHeight);    // At this moment we have to reset search field\n        // At this moment we have to reset search field\n        this.resourcesListView.searchForm.clearSilently();    // and reset the tree itself !\n        // and reset the tree itself !\n        this._resetTreeAndList();\n        this.disableButton('apply');    // prepare deferred object to let other components know then tree or list will be visible\n        // prepare deferred object to let other components know then tree or list will be visible\n        this.resourcesTreeView._onceVisible = new $.Deferred();\n        this.resourcesListView._onceVisible = new $.Deferred();    // now, select (actually, launch listeners for tab to ne opened) the default item in the tree and the list\n        // now, select (actually, launch listeners for tab to ne opened) the default item in the tree and the list\n        this._preselectItem();    // then, open some default tab\n        // then, open some default tab\n        this._openTab(DISABLE_LIST ? TREE_TAB_NAME : LIST_TAB_NAME);\n        this._isOpened = true;\n    },\n    _closeDialog: function () {\n        if (!this._isOpened) {\n            return;\n        }    // \"close\" deferred object in tree and list\n        // \"close\" deferred object in tree and list\n        this.resourcesTreeView._onceVisible.reject();\n        this.resourcesListView._onceVisible.reject();\n        Dialog.prototype.close.apply(this, arguments);\n        this._isOpened = false;\n    },\n    _selectionListener: function (selection) {\n        var selectionKeys = Object.keys(selection);\n        var itemSelected = selection && (_.isArray(selection) || _.isObject(selection)) && selection[selectionKeys[0]];\n        var resourceUri = itemSelected ? itemSelected.uri : undefined;\n        var resourceType = itemSelected ? itemSelected.resourceType : undefined;\n        var resourceLabel = itemSelected ? itemSelected.label : undefined;\n        if (!itemSelected) {\n            this.disableButton('apply');\n            this.$('.itemDescription').empty();\n            return;\n        }\n        if (resourceType === repositoryResourceTypes.FOLDER) {\n            this.$('.itemDescription').empty();\n        } else {\n            this.$('.itemDescription').text(itemSelected.description || '');\n        }    // do not enable OK button if user has clicked on folders which he might want to open\n        // do not enable OK button if user has clicked on folders which he might want to open\n        if (_.contains(_.union([repositoryResourceTypes.FOLDER]), resourceType)) {\n            // drop information about selecting which probably was made already\n            this.selectedResource = null;\n            this.disableButton('apply');\n            return;\n        }    // save selected resource information.\n        // this could be used by anyone to get information about what has been selected\n        // save selected resource information.\n        // this could be used by anyone to get information about what has been selected\n        this.selectedResource = {\n            resourceUri: resourceUri,\n            resourceType: resourceType,\n            resourceLabel: resourceLabel,\n            event: this._getAdHocFlowEvent(resourceType)\n        };\n        this.enableButton('apply');\n    },\n    _resetTreeAndList: function () {\n        // reset Tree\n        this.resourcesTreeView.collapse('/root', {silent: true});\n        this.resourcesTreeView.collapse('/public', {silent: true});\n        this.resourcesTreeView.resetSelection();    // reset List\n        // reset List\n        this.resourcesListView.resetSelection();    // and description as well\n        // and description as well\n        this.$('.itemDescription').empty();\n    },\n    _preselectItem: function () {\n        // This function should select some item in the tree or in the list\n        // once the dialog is opened.\n        // There can be several \"sources\" of items which we might select:\n        // 1) pre-default selection given during dialog initialization\n        // 2) last selected item (user opened dialog, selected item and clicked \"OK\")\n        // So, the logic would be the next:\n        // we look if we have \"last selected item\", if yes -- then use it, if not --\n        // then look if we have \"pre-default selection\", if yes -- the use it, if not -- nothing to do\n        var itemToSelect = false;\n        if (this._lastSelectedResource) {\n            itemToSelect = this._lastSelectedResource.resourceUri;\n        } else if (this._defaultSelectedItem) {\n            itemToSelect = this._defaultSelectedItem;\n        }\n        if (!itemToSelect) {\n            // nothing to do\n            return;\n        }    // now, we have to wait once the tree or list will be visible\n        // we need it because we have to scroll tree or list, and this requires them to be visible\n        // on the page\n        // now, we have to wait once the tree or list will be visible\n        // we need it because we have to scroll tree or list, and this requires them to be visible\n        // on the page\n        var treeScrollArea = this.resourcesTreeView.$el.parent();\n        this.resourcesTreeView._onceVisible.done(_.bind(function () {\n            this.resourcesTreeView._selectTreeNode(itemToSelect, treeScrollArea);\n        }, this));\n    },\n    _onResize: function () {\n        this.$contentContainer.height(this.$el.height() - this._resizableContainerShiftHeight);\n        this.resourcesListView.rootLevel.list.$el.height(this.$el.height() - this._resizableContainerShiftHeight - 6);\n        this.resourcesTreeView.rootLevel.list.$el.css('height', '100%');\n    },\n    _getContentHeight: function () {\n        return this.$el.height() - this._resizableContainerShiftHeight - 6;\n    },\n    _onSearch: function () {\n        this._openTab(LIST_TAB_NAME);\n        this.disableButton('apply');\n    },\n    _tabChangedEvent: function () {\n        if (this.selectedTab === TREE_TAB_NAME) {\n            this.resourcesTreeView._onceVisible.resolve();\n        } else if (this.selectedTab === LIST_TAB_NAME) {\n            this.resourcesListView._onceVisible.resolve();\n        }\n    },\n    _openTab: function (tabName) {\n        this.openTab.apply(this, arguments);\n    },\n    _getAdHocFlowEvent: function (resourceType) {\n        var adHocFlowEvent = '';\n        if (resourceType == repositoryResourceTypes.REPORT_UNIT || resourceType == repositoryResourceTypes.DOMAIN_TOPIC) {\n            adHocFlowEvent = 'startAdHocWithTopic';\n        } else if (resourceType == repositoryResourceTypes.SEMANTIC_LAYER_DATA_SOURCE) {\n            adHocFlowEvent = 'startQueryBuilder';\n        }\n        return adHocFlowEvent;\n    },\n    _getErrorDialog: function () {\n        return this.errorDialog ? this.errorDialog : this.errorDialog = new AlertDialog();\n    },\n    _onLevelRenderError: function (responseStatus, error, level) {\n        error = JSON.parse(error);\n        var errorDialog = this._getErrorDialog();\n        errorDialog.setMessage(error.parameters[0].substring(error.parameters[0].indexOf(': ') + 2, error.parameters[0].indexOf('\\n')));\n        errorDialog.open();\n        level.$el.removeClass(level.loadingClass).addClass(level.openClass);\n    }\n});","export default \"<button class=\\\"button {{- additionalCssClasses }}{{ if (exposeAction) { }} {{- action}} {{ } }} up\\\" title=\\\"{{ if(action === 'list') { }} {{- i18n[\\\"Repository.ItemSelectDialog.listTabToolip\\\"] }} {{ } else { }} {{- i18n[\\\"Repository.ItemSelectDialog.foldersTabToolip\\\"] }} {{ } }}\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <span class=\\\"wrap\\\">{{- label }}<span class=\\\"icon\\\"></span></span>\\n</button>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport i18n from '../../../../../i18n/all.properties';\nimport Dialog from 'js-sdk/src/common/component/dialog/Dialog';\nimport dialogTemplate from '../template/repositoryFolderChooserDialogTemplate.htm';\nimport repositoryTreeFactory from '../../../factory/repositoryTreeFactory';\nimport repositoryResourceTypes from '../../../enum/repositoryResourceTypes';\nexport default Dialog.extend({\n    constructor: function (options) {\n        options || (options = {});\n        var additionalCssClasses = 'selectFolder';\n        if (options.additionalCssClasses) {\n            additionalCssClasses += ' ' + options.additionalCssClasses;\n        }\n        this.foldersTree = repositoryTreeFactory({\n            processors: [\n                'folderTreeProcessor',\n                'treeNodeProcessor',\n                'i18nItemProcessor',\n                'filterPublicFolderProcessor',\n                'cssClassItemProcessor',\n                'fakeUriProcessor'\n            ],\n            treeBufferSize: options.treeBufferSize,\n            types: [repositoryResourceTypes.FOLDER],\n            tooltipOptions: {}\n        });\n        Dialog.prototype.constructor.call(this, {\n            modal: true,\n            resizable: true,\n            minWidth: 400,\n            minHeight: 400,\n            setMinSizeAsSize: options.setMinSizeAsSize,\n            additionalCssClasses: additionalCssClasses,\n            title: i18n['repository.content'],\n            content: _.template(dialogTemplate)({ i18n: i18n }),\n            buttons: [\n                {\n                    label: i18n['button.select'],\n                    action: 'select',\n                    primary: true\n                },\n                {\n                    label: i18n['button.cancel'],\n                    action: 'cancel',\n                    primary: false\n                }\n            ]\n        });\n        var $bodyOfDialog = this.$contentContainer.find('.control.groupBox .body');\n        $bodyOfDialog.append(this.foldersTree.render().el);\n    },\n    initialize: function (options) {\n        this.listenTo(this.foldersTree, 'selection:change', this._selectionListener);\n        this.listenTo(this, 'button:select', this._onOkButtonClick);\n        this.listenTo(this, 'button:cancel', this._onCancelButtonClick);\n        Dialog.prototype.initialize.apply(this, arguments);\n        this._isOpened = false;\n        this.selectedResource = null;\n        this._lastSelectedResource = null;\n    },\n    open: function () {\n        this._openDialog();\n    },\n    close: function () {\n        this._closeDialog();\n    },\n    remove: function () {\n        this._closeDialog();    // remove internal components\n        // remove internal components\n        this.foldersTree.remove();\n        Dialog.prototype.remove.apply(this, arguments);\n    },\n    setDefaultSelectedItem: function (defaultSelectedItem) {\n        this._defaultSelectedItem = defaultSelectedItem;\n    },\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Next go private methods\n    _onOkButtonClick: function () {\n        if (this.selectedResource) {\n            this._closeDialog();\n            this._lastSelectedResource = this.selectedResource;\n        }\n    },\n    _onCancelButtonClick: function () {\n        // removing the selection if some was made\n        this.selectedResource = null;\n        if (this._lastSelectedResource) {\n            this.selectedResource = this._lastSelectedResource;\n        }\n        this._closeDialog();\n    },\n    _openDialog: function () {\n        if (this._isOpened) {\n            return;\n        }\n        Dialog.prototype.open.apply(this, arguments);    // reset the tree itself !\n        // reset the tree itself !\n        this._resetTree();\n        this.disableButton('select');    // now, select the default item in the tree\n        // now, select the default item in the tree\n        this._preselectItem();\n        this._isOpened = true;\n    },\n    _closeDialog: function () {\n        if (!this._isOpened) {\n            return;\n        }\n        Dialog.prototype.close.apply(this, arguments);\n        this._isOpened = false;\n    },\n    _onDialogResize: function () {\n        var widthReservation = 55;\n        var heightReservation = 50;\n        var treeBox = this.$contentContainer.find('.treeBox > .content > .body');\n        var dialogBody = this.$contentContainer.closest('.jr-mDialog > .jr-mDialog-body');\n        treeBox.width(dialogBody.outerWidth(true) - widthReservation);\n        treeBox.height(dialogBody.outerHeight(true) - heightReservation);\n    },\n    _selectionListener: function (selection) {\n        var selectionKeys = Object.keys(selection);\n        var itemSelected = selection && (_.isArray(selection) || _.isObject(selection)) && selection[selectionKeys[0]];\n        var resourceUri = itemSelected ? itemSelected.uri : undefined;\n        if (!itemSelected) {\n            this.disableButton('select');\n            return;\n        }    // save selected resource information.\n        // this could be used by anyone to get information about what has been selected\n        // save selected resource information.\n        // this could be used by anyone to get information about what has been selected\n        this.selectedResource = { resourceUri: resourceUri };\n        this.enableButton('select');\n    },\n    _resetTree: function () {\n        // reset Tree\n        this.foldersTree.collapse('/root', { silent: true });\n        this.foldersTree.collapse('/public', { silent: true });\n        this.foldersTree.resetSelection();\n    },\n    _preselectItem: function () {\n        // This function should select some item in the tree once the dialog is opened.\n        // There can be several \"sources\" of items which we might select:\n        // 1) pre-default selection given during dialog initialization\n        // 2) last selected item (user opened dialog, selected item and clicked \"OK\")\n        // So, the logic would be the next:\n        // we look if we have \"last selected item\", if yes -- then use it, if not --\n        // then look if we have \"pre-default selection\", if yes -- the use it, if not -- nothing to do\n        var itemToSelect = false;\n        if (this._lastSelectedResource) {\n            itemToSelect = this._lastSelectedResource.resourceUri;\n        } else if (this._defaultSelectedItem) {\n            itemToSelect = this._defaultSelectedItem;\n        }\n        if (!itemToSelect) {\n            // nothing to do\n            return;\n        }\n        var scrollArea = this.foldersTree.$el.parent();\n        this.foldersTree._selectTreeNode(itemToSelect, scrollArea);\n    }\n});","export default \"<div class=\\\"control groupBox treeBox\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<div class=\\\"content\\\">\\n\\t\\t<div class=\\\"header \\\">\\n\\t\\t\\t<div class=\\\"title\\\"></div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"body\\\"></div>\\n\\t</div>\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport RepositoryItemChooserDialog from './view/RepositoryItemChooserDialogView';\nimport RepositoryFolderChooserDialog from './view/RepositoryFolderChooserDialogView';\nvar registeredDialogs = {\n    'item': RepositoryItemChooserDialog,\n    'folder': RepositoryFolderChooserDialog\n};\nexport default {\n    getDialog: function (dialogType) {\n        var constructor;    // by default\n        // by default\n        constructor = RepositoryItemChooserDialog;\n        if (registeredDialogs[dialogType]) {\n            constructor = registeredDialogs[dialogType];\n        }\n        return constructor;\n    }\n};"],"sourceRoot":""}