{"version":3,"sources":["webpack://jrs-ui/./src/dynamicTree/dynamicTree.tree.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.treenode.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.designerBase.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.events.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.treesupport.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.utils.js"],"names":["nextId","dynamicTree","trees","nodes","treeNodeEdited","editaborted","activeTreeId","Tree","id","options","this","setRootNode","root","bShowRoot","handleNodeOnDblclick","undefined","multiSelectEnabled","showAllNodesOnStartup","treeClassName","dragPattern","dragClasses","dropClasses","selectOnMousedown","regionID","scroll","templateDomId","DEFAULT_TREE_TEMPLATE_ID","allowHyperlinks","escapeHyperlinks","stateObject","sortNodes","sorters","sortByOrder","sortByName","selectedNodes","TREE_NN_ITEMS_SELECTED","_createFromTemplate","refreshStyle","_registerEvents","_registerCustomScroll","getNextId","getActiveTree","getTreeNode","nodeID","getStorageVal","name","JSON","parse","window","localStorage","getItem","setStorageVal","value","tree","setItem","stringify","e","console","log","_templateHash","addVar","addMethod","_element","jQuery","_getElement","insert","after","_getTemplateElement","remove","update","scrollBar","up","layoutModule","identify","rootNode","treeId","element","templateClassName","className","addClass","removeClass","HIDE_ROOT_CLASS_NAME","_prevSelectedNodes","clone","evt","concat","i","length","node","push","splice","len","parentNode","resortChilds","childs","resortSubtree","states","key","state","TreeNode","State","CLOSED","newstate","obj","node1","node2","k","readStates","stopWaiting","treeContainer","writeStates","OPEN","showNode","render","refreshScroll","delay","setTimeout","refresh","bind","low","high","mid","Math","round","midNode","comparer","event","resetSelected","fireUnSelectAllEvent","ctrlHeld","shiftHeld","isContextMenuBtn","min","max","parent","shouldFocus","isContextMenu","isSelected","isDeselect","isEdit","isDoEndEdit","isDeselectAll","isRangeSelect","isNotNullORUndefined","_lastSelectedNode","isRangeReduce","isSelect","deselect","_deselectAllNodes","doEndEdit","start","indexOf","end","select","j","nofocus","edit","findAll","n","invoke","nextNode","isOpen","getFirstChild","nextSibling","getNextUncle","currentNode","prevNode","prevSibling","getLastVisibleDescendant","hasChilds","getLastChild","inNode","handleNode","isHiddenRootNode","outNode","order1","orderNumber","order2","n1","toLowerCase","n2","html","document","getElementById","TREE_WAIT_TEMPLATE_DOM_ID","currentElement","attr","getId","templateId","cloneCustomAttributes","DEFAULT_NAME","param","Types","Folder","FOLDER_TYPE_NAME","isloaded","delayedRendering","haschilds","editable","isWaiting","hidden","isDropTarget","keydownSubFocus","cssClassName","getTreeId","getState","type","child","isParent","lastNode","_getChildrenElement","isArray","sort","a","b","count","getChildCount","container","NODE_ID_PREFIX","titleHolder","childElements","cleanWhitespace","title","childNodes","nodeName","createTextNode","appendChild","getElementsByTagName","_childrenElement","SUB_NODE_ID_SUFFIX","newName","_getTitle","data","NODE_CLASS_NAME","LEAF_CLASS_NAME","OPEN_CLASS_NAME","CLOSED_CLASS_NAME","LOADING_CLASS_NAME","SELECTED_CLASS_NAME","cssClass","getType","KEYDOWN_SUB_FOCUS_CLASS_NAME","subElement","children","templH","_getHeaderTemplateElement","tabIndex","treeNode","wrapper","xssUtil","whiteList","tooltip","each","img","index","HANDLER_ID_PREFIX","tip","iconTooltip","templF","_getFooterTemplateElement","_createNode","_createNodeChildren","z","fireOpenEvent","beforeNode","Object","isUndefined","before","_renderChildren","removeNodeFromSelected","fireUnSelectEvent","focus","addNodeToSelected","silent","fireSelectEvent","isIPad","preventScroll","caption","find","first","scrollIntoView","block","inline","eventType","preventDefault","isNodeSelected","oldName","input","_getInputTemplateElement","onclick","cancelEventBubbling","ondblclick","onmousedown","onmouseup","onkeydown","keyEvt","keyCode","onblur","bindAsEventListener","fireStartEditEvent","editEnded","fireEndEditEvent","_getTitleInputElement","newValue","fireEditEvent","rootNodeElement","nodeElement","ch","clientHeight","cw","clientWidth","cst","scrollTop","csl","scrollLeft","nt","cumulativeOffset","top","nl","offsetLeft","nh","nw","refreshNode","nodeHeaderTemplateDomId","nodeFooterTemplateDomId","nodeInputTemplateDomId","isInSelection","Event","getTreeNodeByElement","readAttribute","listItem","matchMeOrUp","hasClass","_cleanUpListeners","_registerClickEvents","_registerCustomEvents","_registerKeyEvents","_registerMouseEvents","stopObserving","isSupportsTouch","observe","getTreeNodeByEvent","isNode","isNodeEvent","isLeaf","isLeafEvent","fire","targetEvent","isIcon","isIconEvent","treeEvent","JRS","alert","twofingers","touches","_selectOrEditNode","isMetaHeld","isShiftHeld","isRightClick","designerBase","li","parents","isMouseClick","memo","isEmulatedRightClick","clickid","timeStamp","clicktime","TouchController","changedTouches","_deselectOthers","el","createDraggableIfNeeded","isIE7","Droppables","accept","onDrop","dragging","elementDropped","enterOrSpaceHandler","$el","isElFoldersTree","target","closest","body","style","cursor","_expandOrCollapse","_selectFirstVisibleNode","_selectLastVisibleNode","_selectNextNode","_selectPreviousNode","_selectInwards","_selectOutwards","focused","newVal","eventName","handler","thisElem","isCreated","draggables","matchingElem","matchAny","Draggable","superghosting","mouseOffset","isIE","onStart","setDragStartState","onEnd","setDragEndState","draggable","setStyle","width","height","Template","evaluate","scrollSensitivity","Draggables","providerId","hideLoader","rootUri","nodeClass","isFunction","rootObjectModifier","modifyRootObject","resetStatesOnShow","inInit","ajaxBufferId","nodeTextId","urlGetNode","_getFlowUrl","urlGetChildren","urlGetMultipleChildren","urlGetMessage","additionalParams","callback","text","getMessage","_initOpenListener","deepClone","getTreeNodeChildren","methodName","__jrsConfigs__","depth","userCallbackFn","errorCallbackFn","forceHtmlEscape","url","_evaluateAdditionalParams","_showTree","params","_","call","toQueryString","prefetchedListStr","encodeURIComponent","self","wait","uc","ec","showTreeCallback","ajaxTargettedUpdate","fillLocation","errorHandler","rc","httpErrorHandler","apply","arguments","baseErrorHandler","div","rootObj","evalJSON","processNode","resortTree","resetStates","renderTree","fireTreeLoadedEvent","fireServerErrorEvent","metaNode","uri","extra","localRoot","NodeClassFn","unescapeBackslash","label","order","setHasChilds","chNodeObj","chTreeNode","addChild","ni","getTreeNodeChildrenCallback","ajaxAgent","status","getResponseHeader","parentNodeId","ns","resetChilds","tmpSortNodes","fireChildrenLoadedEvent","parentNodes","ids","getTreeMultipleNodesChildrenCallback","postData","parentNodeIds","setMultipleNodesChilden","fireMultipleChildrenLoadedEvent","nodeHolders","noRender","nn","nodeHolder","pn","tempnode","parentUri","disableSorting","prefetch","ds","nr","getTreeNodeChildrenPrefetchedCallback","fireChildredPrefetchedLoadedEvent","uriStr","fnAction","findFirstChild","fn","processNodePath","selectedNode","getSelectedNode","getRootNode","fnForNode","path","split","oldNode","findNodeChildByMetaName","findNodeFirstNodeChildByAlphabeticalOrder","holder","firstchildName","firstchildIndex","tempChildName","tempChildIndex","loopCount","loopIndex","charCodeAt","nodeId","startNode","_findNodeById","keyNode","found","grandchildren","messageId","getMessageCallback","divEl","trim","metaNodes","SuperRoot","Root","isActiveThemeFolder","ACTIVE_THEME_CLASS","orgMode","organizationId","publicFolderUri","isChildrenCallback","updatedRootObj","publicFolder","newCh","isSuperRoot","isPublic","publicNode","scrollElement","touchController","absolute"],"mappings":"sHAgHYA,E,gEAlFRC,EAAc,CAKdC,MAAO,GAKPC,MAAO,GAIPC,eAAgB,KAIhBC,aAAa,EAIbC,aAAc,KAoBdC,KAAM,SAAUC,EAAIC,GAChBC,KAAKF,GAAKA,EACNC,GACAC,KAAKC,YAAYF,EAAQG,MACzBF,KAAKG,YAAcJ,EAAQI,UAC3BH,KAAKI,0BAAwDC,IAAjCN,EAAQK,sBAAqCL,EAAQK,qBACjFJ,KAAKM,qBAAuBP,EAAQO,mBACpCN,KAAKO,wBAA0BR,EAAQQ,sBACvCP,KAAKQ,cAAgBT,EAAQS,cAAgBT,EAAQS,cAAgB,GACrER,KAAKS,YAAcV,EAAQU,YAC3BT,KAAKU,YAAcX,EAAQW,YAC3BV,KAAKW,YAAcZ,EAAQY,YAC3BX,KAAKY,kBAAoBb,EAAQa,kBACjCZ,KAAKa,SAAWd,EAAQc,SACxBb,KAAKc,OAASf,EAAQe,OACtBd,KAAKe,cAAgBhB,EAAQgB,cAAgBhB,EAAQgB,cAAgBf,KAAKgB,yBAC1EhB,KAAKiB,iBAAmBlB,EAAQmB,mBAEhClB,KAAKe,cAAgBf,KAAKgB,yBAC1BhB,KAAKI,sBAAuB,GAEhCJ,KAAKmB,YAAc,GACnBnB,KAAKoB,WAAY,EACjBpB,KAAKqB,QAAU,CACXrB,KAAKsB,YACLtB,KAAKuB,YAETvB,KAAKwB,cAAgB,GACrBxB,KAAKyB,uBAAyB,0BAE9BlC,EAAYC,MAAMQ,KAAKF,IAAME,KAC7BA,KAAK0B,sBACL1B,KAAK2B,eACL3B,KAAK4B,kBACL5B,KAAK6B,yBAKTC,WACQxC,EAAS,EAEN,WACH,OAAOA,MAMfyC,cAAe,WACX,OAAOxC,EAAYC,MAAMD,EAAYK,eAOzCoC,YAAa,SAAUC,GACnB,OAAO1C,EAAYE,MAAMwC,IAO7BC,cAAe,SAAUC,GAErB,OADWC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,iBAAmB,IACzDL,IAAS,MAQzBM,cAAe,SAAUN,EAAMO,GAC3B,IAAIH,EAAeD,OAAOC,aACtBI,EAAOP,KAAKC,MAAME,EAAaC,QAAQ,iBAAmB,GAC9DG,EAAKR,GAAQO,EACb,IACIH,EAAaK,QAAQ,cAAeR,KAAKS,UAAUF,IACrD,MAAOG,GAGLR,OAAOS,SAAWA,QAAQC,IAAIF,KAGtCG,cAAe,IAOnB1D,EAAYM,KAAKqD,OAAO,2BAA4B,+BAMpD3D,EAAYM,KAAKqD,OAAO,uBAAwB,YAMhD3D,EAAYM,KAAKsD,UAAU,SAAS,WAChC,OAAOnD,KAAKF,MAOhBP,EAAYM,KAAKsD,UAAU,eAAe,WAItC,OAHKnD,KAAKoD,WACNpD,KAAKoD,SAAWC,IAAO,IAAMrD,KAAKF,IAAI,IAEnCE,KAAKoD,YAOhB7D,EAAYM,KAAKsD,UAAU,uBAAuB,WAC1CnD,KAAKsD,gBACLtD,KAAKsD,cAAcC,OAAO,CAAEC,MAAOxD,KAAKyD,oBAAoBzD,KAAKsD,iBACjEtD,KAAKsD,cAAcI,SACnB1D,KAAKoD,SAAW,KAChBpD,KAAKsD,eAAiBtD,KAAKsD,cAAcK,aAQjDpE,EAAYM,KAAKsD,UAAU,yBAAyB,WAChD,IAAKnD,KAAKc,QAAUd,KAAKsD,cAAe,CACpC,IAAIM,EAAY5D,KAAKsD,cAAcO,GAAGC,0BACtC,GAAIF,EAAW,CACX,IAAI9C,EAASgD,gBAAyBF,EAAUG,YAChDjD,IAAWd,KAAKc,OAASA,QAsBrCvB,EAAYM,KAAKsD,UAAU,eAAe,SAAUa,GAChDhE,KAAKgE,SAAWA,EACZhE,KAAKgE,WACLhE,KAAKgE,SAASC,OAASjE,KAAKF,OAQpCP,EAAYM,KAAKsD,UAAU,eAAe,WACtC,OAAOnD,KAAKgE,YAOhBzE,EAAYM,KAAKsD,UAAU,gBAAgB,WACvC,IAAIe,EAAUlE,KAAKsD,cACfY,EAAQC,oBACRD,EAAQE,UAAYF,EAAQC,mBAEhCnE,KAAKQ,eAAiB6C,IAAOa,GAASG,SAASrE,KAAKQ,eAChDR,KAAKG,UACLkD,IAAOa,GAASI,YAAYtE,KAAKuE,sBAEjClB,IAAOa,GAASG,SAASrE,KAAKuE,yBAQtChF,EAAYM,KAAKsD,UAAU,iBAAiB,WACxCnD,KAAKwE,mBAAqBxE,KAAKwB,cAAciD,QAC7CzE,KAAKwB,cAAgB,MAEzBjC,EAAYM,KAAKsD,UAAU,mBAAmB,SAAUuB,GAEpD,IAAIjF,EAAQO,KAAKwE,mBAAmBC,QACpChF,EAAQA,EAAMkF,OAAO3E,KAAKwB,eAC1BxB,KAAKwB,cAAgBxB,KAAKwE,mBAAmBC,QAC7C,IAAK,IAAIG,EAAI,EAAGA,EAAInF,EAAMoF,OAAQD,IAC9BnF,EAAMmF,GAAGjD,kBAQjBpC,EAAYM,KAAKsD,UAAU,mBAAmB,WAC1C,OAAqC,IAA9BnD,KAAKwB,cAAcqD,OAAe,KAAO7E,KAAKwB,cAAc,MAWvEjC,EAAYM,KAAKsD,UAAU,qBAAqB,SAAU2B,GACtD9E,KAAKwB,cAAcuD,KAAKD,GACxB9E,KAAKwE,mBAAqBxE,KAAKwB,cAAciD,WAWjDlF,EAAYM,KAAKsD,UAAU,0BAA0B,SAAU2B,GAC3D,IAAK,IAAIF,EAAI,EAAGA,EAAI5E,KAAKwB,cAAcqD,OAAQD,IAC3C,GAAI5E,KAAKwB,cAAcoD,IAAME,EAGzB,OAFA9E,KAAKwE,mBAAqBxE,KAAKwB,cAAciD,aAC7CzE,KAAKwB,cAAcwD,OAAOJ,EAAG,MAczCrF,EAAYM,KAAKsD,UAAU,kBAAkB,SAAU2B,GACnD,IAAIG,EAAMjF,KAAKwB,eAAiBxB,KAAKwB,cAAcqD,OACnD,GAAII,EACA,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAKL,IACrB,GAAI5E,KAAKwB,cAAcoD,IAAME,EACzB,OAAO,EAInB,OAAO,KAWXvF,EAAYM,KAAKsD,UAAU,iBAAiB,SAAU+B,GAClD,GAAIA,EAAY,CACZA,EAAWC,eACX,IAAK,IAAIP,EAAI,EAAGA,EAAIM,EAAWE,OAAOP,OAAQD,IAC1C5E,KAAKqF,cAAcH,EAAWE,OAAOR,QASjDrF,EAAYM,KAAKsD,UAAU,cAAc,WACjCnD,KAAKoB,WACLpB,KAAKqF,cAAcrF,KAAKgE,aAQhCzE,EAAYM,KAAKsD,UAAU,cAAc,WACrC,IAAImC,EAAS/F,EAAY2C,cAAc,OAASlC,KAAKF,IACrD,GAAIwF,EACA,IAAK,IAAIC,KAAOD,EACZtF,KAAKmB,YAAYoE,GAAOD,EAAOC,MAa3ChG,EAAYM,KAAKsD,UAAU,YAAY,SAAUlB,GAC7C,IAAIuD,EACArE,EAAcnB,KAAKmB,YACvB,OAAIA,EAAYc,IAEE,QADduD,EAAQrE,EAAYc,KACY,KAAVuD,IAClBA,EAAQjG,EAAYkG,SAASC,MAAMC,QAEhCH,GAEJjG,EAAYkG,SAASC,MAAMC,UAatCpG,EAAYM,KAAKsD,UAAU,eAAe,SAAUlB,EAAQ2D,GACxD,IAAIC,EAAM,GACN1E,EAAcnB,KAAKmB,YACvB,IAAK,IAAIoE,KAAOpE,EACZ0E,EAAIN,GAAOpE,EAAYoE,GAE3BpE,EAAYc,GAAU2D,EACN,MAAZA,IACAC,EAAI5D,GAAU2D,GAElBrG,EAAYkD,cAAc,OAASzC,KAAKF,GAAI+F,MAOhDtG,EAAYM,KAAKsD,UAAU,eAAe,WACtCnD,KAAKmB,YAAc,GACnB5B,EAAYkD,cAAc,OAASzC,KAAKF,GAAI,OAehDP,EAAYM,KAAKsD,UAAU,YAAY,SAAU2C,EAAOC,GACpD,IAAInB,EAAGoB,EACP,GAAIhG,KAAKqB,SAAWrB,KAAKqB,QAAQwD,OAC7B,IAAKD,EAAI,EAAGA,EAAI5E,KAAKqB,QAAQwD,OAAQD,IAEjC,GAAU,KADVoB,EAAIhG,KAAKqB,QAAQuD,GAAGkB,EAAOC,IAEvB,OAAOC,EAInB,OAAO,KAOXzG,EAAYM,KAAKsD,UAAU,cAAc,WACrCnD,KAAKiG,aACLjG,KAAKkG,cACLlG,KAAK2B,eAEL,IAAIwE,EAAgBnG,KAAKsD,cACrBtD,KAAKgE,WACLhE,KAAKoG,YAAYpG,KAAKgE,SAASlE,GAAIP,EAAYkG,SAASC,MAAMW,MAC9DrG,KAAKgE,SAASsC,WACdtG,KAAKgE,SAASuC,OAAOJ,GACrBnG,KAAKwG,oBAKbjH,EAAYM,KAAKsD,UAAU,iBAAiB,SAAUsD,GAC9CA,EACAC,WAAW,WACP1G,KAAKc,QAAUd,KAAKc,OAAO6F,WAC7BC,KAAK5G,MAAOyG,GAEdzG,KAAKc,QAAUd,KAAKc,OAAO6F,aAQnCpH,EAAYM,KAAKsD,UAAU,sBAAsB,SAAU1D,EAAOqF,GAG9D,IAFA,IAAI+B,EAAM,EACNC,EAAOrH,EAAMoF,OAAS,EACnBgC,GAAOC,GAAM,CAChB,IAAIC,EAAMC,KAAKC,OAAOJ,EAAMC,GAAQ,GAChCI,EAAUzH,EAAMsH,GACpB,GAAI/G,KAAKmH,SAASD,EAASpC,GAAQ,EAC/B+B,EAAME,EAAM,MACT,MAAI/G,KAAKmH,SAASD,EAASpC,GAAQ,GAGtC,OAAOiC,EAFPD,EAAOC,EAAM,GAKrB,QAASF,EAAM,MAOnBtH,EAAYM,KAAKsD,UAAU,qBAAqB,SAAUiE,GACtD,GAAIpH,KAAKwB,cAAcqD,OAAS,EAAG,CAC/B,IAAIpF,EAAQO,KAAKwB,cAAciD,QAC/BzE,KAAKqH,gBACL,IAAK,IAAIzC,EAAI,EAAGA,EAAInF,EAAMoF,OAAQD,IAC9BnF,EAAMmF,GAAGjD,eAEb,GAAIyF,EACW7H,EAAYC,MAAMQ,KAAKF,IAC7BwH,qBAAqBF,OAItC7H,EAAYM,KAAKsD,UAAU,qBAAqB,SAAUuB,EAAKI,EAAMyC,EAAUC,EAAWC,EAAkB1H,GACxG,IAAI2H,EAAKC,EAAKC,EACVC,EAAc9H,GAAWA,EAAQ8H,YACjCC,EAAgBhD,EAAKiD,cAAgBN,EACrCO,EAAahI,KAAKM,oBAAsBwE,EAAKiD,cAAgBR,IAAaO,EAC1EG,EAASnD,EAAKiD,cAAgBxI,EAAYG,iBAAmBoF,IAAS9E,KAAKM,qBAAuBiH,IAAaO,EAC/GI,EAA4C,MAA9B3I,EAAYG,iBAA2ByI,GAAiBH,GACtEI,EAAgBpI,KAAKM,qBAAuBwE,EAAKiD,cAAgBP,IAAaa,SAAqBrI,KAAKsI,oBAAsBtI,KAAKsI,kBAAkBV,SAAW9C,EAAK8C,OACrKW,EAAgBvI,KAAKM,oBAAsBwE,EAAKiD,cAAgBP,IAAaa,SAAqBrI,KAAKsI,oBAAsBtI,KAAKsI,kBAAkBV,SAAW9C,EAAK8C,OACpKO,GAAiBnI,KAAKM,qBAAuBwE,EAAKiD,cAAgB/H,KAAKM,qBAAuBiH,IAAazC,EAAKiD,aAChHS,GAAY1D,EAAKiD,cAAgBI,GAAiBnI,KAAKwB,cAAcqD,OAAS,GAAKgD,EAWvF,GATKL,GAAcxH,KAAKsI,oBACpBtI,KAAKsI,kBAAoBxD,GAEzBkD,GACAlD,EAAK2D,SAAS/D,GAEdyD,GACAnI,KAAK0I,kBAAkBhE,IAEvBuD,GAAWJ,EAAf,CAOA,GAHIK,GACA3I,EAAYG,eAAeiJ,UAAUjE,GAErC0D,GAAiBG,EAAe,CAEhC,IAAIK,GADJhB,EAAS9C,EAAK8C,QACKxC,OAAOyD,QAAQ7I,KAAKsI,mBACnCQ,EAAMlB,EAAOxC,OAAOyD,QAAQ/D,GAChC4C,EAAMV,KAAKU,IAAIkB,EAAOE,GACtBnB,EAAMX,KAAKW,IAAIiB,EAAOE,GAE1B,GAAIV,EACA,GAAIV,GAAO,EACP,IAAK,IAAI9C,EAAI8C,EAAK9C,GAAK+C,EAAK/C,IACxBgD,EAAOxC,OAAOR,GAAGmE,OAAOrE,QAG5BkD,EAAOxC,OAAOuC,GAAKoB,OAAOrE,QAIlC,GAAI6D,EAAJ,CACI,IAAK,IAAIS,EAAI,EAAGA,EAAItB,EAAKsB,IACrBpB,EAAOxC,OAAO4D,GAAGP,SAAS/D,GAE9B,IAAK,IAAIsB,EAAI2B,EAAM,EAAG3B,EAAI4B,EAAOxC,OAAOP,OAAQmB,IAC5C4B,EAAOxC,OAAOY,GAAGyC,SAAS/D,QAI9B8D,GACA1D,EAAKiE,OAAOrE,EAAKI,EAAKmE,QAASlJ,QAjC/B+E,EAAKoE,KAAKxE,MAoClBnF,EAAYM,KAAKsD,UAAU,mBAAmB,SAAUuB,EAAKI,EAAMyC,EAAUC,EAAWC,GAC9DzH,KAAKM,oBAAsBN,KAAKwB,cAAcqD,OAAS,GAAKC,EAAKiD,gBAAkBR,GAAYC,GAAaC,IAC/GzH,KAAKwB,cAAc2H,QAAQ,SAAUC,GACpD,OAAOA,GAAKtE,GACd8B,KAAK5G,OAAOqJ,OAAO,WAAY3E,MASrCnF,EAAYM,KAAKsD,UAAU,mBAAmB,SAAU2B,EAAMsC,GAW1D,IAAIkC,EAAWxE,EAAKyE,UAAYzE,EAAK0E,iBAAmB1E,EAAK2E,aAT7D,SAASC,EAAaC,GAElB,OADAA,EAAcA,EAAY/B,QAGf+B,EAAYF,YACZE,EAAYF,YAEhBC,EAAaC,GAJT,KAM6DD,CAAa5E,GACzFwE,GAAaxE,EAAK2D,YAAca,EAASP,OAAO3B,EAAO,KAAM,CAAES,aAAa,OAShFtI,EAAYM,KAAKsD,UAAU,uBAAuB,SAAU2B,EAAMsC,GAI9D,IAAIwC,EAAW9E,EAAK+E,aAHpB,SAASC,EAAyBH,GAC9B,QAASA,EAAYJ,UAAYI,EAAYI,cAAgBJ,GAAeG,EAAyBH,EAAYK,gBAElFF,CAAyBhF,EAAK+E,cAAgB/E,EAAK8C,OACtFgC,GAAYA,EAASzH,MAAS2C,EAAK2D,YAAcmB,EAASb,OAAO3B,EAAO,KAAM,CAAES,aAAa,OASjGtI,EAAYM,KAAKsD,UAAU,kBAAkB,SAAU2B,EAAMsC,GACzD,GAAItC,EAAKyE,SAAU,CACf,IAAIU,EAASnF,EAAK0E,gBAClBS,GAAUnF,EAAK2D,YAAcwB,EAAOlB,OAAO3B,EAAO,KAAM,CAAES,aAAa,SAEvE/C,EAAKoF,WAAW9C,MAUxB7H,EAAYM,KAAKsD,UAAU,mBAAmB,SAAU2B,EAAMsC,GAC1D,IAAKtC,EAAKqF,mBACN,GAAIrF,EAAKyE,SACLzE,EAAKoF,WAAW9C,OACb,CACH,IAAIgD,EAAUtF,EAAK8C,OACnBwC,GAAWA,EAAQjI,MAAQ2C,EAAK2D,YAAc2B,EAAQrB,OAAO3B,EAAO,KAAM,CAAES,aAAa,QAKrGtI,EAAYM,KAAKsD,UAAU,qBAAqB,SAAU2B,EAAMsC,GAC5DtC,EAAKoF,WAAW9C,MAGpB7H,EAAYM,KAAKsD,UAAU,2BAA2B,SAAU2B,EAAMsC,GAElE,IADAtC,EAAK2D,WACE3D,EAAK8C,QACR9C,EAAOA,EAAK8C,OAEX9C,EAAK3C,OACN2C,EAAOA,EAAKM,OAAO,IAEvBN,EAAKiE,OAAO3B,EAAO,KAAM,CAAES,aAAa,OAG5CtI,EAAYM,KAAKsD,UAAU,0BAA0B,SAAU2B,EAAMsC,GAEjE,IADAtC,EAAK2D,WACE3D,EAAK8C,QACR9C,EAAOA,EAAK8C,OAGhB,KAAO9C,EAAKyE,UAAYzE,EAAKM,OAAOP,OAAS,GACzCC,EAAOA,EAAKM,OAAON,EAAKM,OAAOP,OAAS,GAE5CC,EAAKiE,OAAO3B,EAAO,KAAM,CAAES,aAAa,OAqB5CtI,EAAYM,KAAKsD,UAAU,eAAe,SAAU2C,EAAOC,GACvD,IAAIsE,EAASvE,EAAMwE,YACfC,EAASxE,EAAMuE,YACnB,OAAc,MAAVD,GAA4B,MAAVE,EACX,EAEG,MAAVF,EACO,EAEG,MAAVE,GACQ,EAELF,EAASE,KAapBhL,EAAYM,KAAKsD,UAAU,cAAc,SAAU2C,EAAOC,GACtD,IAAIyE,EAAK1E,EAAM3D,KAAKsI,cAChBC,EAAK3E,EAAM5D,KAAKsI,cACpB,OAAOD,EAAKE,EAAK,EAAIF,EAAKE,GAAM,EAAI,KAOxCnL,EAAYM,KAAKqD,OAAO,4BAA6B,uCAMrD3D,EAAYM,KAAKsD,UAAU,QAAQ,WAC/BE,IAAO,IAAMrD,KAAKF,IAAI6K,KAAKC,SAASC,eAAe7K,KAAK8K,2BAA2BrG,OAAM,IAAO,MAOpGlF,EAAYM,KAAKsD,UAAU,eAAe,WACtCE,IAAO,IAAMrD,KAAKF,IAAI6K,KAAK,IAAI,MAEnCpL,EAAYM,KAAKsD,UAAU,uBAAuB,SAAU4H,GACxD,IAAIjL,EAAKE,KAAKe,cAcV0D,EAAQmG,SAASC,eAAe/K,GAAI2E,OAAM,GAK9C,OAJApB,IAAOoB,GAAOuG,KAAK,KAAMhL,KAAKiL,SAC9BxG,EAAMyG,WAAapL,EACnB2E,EAAMN,kBAAoBM,EAAML,WAChC+G,SAAsBJ,EAAgBtG,GAC/BA,KAGX,U,eCvuBAlF,WAAuB,SAAUQ,GAC7BC,KAAKF,GAAKP,cACVS,KAAKiE,OAAS,KAEdjE,KAAKmC,KAAuB,MAAhBpC,EAAQoC,KAAepC,EAAQoC,KAAOnC,KAAKoL,aACvDpL,KAAKqL,MAAyB,MAAjBtL,EAAQsL,MAAgBtL,EAAQsL,MAAQ,GACrDrL,KAAKsK,YAAqC,MAAvBvK,EAAQuK,YAAsBvK,EAAQuK,YAAc,KACvEtK,KAAKoF,OAAS,GACdpF,KAAK4H,OAAS,KAId5H,KAAKsL,MAAQ,CAAEC,OAAQ,IAAIhM,gBAA0BS,KAAKwL,mBAC1DxL,KAAKyL,UAAW,EAChBzL,KAAK0L,kBAAmB,EACxB1L,KAAK2L,WAAY,EACjB3L,KAAK4L,UAAW,EAChB5L,KAAK6L,WAAY,EACjB7L,KAAK8L,QAAS,EACd9L,KAAK+L,cAAe,EACpB/L,KAAKgM,iBAAkB,EAEvBzM,QAAkBS,KAAKF,IAAME,MAajCT,gBAA4B,SAAU4C,EAAMpC,GACxCC,KAAKmC,KAAOA,EACRpC,IACAC,KAAKiM,aAAelM,EAAQkM,aAC5BjM,KAAKe,cAAgBhB,EAAQgB,gBAQrCxB,iBAA6B,CACzB8G,KAAM,OACNV,OAAQ,UAEZpG,kBAA4B,mBAAoB,iEAChDA,kBAA4B,eAAgB,cAC5CA,kBAA4B,iBAAkB,QAC9CA,kBAA4B,qBAAsB,OAClDA,kBAA4B,oBAAqB,WACjDA,kBAA4B,kBAAmB,QAAQ2D,OAAO,kBAAmB,QAAQA,OAAO,kBAAmB,QAAQA,OAAO,oBAAqB,UAAUA,OAAO,sBAAuB,YAAYA,OAAO,qBAAsB,WAAWA,OAAO,mBAAoB,SAASA,OAAO,+BAAgC,iBAM9T3D,kBAA4B,0BAA2B,oCACvDA,kBAA4B,0BAA2B,+BACvDA,kBAA4B,yBAA0B,qCAEtDA,kBAA4B,gBAAgB,GAU5CA,qBAA+B,aAAa,WACxC,OAAOS,KAAKiE,QAAUjE,KAAK4H,QAAU5H,KAAK4H,OAAOsE,eAarD3M,qBAA+B,YAAY,WACvC,OAAOA,QAAkBS,KAAKkM,aAAaC,SAASnM,KAAKF,OAO7DP,qBAA+B,YAAY,WACvC,OAAOS,KAAKqL,MAAMe,MAAQpM,KAAKsL,MAAMC,OAAOpJ,QAWhD5C,qBAA+B,YAAY,SAAU8M,GACjD,GAAKrM,KAAKsM,WAAV,CAGA,IAAIC,EAAWvM,KAAKoF,OAAOpF,KAAKoF,OAAOP,OAAS,GAC5C0H,IACAA,EAAS9C,YAAc4C,EACvBA,EAAMxC,YAAc0C,GAExBvM,KAAKoF,OAAOL,KAAKsH,GACjBA,EAAMzE,OAAS5H,KACfA,KAAKmF,eACDnF,KAAK0L,mBAGTW,EAAM/F,WACN+F,EAAM9F,OAAOvG,KAAKwM,sBAAuBH,EAAM5C,kBAWnDlK,qBAA+B,eAAe,SAAU8M,GACpD,IAAK,IAAIzH,EAAI,EAAGA,EAAI5E,KAAKoF,OAAOP,OAAQD,IACpC,GAAI5E,KAAKoF,OAAOR,IAAMyH,EAAO,CACzBrM,KAAKoF,OAAOJ,OAAOJ,EAAG,GACtB,MAIR,GADAyH,EAAM5D,YACFzI,KAAK0L,iBAAT,CAGA,IAAIxH,EAAUmI,EAAM/I,cAChBY,GACAA,EAAQR,aAQhBnE,qBAA+B,gBAAgB,WAC3C,IAAI0E,EAASjE,KAAKkM,YACdvJ,EAAOpD,QAAkB0E,GAC7B,GAAItB,GAAQA,EAAKvB,YAAaqL,SAAQzM,KAAKoF,QAAS,CAChDpF,KAAKoF,OAAOsH,MAAK,SAAUC,EAAGC,GAC1B,OAAOjK,EAAKwE,SAASwF,EAAGC,MAG5B,IADA,IAAIC,EAAQ7M,KAAKoF,OAAOP,OACjBgI,KAAS,CACZ,IAAI/H,EAAO9E,KAAKoF,OAAOyH,GACvB/H,EAAK+E,YAAc7J,KAAKoF,OAAOyH,EAAQ,GACvC/H,EAAK2E,YAAczJ,KAAKoF,OAAOyH,EAAQ,QASnDtN,qBAA+B,eAAe,WAC1CS,KAAKoF,OAAS,MAWlB7F,qBAA+B,gBAAgB,SAAUwK,GACrD/J,KAAK2L,UAAY5B,KAWrBxK,qBAA+B,aAAa,WACxC,QAAIS,KAAK2L,WAGF3L,KAAK8M,gBAAkB,KAWlCvN,qBAA+B,iBAAiB,WAC5C,OAAOS,KAAKoF,OAAOP,UAWvBtF,qBAA+B,iBAAiB,WAC5C,OAAIS,KAAK+J,YACE/J,KAAKoF,OAAO,GAEhB,QAWX7F,qBAA+B,gBAAgB,WAC3C,OAAIS,KAAK+J,YACE/J,KAAKoF,OAAOpF,KAAKoF,OAAOP,OAAS,GAErC,QAEXtF,qBAA+B,eAAe,SAAUwN,GAIpD,OAHK/M,KAAKoD,WACNpD,KAAKoD,SAAWC,IAAO,IAAMrD,KAAKgN,eAAiBhN,KAAKF,IAAI,IAEzDE,KAAKoD,YAEhB7D,qBAA+B,aAAa,WACxC,IAAI0N,EAAcjN,KAAKsD,cAAc4J,gBAAgB,GACrDD,EAAYE,kBACZ,IAAIC,EAAQH,EAAYI,WAAWJ,EAAYI,WAAWxI,OAAS,GAKnE,MAJuB,UAAnBuI,EAAME,WACNF,EAAQxC,SAAS2C,eAAe,IAChCN,EAAYO,YAAYJ,IAErBA,KAEX7N,qBAA+B,yBAAyB,WACpD,OAAO8D,IAAOrD,KAAKsD,cAAcmK,qBAAqB,SAAS,IAAI,MAEvElO,qBAA+B,uBAAuB,WAIlD,OAHKS,KAAK0N,mBACN1N,KAAK0N,iBAAmBrK,IAAO,IAAMrD,KAAKgN,eAAiBhN,KAAKF,GAAKE,KAAK2N,oBAAoB,IAE3F3N,KAAK0N,oBAWhBnO,qBAA+B,UAAU,WACrC,OAAOS,KAAKmM,aAAe5M,yBAW/BA,qBAA+B,cAAc,SAAUqO,GACnD5N,KAAKmC,KAAOyL,EACZ5N,KAAK6N,YAAYC,KAAO9N,KAAKmC,QAWjC5C,qBAA+B,WAAW,WACtC,IAAK,IAAI6M,KAAQpM,KAAKsL,MAClB,GAAItL,KAAKqL,MAAMe,OAASpM,KAAKsL,MAAMc,GAAMjK,KACrC,OAAOnC,KAAKsL,MAAMc,MAU9B7M,qBAA+B,gBAAgB,SAAU2E,GAErD,GADAA,EAAUb,IAAOa,GAAS,IAAMlE,KAAKsD,cACrC,CAGIY,EAAQC,oBACRD,EAAQE,UAAYF,EAAQC,mBAE5BnE,KAAKsM,YACLjJ,IAAOa,GAASG,SAASrE,KAAK+N,iBAAiBzJ,YAAYtE,KAAKgO,iBAC3DhO,KAAK6L,YACF7L,KAAKuJ,UACLlG,IAAOa,GAAS8G,KAAK,iBAAiB,GACtC3H,IAAOa,GAASG,SAASrE,KAAKiO,iBAAiB3J,YAAYtE,KAAKkO,qBAEhE7K,IAAOa,GAAS8G,KAAK,iBAAiB,GACtC3H,IAAOa,GAASG,SAASrE,KAAKkO,mBAAmB5J,YAAYtE,KAAKiO,oBAI1E5K,IAAOa,GAASG,SAASrE,KAAKgO,iBAAiB1J,YAAYtE,KAAK+N,iBAEhE/N,KAAK6L,UACLxI,IAAOa,GAASG,SAASrE,KAAKmO,oBAE9B9K,IAAOa,GAASI,YAAYtE,KAAKmO,oBAEjCnO,KAAK+H,aACL1E,IAAOa,GAASG,SAASrE,KAAKoO,qBAE9B/K,IAAOa,GAASI,YAAYtE,KAAKoO,qBAEjCpO,KAAK8L,OACLzI,IAAOa,GAASG,SAASP,kBAEzBT,IAAOa,GAASI,YAAYR,kBAE5B9D,KAAKqL,MAAMgD,UACXhL,IAAOa,GAASG,SAASrE,KAAKqL,MAAMgD,UAExC,IAAIjC,EAAOpM,KAAKsO,UACZlC,GAAQA,EAAKH,cACb5I,IAAOa,GAASG,SAAS+H,EAAKH,cAE9BjM,KAAKgM,iBACL3I,IAAOa,GAASG,SAASrE,KAAKuO,8BAElC,IAAIC,EAAanL,IAAOa,GAASuK,WACjCzO,KAAK+L,cAAgByC,GAAcnL,IAAOmL,GAAYnK,SAASP,wBAC9D9D,KAAK+L,cAAgByC,GAAcnL,IAAOmL,GAAYlK,YAAYR,2BAEvEvE,qBAA+B,eAAe,WAC1C,IAAIO,EAAKE,KAAKF,GACV6C,EAAOpD,QAAkBS,KAAKkM,aAC9BwC,EAAS1O,KAAK2O,4BAClBD,EAAO5O,GAAKE,KAAKgN,eAAiBlN,EAClC4O,EAAOE,UAAY,EACnB5O,KAAK2B,aAAa+M,GAClB1O,KAAKiE,OAAStB,EAAK7C,GAEnB4O,EAAOG,SAAW7O,KAClB,IAAI8O,EAAUJ,EAAOxB,gBAAgB,GAEjCvK,EAAK1B,gBACL6N,EAAQvL,OAAOwL,mBAAuB/O,KAAKmC,KAAM,CAC7C6M,UAAW,CAAC,QAGhBF,EAAQvL,OAAOwL,eAAmB/O,KAAKmC,OAGvB,MAAhBnC,KAAKiP,SAAmBjP,KAAKiP,QAAQpK,OAAS,IAC9CiK,EAAQ1B,MAAQpN,KAAKiP,SAEzBH,EAAQ5B,gBAAgBgC,KAAK,SAAUC,EAAKC,GAC1B,IAAVA,IACAD,EAAIrP,GAAKE,KAAKqP,kBAAoBvP,GAEtC,IAAIwP,EAAMtP,KAAKuP,YACXD,IACAH,EAAI/B,OAAQX,SAAQ6C,GAAOA,EAAIF,GAASE,IAE9C1I,KAAK5G,OACPA,KAAKoD,SAAWsL,KAEpBnP,qBAA+B,uBAAuB,WAClD,IAAIiQ,EAASxP,KAAKyP,4BAClBD,EAAO1P,GAAKE,KAAKgN,eAAiBhN,KAAKF,GAAKE,KAAK2N,mBACjD3N,KAAK0N,iBAAmB8B,KAO5BjQ,qBAA+B,YAAY,SAAUwN,GACjD,IAAIpK,EAAOpD,QAAkBS,KAAKkM,aAElC,IADAlM,KAAK0P,cACD1P,KAAKsM,cACctM,KAAKuJ,UAAY5G,EAAKpC,uBACvB,CACdP,KAAK2P,sBACL,IAAK,IAAIC,EAAI,EAAGA,EAAI5P,KAAK8M,gBAAiB8C,IACtC5P,KAAKoF,OAAOwK,GAAGtJ,SAAStG,KAAKwM,uBAEjCxM,KAAK0L,kBAAmB,EACxB/I,EAAKkN,cAAc7P,MAG3BA,KAAKuG,OAAOwG,MAOhBxN,qBAA+B,UAAU,SAAUwN,EAAW+C,GAC1D,IAAIC,OAAOC,YAAYjD,GAAvB,CAGA,IAAI7I,EAAUb,IAAO0J,GAAW,GAC5B7I,IACIlE,KAAKwM,uBACLxM,KAAKsD,cAAcC,OAAOvD,KAAKwM,uBAE/BsD,EACA5L,EAAQX,OAAOvD,KAAKsD,cAAe,CAAE2M,OAAQH,EAAWxM,gBAExDY,EAAQX,OAAOvD,KAAKsD,oBAIhC/D,qBAA+B,mBAAmB,WAC9C,IAAI2E,EAAUlE,KAAKsD,cACfY,GAAWlE,KAAKwM,uBAChBtI,EAAQX,OAAOvD,KAAKwM,0BAQ5BjN,qBAA+B,eAAe,WAE1C,GADAS,KAAK2B,eACD3B,KAAKsM,YAActM,KAAKuJ,UAAYvJ,KAAKyL,SAAU,CAC/CzL,KAAK0L,kBACL1L,KAAK2P,sBACL3P,KAAKkQ,mBAELlQ,KAAKwM,sBAAsB7I,OAAO,IAEtC,IAAK,IAAIiM,EAAI,EAAGA,EAAI5P,KAAK8M,gBAAiB8C,IACtC5P,KAAKoF,OAAOwK,GAAGtJ,SAAStG,KAAKwM,uBAEjCxM,KAAK0L,kBAAmB,EAEjBnM,QAAkBS,KAAKkM,aAC7B1F,mBAOTjH,qBAA+B,QAAQ,WACnCS,KAAK6L,WAAY,EACjB7L,KAAK2B,kBAOTpC,qBAA+B,eAAe,WAC1CS,KAAK6L,WAAY,EACjB7L,KAAK2B,kBAWTpC,qBAA+B,oBAAoB,WAC/C,IAAIoD,EAAOpD,QAAkBS,KAAKkM,aAClC,OAAOvJ,EAAKqB,UAAYhE,OAAS2C,EAAKxC,aAW1CZ,qBAA+B,YAAY,SAAU6H,GACjD,IAAIzE,EAAOpD,QAAkBS,KAAKkM,aAClC,SAAIvJ,IAAQ3C,KAAK+H,gBACbpF,EAAKwN,uBAAuBnQ,MAC5BA,KAAK2B,eACDyF,GACAzE,EAAKyN,kBAAkBpQ,KAAMoH,IAE1B,MAcf7H,qBAA+B,UAAU,SAAU6H,EAAOiJ,EAAOtQ,GAI7D,IAHAA,EAAUA,GAAW,IACb8H,cAAgBwI,GAASrQ,KAAKqQ,MAAMjJ,GAEvCpH,KAAK+H,aAON,OAAO,EANP,IAAIpF,EAAOpD,QAAkBS,KAAKkM,aAIlC,OAHAvJ,EAAK2N,kBAAkBtQ,MACvBA,KAAK2B,gBACJ5B,EAAQwQ,QAAU5N,EAAK6N,gBAAgBxQ,KAAMoH,IACvC,KAUf7H,qBAA+B,SAAS,SAAU6H,GAC9C,KAAKqJ,YAAYzQ,KAAKsD,cAAe,CACjCtD,KAAKsD,cAAc+M,MAAM,CAACK,eAAe,IACzC,IAAIC,EAAUtN,IAAOrD,KAAKsD,eAAesN,KAAK,SAASC,QAAQ,GAC3DF,GACAA,EAAQG,eAAe,CAACC,MAAO,UAAWC,OAAQ,YAGtD,IAAMC,EAAY7J,GAASA,EAAMgF,KACf,YAAd6E,GACA7J,EAAM8J,iBACNlR,KAAKgM,iBAAkB,GACF,YAAdiF,IACPjR,KAAKgM,iBAAkB,OAanCzM,qBAA+B,cAAc,WACzC,IAAIoD,EAAOpD,QAAkBS,KAAKkM,aAClC,OAAOvJ,GAAQA,EAAKwO,eAAenR,SAEvCT,qBAA+B,gBAAgB,WAC3C,IAAI6N,EAAQpN,KAAK6N,YACjBT,EAAMU,KAAO,GACbzK,IAAO,IAAM+J,EAAMlI,YAAY,GAAGiI,qBAStC5N,qBAA+B,QAAQ,SAAUmF,GAC7C,GAAI1E,KAAK4L,SAAU,CACf,GAAIrM,kBAA8BS,KAC9B,OAEJT,iBAA6BS,KAC7B,IAAIoR,EAAUpR,KAAKmC,KACf8K,EAAc5J,IAAOrD,KAAK6N,YAAY3I,YAAY,GAClDmM,EAAQrR,KAAKsR,2BACjBtR,KAAK6N,YAAYC,KAAO,GACxBb,EAAYE,kBACZF,EAAY1J,OAAO8N,GACnBA,EAAM3O,MAAQqM,aAAiB/O,KAAKmC,MACpCkP,EAAMhB,QACNhN,IAAOgO,GAAOT,KAAKlM,GACnB2M,EAAME,QAAU,SAAUzO,IACtB0O,SAAoB1O,IAExBuO,EAAMI,WAAa,SAAU3O,IACzB0O,SAAoB1O,IAExBuO,EAAMK,YAAc,SAAU5O,IAC1B0O,SAAoB1O,IAExBuO,EAAMM,UAAY,SAAU7O,IACxB0O,SAAoB1O,IAExBuO,EAAMO,UAAY,SAAUC,GACxB,IAAI/O,EAAIR,OAAO8E,MAAQ9E,OAAO8E,MAAQyK,EACrB,IAAb/O,EAAEgP,SACFT,EAAMU,OAAS,KACf/R,KAAK2I,UAAU7F,IACK,IAAbA,EAAEgP,UACTT,EAAMU,OAAS,KACfV,EAAM3O,MAAQ0O,EACdpR,KAAK2I,UAAU7F,KAErBkP,oBAAoBhS,MACtBqR,EAAMU,OAAS,SAAU3K,GACrBpH,KAAK2I,UAAUvB,IACjB4K,oBAAoBhS,MACtBT,QAAkBS,KAAKkM,aAAa+F,mBAAmBjS,KAAMqR,OAQrE9R,qBAA+B,aAAa,SAAUmF,GAClD1E,KAAKkS,YACL3S,QAAkBS,KAAKkM,aAAaiG,iBAAiBnS,SAOzDT,qBAA+B,aAAa,WACxC,IAAIoD,EAAOpD,QAAkBS,KAAKkM,aAClC,GAAkC,MAA9B3M,iBAAoC,CACpC,IAAI8R,EAAQrR,KAAKoS,wBACbC,EAAWhB,EAAM3O,MACrB,GAAI2P,GAAY9S,sBAIZ,OAHA8R,EAAM3N,SACN1D,KAAK6N,YAAYC,KAAOvO,2BACxBA,iBAA6B,MAGjCoD,EAAK2P,cAAc/S,iBAA4B8S,GAC1C9S,gBACDA,sBAAkC8S,EAClChB,EAAM3N,SACN1D,KAAK6N,YAAYC,KAAOuE,GAE5B9S,iBAA6B,SAQrCA,qBAA+B,UAAU,SAAU2E,GAC/C,IAAIqO,EAAkBhT,QAAkBS,KAAKkM,aAAalI,SAASV,cAC/DyJ,EAAY7I,EAAUb,IAAOa,GAAS,GAAKb,IAAOkP,EAAgBrN,YAAY,GAC9EsN,EAAcxS,KAAKsD,cACvB,GAAIyJ,EAAW,CACX,IAAI0F,EAAK1F,EAAU2F,aACfC,EAAK5F,EAAU6F,YACfC,EAAM9F,EAAU+F,UAChBC,EAAMhG,EAAUiG,WAChBC,EAAKT,EAAYU,mBAAmBC,IAAMpG,EAAUmG,mBAAmBC,IACvEC,EAAKZ,EAAYa,WACjBC,EAAKd,EAAYE,aACjBa,EAAKf,EAAYI,aACjBK,EAAKJ,EAAMJ,GAGJQ,EAAKK,EAAKT,KADjB9F,EAAU+F,UAAYG,GAAMR,EAAK,EAAIa,EAAK,IAK1CF,EAAKL,EAAMJ,EAEX5F,EAAUiG,WAAaI,GAAMT,EAAK,EAAIY,EAAK,GACpCH,EAAKG,EAAKR,IAEjBhG,EAAU+F,UAAYM,GAAMT,EAAK,EAAIY,EAAK,QAStDhU,qBAA+B,cAAc,SAAU6H,GACnD,GAAKpH,KAAKsM,WAAV,CAIA,IAAI3J,EAAOpD,QAAkBS,KAAKkM,aAC9BlM,KAAKuJ,SACL5G,EAAKyD,YAAYpG,KAAKF,GAAIP,0BAE1BoD,EAAKyD,YAAYpG,KAAKF,GAAIP,uBAC1BoD,EAAKkN,cAAc7P,KAAMoH,IAEzBA,GAAwB,YAAfA,EAAMgF,OACfpM,KAAKgM,iBAAkB,GAE3BhM,KAAKwT,kBAETjU,qBAA+B,YAAY,SAAU6H,GACjD,GAAKpH,KAAKsM,WAAV,CAIA,IAAI3J,EAAOpD,QAAkBS,KAAKkM,aAC7BlM,KAAKuJ,WACN5G,EAAKyD,YAAYpG,KAAKF,GAAIP,uBAC1BoD,EAAKkN,cAAc7P,KAAMoH,IAE7BpH,KAAKwT,kBAETjU,qBAA+B,6BAA6B,WACxD,IAAI6M,EAAOpM,KAAKsO,UACZxO,EAAKsM,GAAQA,EAAKrL,cAAgBqL,EAAKrL,cAAgBf,KAAKyT,wBA0B5DhP,EAAQmG,SAASC,eAAe/K,GAAI2E,OAAM,GAG9C,OAFAA,EAAMyG,WAAapL,EACnB2E,EAAMN,kBAAoBM,EAAML,UACzBK,KAEXlF,qBAA+B,6BAA6B,WACxD,IAAIO,EAAKE,KAAK0T,wBAcVjP,EAAQmG,SAASC,eAAe/K,GAAI2E,OAAM,GAG9C,OAFAA,EAAMyG,WAAapL,EACnB2E,EAAMd,OAAO,IACNc,KAEXlF,qBAA+B,4BAA4B,WACvD,IAAIO,EAAKE,KAAK2T,uBAcVlP,EAAQmG,SAASC,eAAe/K,GAAI2E,OAAM,GAE9C,OADAA,EAAMyG,WAAapL,EACZ2E,KAGX,UC30BA,GACImP,cAAe,c,0BCyBnBrU,cACW,eAAgB,SACvB2D,OAAO,uBAAwB,iBAC/BA,OAAO,oBAAqB,uBAC5BA,OAAO,uBAAwB,IAEnC3D,cACW,eAAgB,SACvB2D,OAAO,uBAAwB,iBAC/BA,OAAO,oBAAqB,uBAC5BA,OAAO,uBAAwB,IAEnC3D,cAAwB,aAAc,IACtCA,cAAwB,gBAAgB,GAIxCA,iBAA2B,sBAAsB,SAAS6H,GACtD,IAAIlD,EAAU2P,MAAM3P,QAAQkD,GAC5B,OAAOpH,KAAK8T,qBAAqB5P,MAErC3E,iBAA2B,wBAAwB,SAAS2E,GACxD,KAAMA,GAAWA,EAAQ6P,eAAiB1Q,IAAOa,GAAS8G,KAAK,QAAUhL,KAAKF,IAAI,CAC9E,IAAIgF,EAAOZ,EAAQ2K,SACnB,GAAI/J,GAAQA,EAAKoH,cAAgBlM,KAAKiL,QAClC,OAAOnG,EAEPZ,EAAUb,IAAOa,EAAQgB,YAAY,GAG7C,OAAO,QAKX3F,iBAA2B,eAAe,SAAS6H,GAM/C,IAAI4M,GAAWC,SAAY7M,EAAMlD,UAAUgB,WAAW,MACtD,OAAO8O,GAAY3Q,IAAO2Q,GAAUE,SAASpQ,mBAMjDvE,iBAA2B,eAAe,SAAS6H,GAQ/C,IAAI4M,GAAWC,SAAY7M,EAAMlD,UAAUgB,WAAW,MACtD,OAAO8O,GAAY3Q,IAAO2Q,GAAUE,SAASpQ,mBAKjDvE,iBAA2B,eAAe,SAAS6H,GAI/C,OAAO/D,IAAO+D,EAAMlD,WAAWgQ,SAASpQ,mBAK5CvE,iBAA2B,mBAAmB,WAC1CS,KAAKmU,oBACLnU,KAAKoU,uBACLpU,KAAKqU,wBACLrU,KAAKsU,qBACLtU,KAAKuU,0BAKThV,iBAA2B,qBAAqB,WAC5C,IAAI4G,EAAgBnG,KAAKsD,cAEzB6C,EAAcqO,cAAc,SAC5BrO,EAAcqO,cAAc,aAExBC,YACAtO,EAAcqO,cAAc,cAC5BrO,EAAcqO,cAAc,mBAC5BrO,EAAcqO,cAAc,cAE5BrO,EAAcqO,cAAc,aAC5BrO,EAAcqO,cAAc,kBAC5BrO,EAAcqO,cAAc,YAEhCrO,EAAcqO,cAAc,aAC5BrO,EAAcqO,cAAc,eAKhCjV,iBAA2B,wBAAwB,WAC/C,IAAI4G,EAAgBnG,KAAKsD,cAEzB6C,EAAcuO,QAAQ,QAAS,SAAStN,GACpC,IAAItC,GAAOmP,SAAY7M,EAAMlD,UAAWJ,qBAAgC9D,KAAK2U,mBAAmBvN,GAChG,GAAKtC,EAAL,CAEA,IAAI8P,EAAS5U,KAAK6U,YAAYzN,GAC1B0N,EAAS9U,KAAK+U,YAAY3N,GAE1BwN,GACAzO,EAAc6O,KAAK,iBAAkB,CAACC,YAAa7N,EAAOtC,KAAMA,IAChEqB,EAAc6O,KAAK,aAAc,CAACC,YAAa7N,EAAOtC,KAAMA,KACrDgQ,IACP3O,EAAc6O,KAAK,iBAAkB,CAACC,YAAa7N,EAAOtC,KAAMA,IAChEqB,EAAc6O,KAAK,aAAc,CAACC,YAAa7N,EAAOtC,KAAMA,OAG3D2L,YAAYmE,GACb9P,EAAKoF,WAAW9C,KAGtB4K,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,WAAY,SAAStN,GACvC,IAAItC,GAAOmP,SAAY7M,EAAMlD,UAAWJ,qBAAgC9D,KAAK2U,mBAAmBvN,GAChG,GAAKtC,EAAL,CAEA,IAAIoQ,EAASlV,KAAKmV,YAAY/N,GAC1BwN,EAAS5U,KAAK6U,YAAYzN,GAC1B0N,EAAS9U,KAAK+U,YAAY3N,GAE1BwN,GACAM,GAAU/O,EAAc6O,KAAK,oBAAqB,CAACC,YAAa7N,EAAOtC,KAAMA,IAC7EqB,EAAc6O,KAAK,gBAAiB,CAACC,YAAa7N,EAAOtC,KAAMA,KACxDgQ,IACPI,GAAU/O,EAAc6O,KAAK,oBAAqB,CAACC,YAAa7N,EAAOtC,KAAMA,IAC7EqB,EAAc6O,KAAK,gBAAiB,CAACC,YAAa7N,EAAOtC,KAAMA,KAG/D9E,KAAKI,uBAAyBwU,GAAUE,KAAYI,GACpDpQ,EAAKoF,WAAW9C,KAEtB4K,oBAAoBhS,UAI1BT,iBAA2B,wBAAwB,WAC/C,IAAI4G,EAAgBnG,KAAKsD,cACzB6C,EAAcuO,SAAQD,WAAoB,aAAe,YAAa,SAASrN,GAC9E,IAAIlD,EAAUkD,EAAMlD,UAEbY,GAAOmP,SAAY/P,EAASJ,qBAAgC9D,KAAK2U,mBAAmBvN,GACxF,GAAKtC,EAAL,CAEAsC,EAAMgO,WAAY,EAElB,IAAIF,EAASlV,KAAKmV,YAAY/N,GAC1BwN,EAAS5U,KAAK6U,YAAYzN,GAC1B0N,EAAS9U,KAAK+U,YAAY3N,GAE9B,IAAGqN,WACF,GAAIY,2BAYAC,MAAM,oBAVN,GADAtV,KAAKuV,YAAa,EACS,GAAxBnO,EAAMoO,QAAQ3Q,SAChB7E,KAAKuV,YAAa,EAClBvV,KAAKyV,kBAAkBrO,EAAOtC,GAAM4Q,SAAWtO,IAAQuO,SAAYvO,IAAQwO,SAAaxO,GAAQ,CAAES,aAAa,IAC5G/C,EAAKiD,cAAiB8N,GAAgBA,gBAA2B/Q,IAAO,CAC1E,IAAIgR,EAAKzS,IAAOa,GAAS6R,QAAQ,YAEjC,YADS1S,IAAOyS,GAAI5B,SAAS,aAAetJ,SAASoK,KAAKlR,wBAAkC,CAACmR,YAAa7N,EAAOtC,KAAMZ,MAS1HuQ,YAAsBY,8BAClBrV,KAAKY,oBAAuB6T,YAA6C,GAAxBrN,EAAMoO,QAAQ3Q,QAC/D7E,KAAKyV,kBAAkBrO,EAAOtC,GAAM4Q,SAAWtO,IAAQuO,SAAYvO,IAAQwO,SAAaxO,GAAQ,CAAES,aAAa,IAG/G+M,GACAM,GAAU/O,EAAc6O,KAAK,qBAAsB,CAACC,YAAa7N,EAAOtC,KAAMA,IAC9EqB,EAAc6O,KAAK,iBAAkB,CAACC,YAAa7N,EAAOtC,KAAMA,KACzDgQ,IACPI,GAAU/O,EAAc6O,KAAK,qBAAsB,CAACC,YAAa7N,EAAOtC,KAAMA,IAC9EqB,EAAc6O,KAAK,iBAAkB,CAACC,YAAa7N,EAAOtC,KAAMA,QAI1EkN,oBAAoBhS,OAGtBmG,EAAcuO,SAAQD,WAAoB,kBAAmB,iBAAkB,SAAS3R,GACpF9C,KAAKgW,cAAe,EACpB,IAAI5O,EAAQtE,EAAEmT,KAAKhB,YAEfnQ,GAAOmP,SAAY7M,EAAMlD,UAAWJ,qBAAgC9D,KAAK2U,mBAAmBvN,GAChG,GAAKtC,EAAL,CAEAsC,EAAMgO,WAAY,EAElB,IAAIF,EAASlV,KAAKmV,YAAY/N,GAAQwN,EAAS5U,KAAK6U,YAAYzN,GAAQ0N,EAAS9U,KAAK+U,YAAY3N,GAE9FpH,KAAKY,qBAAsBgV,SAAaxO,IACxCpH,KAAKyV,kBAAkBrO,EAAOtC,GAAM4Q,SAAWtO,IAAQuO,SAAYvO,IAAQwO,SAAaxO,GAAQ,CAAES,aAAa,IAK/G+M,GACAM,GAAU/O,EAAc6O,KAAK,0BAA2B,CAACC,YAAa7N,EAAOtC,KAAMA,IACnFqB,EAAc6O,KAAK,sBAAuB,CAACC,YAAa7N,EAAOtC,KAAMA,KAC9DgQ,IACPI,GAAU/O,EAAc6O,KAAK,0BAA2B,CAACC,YAAa7N,EAAOtC,KAAMA,IACnFqB,EAAc6O,KAAK,sBAAuB,CAACC,YAAa7N,EAAOtC,KAAMA,OAG3EkN,oBAAoBhS,OAEtBmG,EAAcuO,SAAQD,WAAoB,WAAa,UAAW,SAASrN,GACvEpH,KAAKgW,cAAe,EACpB,IAAIlR,GAAOmP,SAAY7M,EAAMlD,UAAWJ,qBAAgC9D,KAAK2U,mBAAmBvN,GAChG,GAAKtC,EAAL,CAEAsC,EAAMgO,WAAY,EAElB,IAAIF,EAASlV,KAAKmV,YAAY/N,GAAQwN,EAAS5U,KAAK6U,YAAYzN,GAAQ0N,EAAS9U,KAAK+U,YAAY3N,GAE/FpH,KAAKuV,aACJnO,EAAM8O,sBAAuB,IAE9BzB,aAAsBzU,KAAKuV,aAC7BvV,KAAKmW,SAAWrR,EAAKhF,KACnBuV,4BAA6BjO,EAAMgP,UAAYpW,KAAKqW,UAAY,MAC/DzB,GACMM,GAAU/O,EAAc6O,KAAK,oBAAqB,CAACC,YAAa7N,EAAOtC,KAAMA,IAC7EqB,EAAc6O,KAAK,gBAAiB,CAACC,YAAa7N,EAAOtC,KAAMA,KACxDgQ,IACPI,GAAU/O,EAAc6O,KAAK,oBAAqB,CAACC,YAAa7N,EAAOtC,KAAMA,IAC7EqB,EAAc6O,KAAK,gBAAiB,CAACC,YAAa7N,EAAOtC,KAAMA,KAG/D9E,KAAKI,uBAAyBwU,GAAUE,KAAYI,GACpDpQ,EAAKoF,WAAW9C,IAIzBpH,KAAKqW,UAAYjP,EAAMgP,UACvBpW,KAAKmW,QAAUrR,EAAKhF,KAEjB2U,YAAsBY,6BACpBrV,KAAKY,mBAAsB0V,uBAAsC7B,YAAoD,GAA/BrN,EAAMmP,eAAe1R,QACzG7E,KAAKyV,kBAAkBrO,EAAOtC,GAAM4Q,SAAWtO,IAAQuO,SAAYvO,IAAQwO,SAAaxO,GAAQ,CAAES,aAAa,IAEnH7H,KAAKwW,gBAAgBpP,EAAOtC,GAAM4Q,SAAWtO,IAAQuO,SAAYvO,IAAQwO,SAAaxO,IAElFwN,GACAM,GAAU/O,EAAc6O,KAAK,mBAAoB,CAACC,YAAa7N,EAAOtC,KAAMA,IAC5EqB,EAAc6O,KAAK,eAAgB,CAACC,YAAa7N,EAAOtC,KAAMA,KACvDgQ,IACPI,GAAU/O,EAAc6O,KAAK,mBAAoB,CAACC,YAAa7N,EAAOtC,KAAMA,IAC5EqB,EAAc6O,KAAK,eAAgB,CAACC,YAAa7N,EAAOtC,KAAMA,MAG9D2P,YAAqBG,GAAUM,IAAWoB,sBAC1CxR,EAAKoF,WAAW9C,MAI1B4K,oBAAoBhS,OAElB,gBAAiB4K,WAmBjBzE,EAAcuO,QAAQ,YAAa,SAAStN,GAC3C,IAAIqP,EAAKrP,EAAMlD,UACRY,GAAOmP,SAAYwC,EAAI3S,qBAAgC9D,KAAK2U,mBAAmBvN,GAE9EtC,IAEL9E,KAAK0W,wBAAwBtP,EAAOtC,KACnC6R,YAAWxQ,EAAc6O,KAAK,iBAAkB,CAACC,YAAa7N,EAAOtC,KAAMA,MAC9EkN,oBAAoBhS,QAEjB2W,YACDxQ,EAAcuO,QAAQ,WAAY,SAAStN,GACvC,IAAItC,GAAOmP,SAAY7M,EAAMlD,UAAWJ,qBAAgC9D,KAAK2U,mBAAmBvN,GAC3FtC,GACLqB,EAAc6O,KAAK,gBAAiB,CAChCC,YAAa7N,EACbtC,KAAMA,KAEZkN,oBAAoBhS,QAK9B4W,SAAezQ,EAAc,CACzB0Q,OAAQ7W,KAAKW,YACbmW,OAAS,SAASC,GACd/W,KAAKgX,eAAiBD,GACvBnQ,KAAK5G,WAIhBT,iBAA2B,sBAAsB,WAAW,WACpD4G,EAAgBnG,KAAKsD,cAErB2T,EAAsB,WACtB,OAAO,SAAC7P,GACJ,IAAM8P,EAAM7T,IAAO,gBAAgBuN,KAAK,aAAa,GAC/CuG,EAA2F,gBAAzE9T,IAAO+D,EAAMgQ,QAAQC,QAAQ,6BAA6BrM,KAAK,MAEvF,GADA,EAAKgL,cAAe,EAChBmB,EAC+B,SAA/BvM,SAAS0M,KAAKC,MAAMC,QAAqBN,GAAOA,EAAI7G,YACjD,CACH,IAAMvL,EAAO,EAAK6P,mBAAmBvN,GACrC,GAAI7H,mBAA+BuF,EAC/B,OAEJA,GAAQ,EAAK2S,kBAAkB3S,EAAMsC,EAAM6O,KAAKhB,gBAK5D9O,EAAcuO,QAAQ,YAAauC,IAAsBjF,oBAAoBhS,OAC7EmG,EAAcuO,QAAQ,YAAauC,IAAsBjF,oBAAoBhS,OAE7EmG,EAAcuO,QAAQ,WAAY,SAAStN,GACvC,IAAItC,EAAO9E,KAAK2U,mBAAmBvN,GACnCpH,KAAKgW,cAAe,EACpBlR,GAAQ9E,KAAK0X,wBAAwB5S,EAAMsC,EAAM6O,KAAKhB,cACxDjD,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,UAAW,SAAStN,GACtC,IAAItC,EAAO9E,KAAK2U,mBAAmBvN,GACnCpH,KAAKgW,cAAe,EACpBlR,GAAQ9E,KAAK2X,uBAAuB7S,EAAMsC,EAAM6O,KAAKhB,cACvDjD,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,WAAY,SAAStN,GACvCA,EAAM6O,KAAKhB,YAAY/D,iBACvB,IAAIpM,EAAO9E,KAAK2U,mBAAmBvN,GACnCpH,KAAKgW,cAAe,EAChBzW,mBAA+BuF,GAGnCA,GAAQ9E,KAAK4X,gBAAgB9S,EAAMsC,EAAM6O,KAAKhB,cAChDjD,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,SAAU,SAAStN,GACrCA,EAAM6O,KAAKhB,YAAY/D,iBACvB,IAAIpM,EAAO9E,KAAK2U,mBAAmBvN,GACnCpH,KAAKgW,cAAe,EAChBzW,mBAA+BuF,GAGnCA,GAAQ9E,KAAK6X,oBAAoB/S,EAAMsC,EAAM6O,KAAKhB,cACpDjD,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,YAAa,SAAStN,GACxC,IAAItC,EAAO9E,KAAK2U,mBAAmBvN,GACnCpH,KAAKgW,cAAe,EAChBzW,mBAA+BuF,GAGnCA,GAAQ9E,KAAK8X,eAAehT,EAAMsC,EAAM6O,KAAKhB,cAC/CjD,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,WAAY,SAAStN,GACvC,IAAItC,EAAO9E,KAAK2U,mBAAmBvN,GACnCpH,KAAKgW,cAAe,EAChBzW,mBAA+BuF,GAGnCA,GAAQ9E,KAAK+X,gBAAgBjT,EAAMsC,EAAM6O,KAAKhB,cAChDjD,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,kBAAmB,SAAStN,GAC9CpH,KAAKgW,cAAe,EACpB,IAAIlR,EAAO9E,KAAK2U,mBAAmBvN,GAC9BtC,IACLsC,EAAMgO,WAAY,EAElBjP,EAAc6O,KAAK,mBAAoB,CAACC,YAAa7N,EAAOtC,KAAMA,EAAMkT,QAAS5Q,EAAM6O,KAAKnR,SAC9FkN,oBAAoBhS,UAG1BT,iBAA2B,yBAAyB,WAChD,IAAI4G,EAAgBnG,KAAKsD,cAEzB6C,EAAcuO,QAAQ,YAAa,SAAStN,GACnC7H,gBAA4BA,iBAA6BS,KAAKiL,UAC/D9E,EAAc6O,KAAK,YAAa,CAACC,YAAa7N,EAAOzE,KAAMpD,oBAE3DA,eAA2BS,KAAKiL,QAChC9E,EAAc6O,KAAK,aAAc,CAACC,YAAa7N,EAAOzE,KAAMpD,sBAElEyS,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,YAAa,SAAStN,GAC7BpH,KAAK2U,mBAAmBvN,IAG/BjB,EAAc6O,KAAK,iBAAkB,CAACC,YAAa7N,EAAOzE,KAAM3C,QAEtEgS,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,WAAY,SAAStN,GAC5BpH,KAAK2U,mBAAmBvN,IAG/BjB,EAAc6O,KAAK,gBAAiB,CAACC,YAAa7N,EAAOzE,KAAM3C,QAErEgS,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,UAAW,SAAStN,GACtC,IAAM8P,EAAM7T,IAAO+D,EAAMgQ,QAAQC,QAAQ,6BACzCH,EAAIlM,KAAK,YAAa,GACtBkM,EAAItG,KAAK,kBAAkB5F,KAAK,YAAa,GAC7CkM,EAAItG,KAAK,aAAa5F,KAAK,WAAY,GACvC,IAAIlG,EAAO9E,KAAK2U,mBAAmBvN,GAC/BtC,GACK9E,KAAKgW,eACNlR,EAAKkH,iBAAkB,GAE3BlH,EAAKuL,QACLvL,EAAKnD,gBAELuV,EAAItG,KAAK,aAAaP,QAGgB,IAAtC6G,EAAItG,KAAK,kBAAkB/L,QAC3BqS,EAAIlM,KAAK,WAAY,IAE3BgH,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,QAAS,SAAStN,GACpCpH,KAAKgW,cAAe,GACtBhE,oBAAoBhS,OAEtBmG,EAAcuO,QAAQ,WAAY,SAAStN,GACvC,IAAItC,EAAO9E,KAAK2U,mBAAmBvN,GAC/BtC,IACAA,EAAKkH,iBAAkB,EACvBlH,EAAKnD,gBAET,IAAMuV,EAAM7T,IAAO+D,EAAMgQ,QAAQC,QAAQ,6BACzCH,EAAItG,KAAK,kBAAkB5F,KAAK,YAAa,GAC7CkM,EAAIlM,KAAK,WAAY,IACvBgH,oBAAoBhS,UAI1BT,iBAA2B,iBAAiB,SAASuF,EAAMsC,GACnCpH,KAAKsD,cACX0R,KAAK,YAAa,CAAClQ,KAAMA,EAAMmQ,YAAa7N,OAG9D7H,iBAA2B,mBAAmB,SAASuF,EAAMsC,GACrCpH,KAAKsD,cACX0R,KAAKlQ,EAAKwH,WAAa,gBAAkB,gBAAiB,CAACxH,KAAMA,EAAMmQ,YAAa7N,OAItG7H,iBAA2B,qBAAqB,SAASuF,EAAMsC,GACvCpH,KAAKsD,cACX0R,KAAKlQ,EAAKwH,WAAa,kBAAoB,kBAAmB,CAACxH,KAAMA,EAAMmQ,YAAa7N,OAI1G7H,iBAA2B,wBAAwB,SAAS6H,GACpCpH,KAAKsD,cACX0R,KAAK,mBAAoB,CAACC,YAAa7N,OAGzD7H,iBAA2B,iBAAiB,SAASuF,EAAMmT,GACnCjY,KAAKsD,cACX0R,KAAKlQ,EAAKwH,WAAa,YAAc,YAAa,CAACxH,KAAMA,EAAMuN,SAAU4F,OAG3F1Y,iBAA2B,sBAAsB,SAASuF,EAAMuM,GACxCrR,KAAKsD,cACX0R,KAAKlQ,EAAKwH,WAAa,iBAAmB,iBAAkB,CAACxH,KAAMA,EAAMuM,MAAOA,OAGlG9R,iBAA2B,oBAAoB,SAASuF,GAChC9E,KAAKsD,cACX0R,KAAKlQ,EAAKwH,WAAa,eAAiB,eAAgB,CAACxH,KAAMA,OAKjFvF,iBAA2B,WAAW,SAAS2Y,EAAWC,GACtDnY,KAAKsD,cAAcoR,QAAQwD,EAAWC,MAK1C5Y,iBAA2B,iBAAiB,SAAS2Y,EAAWC,GAC5DnY,KAAKsD,cAAckR,cAAc0D,EAAWC,MAEhD5Y,iBAA2B,2BAA2B,SAAS6H,EAAOtC,GAQlE,IAAIsT,EAAWhR,EAAQA,EAAMlD,UAAYY,EAAKxB,cAAcmL,SAASzO,KAAKS,aACtE4X,EAAYrY,KAAKsY,WAAWF,EAASrU,YAEzC,GAAI/D,KAAKS,cAAgB4X,EAAW,CAChC,IAAIE,GAAeC,SAASJ,EAAU,CAACpY,KAAKS,cAAc,GAC1D,GAAI8X,GAAgBH,EAAShU,UAAUqG,cAAc5B,QAAQ,QAAU,IAAM7I,KAAKsY,WAAWC,EAAaxU,YAUtG,OATA/D,KAAKsY,WAAWC,EAAaxU,YAC7B,IAAI0U,KAAUL,EAAU,CACpBM,eAAe,EACfC,aAAa,EACblS,OAAQmS,aAAUnE,WAAoB,IAAM,EAC5CoE,QAAS7Y,KAAK8Y,kBAAkBlS,KAAK5G,KAAM8E,GAC3CiU,MAAO/Y,KAAKgZ,gBAAgBpS,KAAK5G,KAAM8E,KAGpC9E,KAAKsY,WAAWC,EAAaxU,YAI5C,OAAO,QAGXxE,iBAA2B,qBAAqB,SAASuF,EAAMmU,EAAW7R,GACtE,IAAIjD,EAAoBW,EAAKxB,cAAca,kBACvCA,GAAqBd,IAAO4V,EAAU/U,SAASG,SAASF,GAE5D8U,EAAU/U,QAAQgV,SAAS,CAACC,MAAO,KAAMC,OAAQ,OACjD/V,IAAO4V,EAAU/U,SAASG,SAASP,oBAA6BO,SAASrE,KAAKiL,SAE1EjL,KAAKU,aACL2C,IAAO4V,EAAU/U,SAASG,SAASrE,KAAKU,aAGxCV,KAAKwB,cAAcqD,OAAS,GAC5BoU,EAAU/U,QAAQP,OAAO,IAAI0V,WAASrZ,KAAKyB,wBAAwB6X,SAAS,CAACzM,MAAO7M,KAAKwB,cAAcqD,UAG3GoU,EAAU/U,QAAQY,KAAOA,EACzBmU,EAAU/U,QAAQzE,MAAQO,KAAKwB,cAE/ByX,EAAUlZ,QAAQe,OAASd,KAAKsD,cAChC2V,EAAUlZ,QAAQwZ,kBAAoBzV,uBACtC0V,cAAsBxZ,KAAKa,WAAY,KAG3CtB,iBAA2B,mBAAmB,SAASuF,EAAMmU,EAAW7R,GACpEoS,cAAsB,QAG1B,U,uDC3jBAja,cAA0B,SAAUO,EAAIC,GAiCpC,GAhCAR,YAAsBS,KAAMF,EAAIC,GAEhCC,KAAKyZ,WAAa1Z,EAAQ0Z,WAC1BzZ,KAAK0Z,WAAa3Z,EAAQ2Z,WAC1B1Z,KAAK2Z,QAAU5J,OAAOC,YAAYjQ,EAAQ4Z,SAAW,IAAM5Z,EAAQ4Z,QACnE3Z,KAAK4Z,UAAY7Z,EAAQ6Z,WAAa7J,OAAO8J,WAAW9Z,EAAQ6Z,WAAa7Z,EAAQ6Z,UAAYra,WAC7FQ,EAAQ+Z,qBACR9Z,KAAK+Z,iBAAmBha,EAAQ+Z,oBAEpC9Z,KAAKga,kBAAoBjK,OAAOC,YAAYjQ,EAAQia,oBAAsBja,EAAQia,kBAClFha,KAAKia,QAAS,EAEdja,KAAKka,aAAe,aAEpBla,KAAKma,WAAa,eAElBna,KAAKoa,WAAara,EAAQqa,WAAara,EAAQqa,WAAapa,KAAKqa,YAAY,WAE7Era,KAAKsa,eAAiBva,EAAQua,eAAiBva,EAAQua,eAAiBta,KAAKqa,YAAY,eAEzFra,KAAKua,uBAAyBxa,EAAQwa,uBAAyBxa,EAAQwa,uBAAyBva,KAAKqa,YAAY,uBAEjHra,KAAKwa,cAAgBza,EAAQya,cAAgBza,EAAQya,cAAgBxa,KAAKqa,YAAY,cAEtFra,KAAKya,iBAAmB1a,EAAQ0a,iBAAmB1a,EAAQ0a,iBAAmB,GAQ3C,MAA/Bza,KAAKyB,uBAAgC,CACrC,IAAIiZ,EAAW,SAAUC,GACrB3a,KAAKyB,uBAAyBkZ,GAChC/T,KAAK5G,MACPA,KAAK4a,WAAW,yBAA0BF,EAAU,MAExD1a,KAAK6a,qBAETtb,yBAAoCub,SAAUvb,kBAY9CA,wBAAkC,qBAAqB,WACnDS,KAAK0U,QAAQ,YAAa,SAAUtN,GAChC,IAAItC,EAAOsC,EAAM6O,KAAKnR,KAClBA,IAASA,EAAK2G,UACdzL,KAAK+a,oBAAoBjW,IAE/BkN,oBAAoBhS,UAa1BT,wBAAkC,iBAAiB,SAAU2Y,EAAWC,GACpEnY,KAAKsD,cAAckR,cAAc0D,EAAWC,GAC1B,cAAdD,GAA8BC,GAC9BnY,KAAK6a,uBAGbtb,wBAAkC,eAAe,SAAUyb,GACvD,OAAOC,gBAA6B,sCAAwCD,KAuBhFzb,wBAAkC,YAAY,SAAU2b,EAAOC,EAAgBC,EAAiBC,GAC5F,IAAIC,EAAMtb,KAAKoa,WAAa,aAAepa,KAAKyZ,WAAa,QAAUzZ,KAAK2Z,QAAU,UAAYuB,EAClGG,IAAoBC,GAAO,yBAC3BA,GAAO,IAAMtb,KAAKub,4BAClBvb,KAAKwb,UAAUF,EAAKH,EAAgBC,MAExC7b,wBAAkC,6BAA6B,WAC3D,IAAIkc,EAASzb,KAAKya,iBAIlB,OAHIiB,eAAaD,KACbA,EAASA,EAAOE,KAAK,OAErBD,aAAWD,GACJ1L,OAAO6L,cAAcH,GAEzB,QAuBXlc,wBAAkC,yBAAyB,SAAUsc,EAAmBV,EAAgBC,GACpG,IAAIE,EAAMtb,KAAKoa,WAAa,aAAepa,KAAKyZ,WAAa,QAAUzZ,KAAK2Z,QACxEkC,IACAP,GAAO,aAAeQ,mBAAmBD,IAE7CP,GAAO,IAAMtb,KAAKub,4BAClBvb,KAAKwb,UAAUF,EAAKH,EAAgBC,MAExC7b,wBAAkC,aAAa,SAAU+b,EAAKH,EAAgBC,GAC1E,IAAIW,EAAO/b,KACXA,KAAKia,QAAS,EACdja,KAAKgc,OACL,IAAyBnW,EAAKoW,EAAIC,EAA9BxB,GAAqB7U,EAIvB7F,KAJ4Bic,EAItBd,EAJ0Be,EAIVd,EAHb,WACH,OAAOvV,EAAIsW,iBAAiBF,EAAIC,MAaxCE,QAAoBd,EAAK,CACrBe,aAAcrc,KAAKka,aACnBQ,SAAUA,EACV4B,aAbmB,WACnB,IAAIC,GAAK,EAOT,OANIR,EAAKS,mBACLD,EAAKR,EAAKS,iBAAiBC,MAAMna,OAAQoa,aAElC,IAAPH,IACAA,EAAKI,WAAuBra,OAAQoa,YAEjCH,GAMP7C,WAAY1Z,KAAK0Z,gBAGzBna,wBAAkC,oBAAoB,SAAU4b,EAAgBC,GAE5E,IAAIwB,EAAMhS,SAASC,eAAe7K,KAAKma,YACvC,GAAW,MAAPyC,EAAJ,CAWA,IACIC,EADO9N,aAAiB1L,IAAOuZ,GAAKjC,QACrBmC,WACf9c,KAAK+Z,mBACL8C,EAAU7c,KAAK+Z,iBAAiB8C,GAAS,IAG7CD,EAAMhS,SAASC,eAAe7K,KAAKka,cACnC7W,IAAOuZ,GAAKjS,KAAK,IAEjB3K,KAAKC,YAAYD,KAAK+c,YAAYF,IAClC7c,KAAKgd,aACDhd,KAAKga,mBACLha,KAAKid,cAETjd,KAAKkd,aACLld,KAAKia,QAAS,EACVkB,EACAA,IAEAnb,KAAKmd,oBAAoB,CAAExa,KAAM3C,YA7B7Bob,EACAA,IAEApb,KAAKod,0BA4CjB7d,wBAAkC,eAAe,SAAU8d,GACvD,IAAIhS,EAAQ,GACZA,EAAMvL,GAAKud,EAASvd,GACpBuL,EAAMe,KAAOiR,EAASjR,KACtBf,EAAMiS,IAAMD,EAASC,IACrBjS,EAAMkS,OAAQzC,SAAUuC,EAASE,OAC7BF,EAAShP,WACThD,EAAMgD,SAAWgP,EAAShP,UAE9B,IACImP,EAAY,IAAIC,EADFzd,KAAK4Z,WACS,CAC5BzX,MAAMub,SAAkBL,EAASM,OACjCtS,MAAOA,EACPf,YAAa+S,EAASO,QAEtBP,EAASpO,UACTuO,EAAUvO,QAAUoO,EAASpO,SAGjC,IAAIwD,EAAK4K,EAAS5O,SAClB,GAAU,MAANgE,EAAY,CACZ,IAAIxN,EAAMwN,EAAG5N,OACb,GAAY,IAARI,EACAuY,EAAUK,cAAa,QAEvB,IAAK,IAAIjZ,EAAI,EAAGA,EAAIK,EAAKL,IAAK,CAC1B,IAAIkZ,EAAYrL,EAAG7N,GACnB,GAAIkZ,EAAW,CACX,IAAIC,EAAa/d,KAAK+c,YAAYe,GAClCN,EAAUQ,SAASD,IAI/BP,EAAU/R,UAAW,EAEzB,OAAO+R,KAmBXje,wBAAkC,uBAAuB,SAAU2F,EAAYiW,EAAgBC,GAC3F,IACyBvV,EAAKoY,EAAIhC,EAAIC,EADlCoB,EAAMpY,EAAWmG,MAAMiS,IACvB5C,GAAqB7U,EAKvB7F,KAL4Bie,EAKtB/Y,EAAWpF,GALemc,EAKXd,EALee,EAKCd,EAJ5B,WACHvV,EAAImX,aACJnX,EAAIqY,4BAA4BD,EAAIhC,EAAIC,MAShDE,QAAoBpc,KAAKsa,eAAiB,aAAeta,KAAKyZ,WAAa,QAAUqC,mBAAmBA,mBAAmBwB,IAAQ,IAAMtd,KAAKub,4BAA6B,CACvKc,aAAcrc,KAAKka,aACnBQ,SAAUA,EACV4B,aATmB,SAAU6B,IACL,KAApBA,EAAUC,QAAiBD,EAAUE,kBAAkB,uBACvDnZ,EAAWgB,eAEfyW,QAAiBwB,IAMjBzE,WAAY1Z,KAAK0Z,aAEhB1Z,KAAKia,QACN/U,EAAW8W,UAGnBzc,wBAAkC,+BAA+B,SAAU+e,EAAcnD,EAAgBC,GACrG,IAAIwB,EAAMhS,SAASC,eAAe7K,KAAKma,YACvC,GAAW,MAAPyC,EAAJ,CAQA,IAAI2B,EAAKxP,aAAiB1L,IAAOuZ,GAAKjC,QAAQmC,WAC1C5X,EAAa3F,QAAkB+e,GAC/Bte,KAAK+Z,mBACLwE,EAAKve,KAAK+Z,iBAAiBwE,GAAI,EAAMrZ,IAEzC0X,EAAMhS,SAASC,eAAe7K,KAAKka,cACnC7W,IAAOuZ,GAAKjS,KAAK,IACjBzF,EAAWsZ,cACXtZ,EAAWgB,cACX,IAAIjB,EAAMsZ,EAAG1Z,OACb,GAAY,IAARI,EACAC,EAAW2Y,cAAa,OACrB,CACH,IAAI5Z,EAASiB,EAAWgH,YACpBvJ,EAAOsB,EAAS1E,QAAkB0E,GAAU,KAC5Cwa,EAAe9b,EAAOA,EAAKvB,UAAY,KACvCuB,IACAA,EAAKvB,WAAY,GAErB,IAAK,IAAIwD,EAAI,EAAGA,EAAIK,EAAKL,IAAK,CAC1B,IAAIE,EAAO9E,KAAK+c,YAAYwB,EAAG3Z,IAC/BM,EAAW8Y,SAASlZ,GAEpBnC,IACAA,EAAKvB,UAAYqd,EACjBvZ,EAAWC,gBAGnBD,EAAWuG,UAAW,EACtBvG,EAAWsO,cACP2H,EACAA,EAAejW,EAAWE,QAE1BpF,KAAK0e,wBAAwBxZ,EAAWE,aAxCpCgW,EACAA,IAEApb,KAAKod,0BAyDjB7d,wBAAkC,gCAAgC,SAAUof,EAAaxD,EAAgBC,GACrG,IAEIxW,EAFA0Y,EAAM,GACNsB,EAAM,GAEV,GAAID,GAAeA,EAAY9Z,OAC3B,IAAKD,EAAI,EAAGA,EAAI+Z,EAAY9Z,OAAQD,IAC5BA,EAAI,IACJ0Y,GAAO,KAEXA,GAAOxB,mBAAmBA,mBAAmB6C,EAAY/Z,GAAGyG,MAAMiS,MAClEsB,EAAIha,GAAK+Z,EAAY/Z,GAAG9E,GAGhC,GAAKwd,EAAIzY,OAAT,CAIA,IAAyBgB,EAAKoY,EAAIhC,EAAIC,EAAlCxB,GAAqB7U,EAIvB7F,KAJ4Bie,EAItBW,EAJ0B3C,EAIrBd,EAJyBe,EAITd,EAHlB,WACH,OAAOvV,EAAIgZ,qCAAqCZ,EAAIhC,EAAIC,KAWhE,IARAE,QAAoBpc,KAAKua,uBAAyB,aAAeva,KAAKyZ,WAClE,CACI4C,aAAcrc,KAAKka,aACnBQ,SAAUA,EACVoE,SAAU,QAAUxB,EACpBhB,aAAcK,KACdjD,WAAY1Z,KAAK0Z,cAEpB1Z,KAAKia,OACN,IAAKrV,EAAI,EAAGA,EAAI+Z,EAAY9Z,OAAQD,IAChC+Z,EAAY/Z,GAAGoX,WAI3Bzc,wBAAkC,wCAAwC,SAAUwf,EAAe5D,EAAgBC,GAC/G,IAAIwB,EAAMhS,SAASC,eAAe7K,KAAKma,YACvC,GAAW,MAAPyC,EAAJ,CAQA,IAAI2B,EAAKxP,aAAiB1L,IAAOuZ,GAAKjC,QAAQmC,WAC9CF,EAAMhS,SAASC,eAAe7K,KAAKka,cACnC7W,IAAOuZ,GAAKjS,KAAK,IACbwQ,EACAA,EAAe4D,EAAeR,IAE9Bve,KAAKgf,wBAAwBD,EAAeR,GAC5Cve,KAAKif,gCAAgCF,EAAeR,SAdhDnD,EACAA,IAEApb,KAAKod,0BA2BjB7d,wBAAkC,2BAA2B,SAAUwf,EAAeG,EAAaC,GAC/F,GAAIJ,GAAiBG,EACjB,IAAK,IAAIE,EAAK,EAAGA,EAAKF,EAAYra,OAAQua,IAAM,CAK5C,IAJA,IAAIC,EAAaH,EAAYE,GACzBb,EAAKc,EAAW5Q,SAEhBvJ,EAAa,KACRoa,EAAK,EAAGA,EAAKP,EAAcla,OAAQya,IAAM,CAC9C,IAAIC,EAAWhgB,QAAkBwf,EAAcO,IAC/C,GAAIC,EAASlU,MAAMiS,KAAO+B,EAAWG,UAAW,CAC5Cta,EAAaqa,EACb,OAGR,GAAIra,EAAY,CACZA,EAAWsZ,cACXtZ,EAAWgB,cACX,IAAIjB,EAAMsZ,EAAG1Z,OACb,GAAY,IAARI,EACAC,EAAW2Y,cAAa,OACrB,CACH,IAAI5Z,EAASiB,EAAWgH,YACpBvJ,EAAOsB,EAAS1E,QAAkB0E,GAAU,KAC5Cwa,EAAe9b,EAAOA,EAAKvB,UAAY,KACvCuB,IACAA,EAAKvB,WAAY,GAErB,IAAK,IAAIwD,EAAI,EAAGA,EAAIK,EAAKL,IAAK,CAC1B,IAAIE,EAAO9E,KAAK+c,YAAYwB,EAAG3Z,IAC/BM,EAAW8Y,SAASlZ,GAEpBnC,IACAA,EAAKvB,UAAYqd,EACjBvZ,EAAWC,gBAGnBD,EAAWuG,UAAW,EACjB0T,GACDja,EAAWsO,mBA+B/BjU,wBAAkC,iCAAiC,SAAU2F,EAAY2W,EAAmBV,EAAgBC,EAAiBF,EAAOuE,EAAgBN,GAChK,IAAI7B,EAAMpY,EAAWmG,MAAMiS,IACvBhC,EAAMtb,KAAKoa,WAAa,aAAepa,KAAKyZ,WAAa,QAAU6D,EACnEoC,EAAW,GACX7D,IAEA6D,EAAW,aAAe7D,GAE1BX,IACAI,GAAO,UAAYJ,GAEvB,IAAyBrV,EAAKoY,EAAIhC,EAAIC,EAAIyD,EAAIC,EAA1ClF,GAAqB7U,EAIvB7F,KAJ4Bie,EAItB/Y,EAAWpF,GAJemc,EAIXd,EAJee,EAICd,EAJGuE,EAIcF,EAJVG,EAI0BT,EAH7D,WACH,OAAOtZ,EAAIga,sCAAsC5B,EAAIhC,EAAIC,EAAIyD,EAAIC,MAGzExD,QAAoBd,EAAK,CACrBe,aAAcrc,KAAKka,aACnBQ,SAAUA,EACVoE,SAAUY,EACVpD,aAAcK,KACdjD,WAAY1Z,KAAK0Z,aAEhB1Z,KAAKia,QACN/U,EAAW8W,UAGnBzc,wBAAkC,yCAAyC,SAAU+e,EAAcnD,EAAgBC,EAAiBqE,EAAgBN,GAChJ,IAAIvC,EAAMhS,SAASC,eAAe7K,KAAKma,YACvC,GAAW,MAAPyC,EAAJ,CAQA,IAAIxT,EAAI2F,aAAiB1L,IAAOuZ,GAAKjC,QAAQmC,WAC7CF,EAAMhS,SAASC,eAAe7K,KAAKka,cACnC7W,IAAOuZ,GAAKjS,KAAK,IACjB,IAAIzF,EAAa3F,QAAkB+e,GAGnC,GAFApZ,EAAWsZ,cACXtZ,EAAWgB,cACPkD,EAAEqF,SAAU,CACZ,IAAIxK,EAASiB,EAAWgH,YACpBvJ,EAAOsB,EAAS1E,QAAkB0E,GAAU,KAC5Cwa,EAAe9b,EAAOA,EAAKvB,UAAY,KACvCuB,IACAA,EAAKvB,WAAY,GAErB,IAAK,IAAIwD,EAAI,EAAGA,EAAIwE,EAAEqF,SAAS5J,OAAQD,IAAK,CACxC,IAAIE,EAAO9E,KAAK+c,YAAY3T,EAAEqF,SAAS7J,IACvCM,EAAW8Y,SAASlZ,GAEpBnC,IACAA,EAAKvB,UAAYqd,EACjBgB,GAAkBva,EAAWC,gBAGrCD,EAAWuG,UAAW,EACjB0T,GACDja,EAAWsO,cAEX2H,EACAA,IAEAnb,KAAK8f,kCAAkC5a,EAAWE,aApC9CgW,EACAA,IAEApb,KAAKod,0BAiDjB7d,wBAAkC,qBAAqB,SAAUwgB,EAAQC,EAAUC,EAAgBlgB,GAC/F,IAAImgB,EAAK,SAAUpb,GACf,IAAInC,EAAOpD,QAAkBuF,EAAKoH,aAC9BpH,EAAK8C,QACDjF,GAAQA,EAAKqB,UAAYc,EAAK8C,QAAUjF,EAAKwJ,SAASrH,EAAK8C,OAAO9H,KAAOP,yBACzEuF,EAAK8C,OAAOsC,aAGhBpF,GAAQzB,IAAO,sBAAsBwB,SACrCC,EAAKmE,SAAU,GACnBtG,EAAK8S,uBAAkBpV,EAAWyE,GAAM,GAAO,GAAO,EAAO/E,IAEjEC,KAAKmgB,gBAAgBJ,EAAQG,EAAID,GAEjC,IAAIG,EAAepgB,KAAKqgB,kBACxB,GAAID,EACAA,EAAatf,aACV,CACH,IAAIkD,EAAWhE,KAAKsgB,cAChBtc,EAAS7B,KACT+d,EAAGlc,GAEHkc,EAAGlc,EAASwF,iBAGhBwW,GACAA,OAGRzgB,wBAAkC,mBAAmB,SAAUwgB,EAAQQ,EAAWN,GAC9E,IAAInb,EAAO9E,KAAKsgB,cAChB,GAAe,MAAXP,EACAQ,EAAUzb,OACP,CACH,IACIF,EADA4b,EAAOT,EAAOU,MAAM,KAExB,IAAK7b,EAAI,EAAGA,EAAI4b,EAAK3b,OAAQD,IACzB,GAAK4b,EAAK5b,GAAV,CAGA,IAAI8b,EAAU5b,EAEd,KADAA,EAAO9E,KAAK2gB,wBAAwB7b,EAAM0b,EAAK5b,KACpC,CACP,IAAIqb,EAMA,OAJA,KADAnb,EAAO9E,KAAK4gB,0CAA0CF,IAElD,OAMZH,EAAUzb,QAuBtBvF,wBAAkC,sBAAsB,SAAUwgB,GAC9D,IACmBc,EADfxB,EAAa,CAAEva,KAAM,MACrBob,GAAeW,EAIjBxB,EAHS,SAAUva,GACb+b,EAAO/b,KAAOA,IAItB,OADA9E,KAAKmgB,gBAAgBJ,EAAQG,GACtBb,EAAWva,QAEtBvF,wBAAkC,2BAA2B,SAAUuF,EAAM3C,GACzE,GAAI2C,EAAKiF,YACL,IAAK,IAAInF,EAAI,EAAGA,EAAIE,EAAKM,OAAOP,OAAQD,IACpC,GAAIE,EAAKM,OAAOR,GAAGyG,MAAMvL,IAAMqC,EAC3B,OAAO2C,EAAKM,OAAOR,GAI/B,OAAO,QAaXrF,wBAAkC,6CAA6C,SAAUuF,GACrF,IAAIgc,EAAiB,KACjBC,EAAkB,KACtB,GAAIjc,EAAKM,OAAOP,OAAS,EAAG,CACxBic,EAAiBhc,EAAKM,OAAO,GAAGiG,MAAMvL,GACtCihB,EAAkB,EAGlB,IAFA,IAAIC,EAAgB,KAChBC,EAAiB,KACZ7R,EAAQ,EAAGA,EAAQtK,EAAKM,OAAOP,OAAQuK,IAAS,CAErD6R,EAAiB7R,EAEjB,IADA,IAAI8R,GAFJF,EAAgBlc,EAAKM,OAAOgK,GAAO/D,MAAMvL,IAEX+E,OAASic,EAAejc,OAASmc,EAAcnc,OAASic,EAAejc,OAC5Fsc,EAAY,EAAGA,EAAYD,EAAWC,IAAa,CACxD,GAAIH,EAAcI,WAAWD,GAAaL,EAAeM,WAAWD,GAAY,CAC5EL,EAAiBE,EACjBD,EAAkBE,EAClB,MACG,GAAID,EAAcI,WAAWD,GAAaL,EAAeM,WAAWD,GAEvE,OAIZ,OAAOrc,EAAKM,OAAO2b,GAEnB,OAAO,QAUfxhB,wBAAkC,gBAAgB,SAAU8hB,EAAQC,GAChE,OAAO,SAASC,EAAcC,EAAS1c,GACnC,IAAKA,IAAS0c,EACV,OAAO,KAEX,GAAI1c,EAAKuG,MAAMvL,KAAO0hB,EAClB,OAAO1c,EAEX,GAAIA,EAAKiF,YACL,IAAK,IAAInF,EAAI,EAAGA,EAAIE,EAAKM,OAAOP,SAAUD,EAAG,CACzC,IAAI6c,EAAQF,EAAcC,EAAS1c,EAAKM,OAAOR,IAC/C,GAAI6c,EACA,OAAOA,EAInB,OAAO,KAfJ,CAgBLJ,EAAQC,GAAwBthB,KAAKsgB,kBAW3C/gB,wBAAkC,qBAAqB,SAAUsd,GAC7D,GAAI7c,KAAKG,UACL,OAAO,EAEX,IAAIsO,EAAWoO,EAAQpO,SACvB,GAAIA,EACA,IAAK,IAAI7J,EAAI,EAAGA,EAAI6J,EAAS5J,OAAQD,IAAK,CACtC,IAAI8c,EAAgB7E,EAAQpO,SAAS7J,GAAG6J,SACxC,GAAIiT,GAAiBA,EAAc7c,OAAS,EACxC,OAAO,EAInB,OAAO,KAOXtF,wBAAkC,cAAc,SAAUoiB,EAAWxG,EAAgBC,GACjF,IACyBvV,EAAKoW,EAAIC,EAD9BZ,EAAMtb,KAAKwa,cAAgB,cAAgBmH,EAC3CjH,GAAqB7U,EAIvB7F,KAJ4Bic,EAItBd,EAJ0Be,EAIVd,EAHb,WACH,OAAOvV,EAAI+b,mBAAmB3F,EAAIC,MAG1CE,QAAoBd,EAAK,CACrBe,aAAcrc,KAAKka,aACnBQ,SAAUA,EACV4B,aAAcK,KACdjD,WAAY1Z,KAAK0Z,gBAGzBna,wBAAkC,sBAAsB,SAAU4b,EAAgBC,GAC9E,IAAIwB,EAAMhS,SAASC,eAAe7K,KAAKka,cACvC,GAAW,MAAP0C,EAAJ,CAOA,IAAIiF,EAAQxe,IAAOuZ,GACfjC,GAAOmH,SAAKD,EAAMlX,QACtBkX,EAAMlX,KAAK,IACPwQ,GACAA,EAAeR,QAVXS,GACAA,OAuBZ7b,wBAAkC,wBAAwB,WACtDS,KAAKsD,cAAc0R,KAAK,eAAgB,OAO5CzV,wBAAkC,uBAAuB,SAAUoD,GAC/D3C,KAAKsD,cAAc0R,KAAK,cAAe,CAAErS,KAAMA,OAOnDpD,wBAAkC,2BAA2B,SAAUE,GACnEO,KAAKsD,cAAc0R,KAAK,kBAAmB,CAAEvV,MAAOA,OAOxDF,wBAAkC,mCAAmC,SAAUwf,EAAegD,GAC1F/hB,KAAKsD,cAAc0R,KAAK,0BAA2B,CAC/C+J,cAAeA,EACfgD,UAAWA,OAQnBxiB,wBAAkC,qCAAqC,SAAUE,GAC7EO,KAAKsD,cAAc0R,KAAK,4BAA6B,CAAEvV,MAAOA,OAGlE,UC/2BAF,mBAA+B,SAASQ,GACpCR,gBAA0BS,KAAMD,GAEhCC,KAAKsL,MAAQ,CACTC,OAAS,IAAIhM,gBAA0B,iEACvCyiB,UAAY,IAAIziB,gBAA0B,aAC1C0iB,KAAO,IAAI1iB,gBAA0B,SAEzCS,KAAKyT,wBAA0B,8CAE3BzT,KAAKqL,MAAMkS,OAASvd,KAAKqL,MAAMkS,MAAM2E,sBACrCliB,KAAKqL,MAAMgD,SAAWrO,KAAKmiB,qBAGhC5iB,aACCA,8BAAyCub,SAAUvb,uBAGvDA,0BAAoC,qBAAsB,eAE1DA,6BAAuC,YAAY,WAC/C,OAAOS,KAAKqL,MAAMe,MAAQpM,KAAKsL,MAAMC,OAAOpJ,MACxCnC,KAAKqL,MAAMe,MAAQpM,KAAKsL,MAAM0W,UAAU7f,MACxCnC,KAAKqL,MAAMe,MAAQpM,KAAKsL,MAAM2W,KAAK9f,QAG3C5C,6BAAuC,eAAe,WAClD,OAAOS,KAAKqL,MAAMe,MAAQpM,KAAKsL,MAAM0W,UAAU7f,QAGnD5C,6BAAuC,YAAY,WAC/C,MAAyB,WAAlBS,KAAKqL,MAAMvL,MAGtBP,uBAAmC,SAASO,EAAIC,GAE5C,IAAIqiB,EAAqC,MAA1BriB,EAAQsiB,gBAAqD,KAA3BtiB,EAAQsiB,eAG/B,MAAtBtiB,EAAQI,YACRJ,EAAQI,WAAaiiB,GAGpBriB,EAAQ6Z,YACT7Z,EAAQ6Z,UAAYra,oBAGxBQ,EAAQgB,cAAgB,sCAExB,IAAI4B,EAAO,IAAIpD,cAAwBO,EAAIC,GAuF3C,GArFA4C,EAAK0f,eAAiBtiB,EAAQsiB,eAC9B1f,EAAK2f,gBAAkBviB,EAAQuiB,gBAC/B3f,EAAKyf,QAAUA,EAEfzf,EAAKoX,iBAAmB,SAAU8C,EAAS0F,EAAoBrd,GAC3D,IAAIsd,EACJ,GAAID,EAAoB,CACpBC,EAAiB,GACjB,IAAK,IAAI5d,EAAE,EAAGA,EAAEiY,EAAQhY,OAAQD,IACxBiY,EAAQjY,GAAG0Y,KAAOtd,KAAKsiB,iBAAqBpd,GAAsC,KAAxBA,EAAWmG,MAAMiS,KAC3EkF,EAAezd,KAAK8X,EAAQjY,SAIpC,GAAI5E,KAAKoiB,SAA+B,MAApBvF,EAAQpO,SAAkB,CAI1C,IAHA,IAAIgU,EACAhQ,EAAKoK,EAAQpO,SACbiU,EAAQ,GACH1Z,EAAE,EAAGA,EAAEyJ,EAAG5N,OAAQmE,IACnByJ,EAAGzJ,GAAGsU,KAAOtd,KAAKsiB,gBAClBG,EAAehQ,EAAGzJ,GAElB0Z,EAAM3d,KAAK0N,EAAGzJ,IAGtB6T,EAAQpO,SAAWiU,GAEnBF,EAAiB,CACbpW,KAAM,YACNuR,MAAO,GACPJ,MAAO,KAGI9O,SAAWgU,EAAe,CAAC5F,EAAS4F,GAAgB,CAAC5F,QAEpE2F,EAAiB3F,EAGzB,OAAO2F,GAGX7f,EAAK2d,YAAc,WACf,IAAItc,EAAWhE,KAAKgE,SAEpB,OAAIA,EAAS2e,cACD3e,EAASoB,OAAO,GAAGwd,YAAc5e,EAASoB,OAAOP,OAAS,EAAKb,EAASoB,OAAO,GAAKpB,EAASoB,OAAO,GAGzGpB,GAGXrB,EAAKge,wBAA0B,SAAS7b,EAAM3C,GAC1C,GAAI2C,EAAK6d,cAAe,CACpB,IAAIE,EACA7e,EASJ,GARIc,EAAKM,OAAO,GAAGwd,YACfC,EAAa/d,EAAKM,OAAO,GACzBpB,EAAWc,EAAKM,OAAO,KAEvByd,EAAa/d,EAAKM,OAAO,GACzBpB,EAAWc,EAAKM,OAAO,IAGd,WAATjD,EACA,OAAO0gB,EAEP/d,EAAOd,EAIf,GAAIc,EAAKiF,YACL,IAAK,IAAInF,EAAI,EAAGA,EAAIE,EAAKM,OAAOP,OAAQD,IACpC,GAAIE,EAAKM,OAAOR,GAAGyG,MAAMvL,IAAMqC,EAC3B,OAAO2C,EAAKM,OAAOR,GAK/B,MAAY,UAARzC,GAAoB2C,EAAK8C,QAAU9C,EAAK8C,OAAO+a,cACxChgB,EAAKge,wBAAwB7b,EAAK8C,OAAQzF,GAG9C,OAGRsO,WAAS,CACR,IAAIqS,EAAgBzf,IAAO,IAAMvD,GAAI,GACrC6C,EAAKogB,gBAAkB,IAAIzM,IAAgBwM,EAAezf,IAAOyf,GAAelb,OAAO,GAAI,CACvFob,UAAU,IAIlB,OAAOrgB,GAGX","file":"_chunks/chunk.6539.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\n/**\n * Main namespace for all tree related things\n */\nimport layoutModule from '../core/core.layout';\nimport {isNotNullORUndefined, cloneCustomAttributes} from '../util/utils.common';\nimport jQuery from 'jquery'\n\nvar dynamicTree = {\n    /**\n     * tree map, use to find/store trees, ex: trees['myId']\n     * Tree constructor registers the tree automatically in here\n     */\n    trees: {},\n    /**\n     * node index map, helps to find any node by id\n     * TreeNode constructor registers the node automatically in here\n     */\n    nodes: {},\n    /**\n     * Current edited node\n     */\n    treeNodeEdited: null,\n    /**\n     * If true all changes of node title will be ignored\n     */\n    editaborted: false,\n    /**\n     *  The identifier of active tree.\n     */\n    activeTreeId: null,\n    /*\n     * The Tree Object.\n     *\n     * @param id {String} - tree id.\n     * @param options {JSON Object} - Set of configuration options for tree :\n     * <ul>\n     * <li>root {Tree Node} - Root Node</li>\n     * <li>bShowRoot {Boolean} - true if you want to show tree root node, false otherwise</li>\n     * <li>handleNodeOnDblclick {Boolean} - false if you don't want to handle node on dblclick</li>\n     * <li>multiSelectEnabled {Boolean} - true if you want select more then one node at the same time</li>\n     * <li>showAllNodesOnStartup {Boolean} - Shows/Hides subnodes on startup</li>\n     * <li>treeClassName {String} - a css class to override dynamicTree.Tree.DEFAULT_TREE_CLASS_NAME</li>\n     * <li>dragPattern {String} - cssStyle pattern for which dragging is enabled</li>\n     * <li>dropClasses {Array} - array of class names which can be dropped onto a tree node</li>\n     * <li>dragClasses {String} - string with class names which will be used for modifying ghost of the tree node while dragging</li>\n     * <li>selectOnMousedown (Boolean)</li> - should selection occure on mousedown (otherwise its on mouseup)</li>\n     * <li>regionID (String)</li> - where is this tree located (e.g. AVAILABLE_FIELDS)\n     * </ul>\n     */\n    Tree: function (id, options) {\n        this.id = id;\n        if (options) {\n            this.setRootNode(options.root);\n            this.bShowRoot = !!options.bShowRoot;\n            this.handleNodeOnDblclick = options.handleNodeOnDblclick !== undefined ? options.handleNodeOnDblclick : true;\n            this.multiSelectEnabled = !!options.multiSelectEnabled;\n            this.showAllNodesOnStartup = !!options.showAllNodesOnStartup;\n            this.treeClassName = options.treeClassName ? options.treeClassName : '';\n            this.dragPattern = options.dragPattern;\n            this.dragClasses = options.dragClasses;\n            this.dropClasses = options.dropClasses;\n            this.selectOnMousedown = options.selectOnMousedown;\n            this.regionID = options.regionID;\n            this.scroll = options.scroll;\n            this.templateDomId = options.templateDomId ? options.templateDomId : this.DEFAULT_TREE_TEMPLATE_ID;\n            this.allowHyperlinks = !options.escapeHyperlinks;\n        } else {\n            this.templateDomId = this.DEFAULT_TREE_TEMPLATE_ID;\n            this.handleNodeOnDblclick = true;\n        }\n        this.stateObject = {};\n        this.sortNodes = true;\n        this.sorters = [\n            this.sortByOrder,\n            this.sortByName\n        ];\n        this.selectedNodes = [];\n        this.TREE_NN_ITEMS_SELECTED = '#{count} items selected';    // self-indexing\n        // self-indexing\n        dynamicTree.trees[this.id] = this;\n        this._createFromTemplate();\n        this.refreshStyle();\n        this._registerEvents();\n        this._registerCustomScroll();\n    },\n    /**\n     * Global node id counter.\n     */\n    getNextId: function () {\n        var nextId = 1;    // private static var\n        // private static var\n        return function () {\n            return nextId++;\n        };\n    }(),\n    /**\n     * Returns the lasts tree which was active by mouse down event on tree container.\n     */\n    getActiveTree: function () {\n        return dynamicTree.trees[dynamicTree.activeTreeId];\n    },\n    /**\n     * Returns tree node for the specified node identifier.\n     *\n     * @param nodeID the identifier of the node.\n     */\n    getTreeNode: function (nodeID) {\n        return dynamicTree.nodes[nodeID];\n    },\n    /**\n     * Returns the value from the localStorage by the specified name.\n     *\n     * @param name the name.\n     */\n    getStorageVal: function (name) {\n        var tree = JSON.parse(window.localStorage.getItem('dynamicTree')) || {};\n        return tree[name] || null;\n    },\n    /**\n     * Stores the value in the localStorage using specified name.\n     *\n     * @param name the name.\n     * @param value the value.\n     */\n    setStorageVal: function (name, value) {\n        var localStorage = window.localStorage;\n        var tree = JSON.parse(localStorage.getItem('dynamicTree')) || {};\n        tree[name] = value;\n        try {\n            localStorage.setItem('dynamicTree', JSON.stringify(tree));\n        } catch (e) {\n            // TODO: use our logger\n            /*eslint-disable-next-line no-console*/\n            window.console && console.log(e);\n        }\n    },\n    _templateHash: {}\n};    /**\n *  Name(s) of CSS class(es) for the default tree.\n */\n/**\n *  Name(s) of CSS class(es) for the default tree.\n */\ndynamicTree.Tree.addVar('DEFAULT_TREE_TEMPLATE_ID', 'list_responsive_collapsible');    /**\n * The name of the CSS class which is used to hide the root.\n */\n/**\n * The name of the CSS class which is used to hide the root.\n */\ndynamicTree.Tree.addVar('HIDE_ROOT_CLASS_NAME', 'hideRoot');    /**\n * Returns the identifier of the tree.\n */\n/**\n * Returns the identifier of the tree.\n */\ndynamicTree.Tree.addMethod('getId', function () {\n    return this.id;\n});    /**\n * Returns the tree DOM element.\n */\n/**\n * Returns the tree DOM element.\n */\ndynamicTree.Tree.addMethod('_getElement', function () {\n    if (!this._element) {\n        this._element = jQuery('#' + this.id)[0];\n    }\n    return this._element;\n});    /**\n * Returns the tree DOM element.\n */\n/**\n * Returns the tree DOM element.\n */\ndynamicTree.Tree.addMethod('_createFromTemplate', function () {\n    if (this._getElement()) {\n        this._getElement().insert({ after: this._getTemplateElement(this._getElement()) });\n        this._getElement().remove();\n        this._element = null;\n        this._getElement() && this._getElement().update();\n    }    //disableSelectionWithoutCursorStyle(this._getElement());\n});    /**\n *\n */\n/**\n *\n */\ndynamicTree.Tree.addMethod('_registerCustomScroll', function () {\n    if (!this.scroll && this._getElement()) {\n        var scrollBar = this._getElement().up(layoutModule.SWIPE_SCROLL_PATTERN);\n        if (scrollBar) {\n            var scroll = layoutModule.scrolls.get(scrollBar.identify());\n            scroll && (this.scroll = scroll);    //            if (this.scroll /*&& this.scroll.tree != this*/) {\n            //                this.scroll.tree = this;\n            //\n            //                var onScrollStart = this.scroll.options.onScrollStart;\n            //\n            //                this.scroll.options.onScrollStart = function(e) {\n            //                    onScrollStart && onScrollStart();\n            //                    this.tree.revertSelection(e);\n            //                }\n            //            }\n        }\n    }    //disableSelectionWithoutCursorStyle(this._getElement());\n});    /**\n *  Sets root node.\n *\n * @param rootNode the root node to be set.\n */\n/**\n *  Sets root node.\n *\n * @param rootNode the root node to be set.\n */\ndynamicTree.Tree.addMethod('setRootNode', function (rootNode) {\n    this.rootNode = rootNode;\n    if (this.rootNode) {\n        this.rootNode.treeId = this.id;\n    }\n});    /**\n * Returns the root node.\n */\n/**\n * Returns the root node.\n */\ndynamicTree.Tree.addMethod('getRootNode', function () {\n    return this.rootNode;\n});    /**\n * Refresh the style of the tree.\n */\n/**\n * Refresh the style of the tree.\n */\ndynamicTree.Tree.addMethod('refreshStyle', function () {\n    var element = this._getElement();\n    if (element.templateClassName) {\n        element.className = element.templateClassName;\n    }\n    this.treeClassName && jQuery(element).addClass(this.treeClassName);\n    if (this.bShowRoot) {\n        jQuery(element).removeClass(this.HIDE_ROOT_CLASS_NAME);\n    } else {\n        jQuery(element).addClass(this.HIDE_ROOT_CLASS_NAME);\n    }\n});    /**\n *  Resets the list of selected nodes.\n */\n/**\n *  Resets the list of selected nodes.\n */\ndynamicTree.Tree.addMethod('resetSelected', function () {\n    this._prevSelectedNodes = this.selectedNodes.clone();\n    this.selectedNodes = [];\n});\ndynamicTree.Tree.addMethod('revertSelection', function (evt) {\n    //console.log(\"Revert\");\n    var nodes = this._prevSelectedNodes.clone();\n    nodes = nodes.concat(this.selectedNodes);\n    this.selectedNodes = this._prevSelectedNodes.clone();\n    for (var i = 0; i < nodes.length; i++) {\n        nodes[i].refreshStyle();\n    }\n});    /**\n * Returns the first selected node from the list of selected nodes. If no nodes were selected then null returned.\n */\n/**\n * Returns the first selected node from the list of selected nodes. If no nodes were selected then null returned.\n */\ndynamicTree.Tree.addMethod('getSelectedNode', function () {\n    return this.selectedNodes.length === 0 ? null : this.selectedNodes[0];\n});    /**\n * Adds the specified node to the list of selected nodes.\n *\n * @param node the node.\n */\n/**\n * Adds the specified node to the list of selected nodes.\n *\n * @param node the node.\n */\ndynamicTree.Tree.addMethod('addNodeToSelected', function (node) {\n    this.selectedNodes.push(node);\n    this._prevSelectedNodes = this.selectedNodes.clone();\n});    /**\n * Removes the specified node from the list of selected nodes.\n *\n * @param the node.\n */\n/**\n * Removes the specified node from the list of selected nodes.\n *\n * @param the node.\n */\ndynamicTree.Tree.addMethod('removeNodeFromSelected', function (node) {\n    for (var i = 0; i < this.selectedNodes.length; i++) {\n        if (this.selectedNodes[i] == node) {\n            this._prevSelectedNodes = this.selectedNodes.clone();\n            this.selectedNodes.splice(i, 1);\n            return;\n        }\n    }\n});    /**\n * Returns <code>true</code> if specified node is selected, <code>false</code> otherwise.\n *\n * @param node the node.\n */\n/**\n * Returns <code>true</code> if specified node is selected, <code>false</code> otherwise.\n *\n * @param node the node.\n */\ndynamicTree.Tree.addMethod('isNodeSelected', function (node) {\n    var len = this.selectedNodes && this.selectedNodes.length;\n    if (len) {\n        for (var i = 0; i < len; i++) {\n            if (this.selectedNodes[i] == node) {\n                return true;\n            }\n        }\n    }\n    return false;\n});    /**\n * Resorts the sub-tree for the specified parent node.\n *\n * @param parentNode the parent node.\n */\n/**\n * Resorts the sub-tree for the specified parent node.\n *\n * @param parentNode the parent node.\n */\ndynamicTree.Tree.addMethod('resortSubtree', function (parentNode) {\n    if (parentNode) {\n        parentNode.resortChilds();\n        for (var i = 0; i < parentNode.childs.length; i++) {\n            this.resortSubtree(parentNode.childs[i]);\n        }\n    }\n});    /**\n * Resorts all the tree.\n */\n/**\n * Resorts all the tree.\n */\ndynamicTree.Tree.addMethod('resortTree', function () {\n    if (this.sortNodes) {\n        this.resortSubtree(this.rootNode);\n    }\n});    /**\n * Reads states from the localStorage.\n */\n/**\n * Reads states from the localStorage.\n */\ndynamicTree.Tree.addMethod('readStates', function () {\n    var states = dynamicTree.getStorageVal('tree' + this.id);\n    if (states) {\n        for (var key in states) {\n            this.stateObject[key] = states[key];\n        }\n    }\n});    /**\n * Returns the state of the specified node.\n *\n * @param nodeID the identifier of the state to be returned.\n */\n/**\n * Returns the state of the specified node.\n *\n * @param nodeID the identifier of the state to be returned.\n */\ndynamicTree.Tree.addMethod('getState', function (nodeID) {\n    var state;\n    var stateObject = this.stateObject;\n    if (stateObject[nodeID]) {\n        state = stateObject[nodeID];\n        if (state === null || state === '') {\n            state = dynamicTree.TreeNode.State.CLOSED;\n        }\n        return state;\n    }\n    return dynamicTree.TreeNode.State.CLOSED;\n});    /**\n *  Writes new state of the specified node to the localStorage.\n *\n * @param nodeID the identifier of the node.\n * @param newstate is a new state.\n */\n/**\n *  Writes new state of the specified node to the localStorage.\n *\n * @param nodeID the identifier of the node.\n * @param newstate is a new state.\n */\ndynamicTree.Tree.addMethod('writeStates', function (nodeID, newstate) {\n    var obj = {};\n    var stateObject = this.stateObject;\n    for (var key in stateObject) {\n        obj[key] = stateObject[key];\n    }\n    stateObject[nodeID] = newstate;\n    if (newstate != null) {\n        obj[nodeID] = newstate;\n    }\n    dynamicTree.setStorageVal('tree' + this.id, obj);\n});    /**\n * Resets states.\n */\n/**\n * Resets states.\n */\ndynamicTree.Tree.addMethod('resetStates', function () {\n    this.stateObject = {};\n    dynamicTree.setStorageVal('tree' + this.id, '');\n});    /*\n * Comparer for sorting.\n * Calls sorters on order they appear in tree.sorters array until sorter returns non-zero value\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\n/*\n * Comparer for sorting.\n * Calls sorters on order they appear in tree.sorters array until sorter returns non-zero value\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\ndynamicTree.Tree.addMethod('comparer', function (node1, node2) {\n    var i, k;\n    if (this.sorters && this.sorters.length) {\n        for (i = 0; i < this.sorters.length; i++) {\n            k = this.sorters[i](node1, node2);\n            if (k !== 0) {\n                return k;\n            }\n        }\n    }\n    return 0;\n});    /**\n * Renders tree into a container.\n */\n/**\n * Renders tree into a container.\n */\ndynamicTree.Tree.addMethod('renderTree', function () {\n    this.readStates();\n    this.stopWaiting();\n    this.refreshStyle();    /* Setting event handlers */\n    /* Setting event handlers */\n    var treeContainer = this._getElement();\n    if (this.rootNode) {\n        this.writeStates(this.rootNode.id, dynamicTree.TreeNode.State.OPEN);\n        this.rootNode.showNode();\n        this.rootNode.render(treeContainer);\n        this.refreshScroll();\n    }    //TODO Removed for now - lack of available event causes issues\n    //var selected = this.getSelectedNode() || (this.bShowRoot ? this.rootNode : this.rootNode.getFirstChild()) ;\n    //selected && selected.select();\n});\ndynamicTree.Tree.addMethod('refreshScroll', function (delay) {\n    if (delay) {\n        setTimeout(function () {\n            this.scroll && this.scroll.refresh();\n        }.bind(this), delay);\n    } else {\n        this.scroll && this.scroll.refresh();\n    }\n});    /**\n *\n */\n/**\n *\n */\ndynamicTree.Tree.addMethod('binarySearchOfNode', function (nodes, node) {\n    var low = 0;\n    var high = nodes.length - 1;\n    while (low <= high) {\n        var mid = Math.round((low + high) / 2);\n        var midNode = nodes[mid];\n        if (this.comparer(midNode, node) < 0) {\n            low = mid + 1;\n        } else if (this.comparer(midNode, node) > 0) {\n            high = mid - 1;\n        } else {\n            return mid;    // key found\n        }\n    }\n    return -(low + 1);    // key not found.\n});    /**\n * Deselects all the nodes.\n */\n/**\n * Deselects all the nodes.\n */\ndynamicTree.Tree.addMethod('_deselectAllNodes', function (event) {\n    if (this.selectedNodes.length > 0) {\n        var nodes = this.selectedNodes.clone();\n        this.resetSelected();\n        for (var i = 0; i < nodes.length; i++) {\n            nodes[i].refreshStyle();\n        }\n        if (event) {\n            var tree = dynamicTree.trees[this.id];\n            tree.fireUnSelectAllEvent(event);\n        }\n    }\n});\ndynamicTree.Tree.addMethod('_selectOrEditNode', function (evt, node, ctrlHeld, shiftHeld, isContextMenuBtn, options) {\n    var min, max, parent;\n    var shouldFocus = options && options.shouldFocus;\n    var isContextMenu = node.isSelected() && isContextMenuBtn;\n    var isDeselect = this.multiSelectEnabled && node.isSelected() && ctrlHeld && !isContextMenu;\n    var isEdit = node.isSelected() && dynamicTree.treeNodeEdited !== node && !this.multiSelectEnabled && !ctrlHeld && !isContextMenu;\n    var isDoEndEdit = dynamicTree.treeNodeEdited != null && (isDeselectAll || isDeselect);\n    var isRangeSelect = this.multiSelectEnabled && !node.isSelected() && shiftHeld && isNotNullORUndefined(this._lastSelectedNode) && this._lastSelectedNode.parent === node.parent;\n    var isRangeReduce = this.multiSelectEnabled && node.isSelected() && shiftHeld && isNotNullORUndefined(this._lastSelectedNode) && this._lastSelectedNode.parent === node.parent;\n    var isDeselectAll = !this.multiSelectEnabled && !node.isSelected() || this.multiSelectEnabled && !ctrlHeld && !node.isSelected();\n    var isSelect = !node.isSelected() || isDeselectAll && this.selectedNodes.length > 1 || shouldFocus;\n\n    if (!shiftHeld || !this._lastSelectedNode) {\n        this._lastSelectedNode = node;\n    }\n    if (isDeselect) {\n        node.deselect(evt);\n    }\n    if (isDeselectAll) {\n        this._deselectAllNodes(evt);\n    }\n    if (isEdit && !shouldFocus) {\n        node.edit(evt);\n        return;\n    }\n    if (isDoEndEdit) {\n        dynamicTree.treeNodeEdited.doEndEdit(evt);\n    }\n    if (isRangeSelect || isRangeReduce) {\n        parent = node.parent;\n        var start = parent.childs.indexOf(this._lastSelectedNode);\n        var end = parent.childs.indexOf(node);\n        min = Math.min(start, end);\n        max = Math.max(start, end);\n    }\n    if (isRangeSelect) {\n        if (min > -1) {\n            for (var i = min; i <= max; i++) {\n                parent.childs[i].select(evt);\n            }\n        } else {\n            parent.childs[max].select(evt);\n        }\n        return;\n    }\n    if (isRangeReduce) {\n        for (var j = 0; j < min; j++) {\n            parent.childs[j].deselect(evt);\n        }\n        for (var k = max + 1; k < parent.childs.length; k++) {\n            parent.childs[k].deselect(evt);\n        }\n        return;\n    }\n    if (isSelect) {\n        node.select(evt, node.nofocus, options);\n    }\n});\ndynamicTree.Tree.addMethod('_deselectOthers', function (evt, node, ctrlHeld, shiftHeld, isContextMenuBtn) {\n    var isDeselectOther = this.multiSelectEnabled && this.selectedNodes.length > 1 && node.isSelected() && !(ctrlHeld || shiftHeld || isContextMenuBtn);\n    isDeselectOther && this.selectedNodes.findAll(function (n) {\n        return n != node;\n    }.bind(this)).invoke('deselect', evt);\n});    /**\n * find the next node in the tree (ignoring hierachy) and select it\n * @param {Object} node - current node\n */\n/**\n * find the next node in the tree (ignoring hierachy) and select it\n * @param {Object} node - current node\n */\ndynamicTree.Tree.addMethod('_selectNextNode', function (node, event) {\n    //recurse up the parent chain until we get a parent with a next sibling\n    function getNextUncle(currentNode) {\n        currentNode = currentNode.parent;\n        if (!currentNode) {\n            return null;\n        } else if (currentNode.nextSibling) {\n            return currentNode.nextSibling;\n        }\n        return getNextUncle(currentNode);\n    }\n    var nextNode = node.isOpen() && node.getFirstChild() || node.nextSibling || getNextUncle(node);\n    nextNode && (node.deselect() && nextNode.select(event, null, { shouldFocus: true }));\n});    /**\n * find the previous node in the tree (ignoring hierachy) and select it\n * @param {Object} node - current node\n */\n/**\n * find the previous node in the tree (ignoring hierachy) and select it\n * @param {Object} node - current node\n */\ndynamicTree.Tree.addMethod('_selectPreviousNode', function (node, event) {\n    function getLastVisibleDescendant(currentNode) {\n        return !(currentNode.isOpen() && currentNode.hasChilds()) && currentNode || getLastVisibleDescendant(currentNode.getLastChild());\n    }\n    var prevNode = node.prevSibling && getLastVisibleDescendant(node.prevSibling) || node.parent;\n    prevNode && prevNode.name && (node.deselect() && prevNode.select(event, null, { shouldFocus: true }));\n});    /**\n * if open go to first child node, otherwise open node\n * @param {Object} node\n */\n/**\n * if open go to first child node, otherwise open node\n * @param {Object} node\n */\ndynamicTree.Tree.addMethod('_selectInwards', function (node, event) {\n    if (node.isOpen()) {\n        var inNode = node.getFirstChild();\n        inNode && node.deselect() && inNode.select(event, null, { shouldFocus: true })\n    } else {\n        node.handleNode(event)\n    }\n});    /**\n * if closed or leaf go to parent, otherwise close node\n * @param {Object} node\n */\n/**\n * if closed or leaf go to parent, otherwise close node\n * @param {Object} node\n */\ndynamicTree.Tree.addMethod('_selectOutwards', function (node, event) {\n    if (!node.isHiddenRootNode()) {\n        if (node.isOpen()) {\n            node.handleNode(event);\n        } else {\n            var outNode = node.parent;\n            outNode && outNode.name && node.deselect() && outNode.select(event, null, { shouldFocus: true });\n        }\n    }\n});\n\ndynamicTree.Tree.addMethod('_expandOrCollapse', function (node, event) {\n    node.handleNode(event)\n});\n\ndynamicTree.Tree.addMethod('_selectFirstVisibleNode', function (node, event) {\n    node.deselect();\n    while (node.parent) {\n        node = node.parent;\n    }\n    if (!node.name) {\n        node = node.childs[0];\n    }\n    node.select(event, null, { shouldFocus: true });\n});\n\ndynamicTree.Tree.addMethod('_selectLastVisibleNode', function (node, event) {\n    node.deselect();\n    while (node.parent) {\n        node = node.parent;\n    }\n\n    while (node.isOpen() && node.childs.length > 0) {\n        node = node.childs[node.childs.length - 1]\n    }\n    node.select(event, null, { shouldFocus: true });\n});\n\n\n\n/*\n * Sorter by order value assigned to nodes.\n * Order has to be a number. Node that has some order is considered to be\n * LESS than node that does not have any order (order=null)\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\n/*\n * Sorter by order value assigned to nodes.\n * Order has to be a number. Node that has some order is considered to be\n * LESS than node that does not have any order (order=null)\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\ndynamicTree.Tree.addMethod('sortByOrder', function (node1, node2) {\n    var order1 = node1.orderNumber;\n    var order2 = node2.orderNumber;\n    if (order1 == null && order2 == null) {\n        return 0;\n    }\n    if (order1 == null) {\n        return 1;\n    }\n    if (order2 == null) {\n        return -1;\n    }\n    return order1 - order2;\n});    /*\n * Sorter alphabetically by node names\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\n/*\n * Sorter alphabetically by node names\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\ndynamicTree.Tree.addMethod('sortByName', function (node1, node2) {\n    var n1 = node1.name.toLowerCase();\n    var n2 = node2.name.toLowerCase();\n    return n1 > n2 ? 1 : n1 < n2 ? -1 : 0;\n});    /**\n * DOM identifier of the tree wait template.\n */\n/**\n * DOM identifier of the tree wait template.\n */\ndynamicTree.Tree.addVar('TREE_WAIT_TEMPLATE_DOM_ID', 'list_responsive_collapsible:loading');    /**\n * Makes visual effect of wait for tree loading.\n */\n/**\n * Makes visual effect of wait for tree loading.\n */\ndynamicTree.Tree.addMethod('wait', function () {\n    jQuery('#' + this.id).html(document.getElementById(this.TREE_WAIT_TEMPLATE_DOM_ID).clone(true))[0];\n});    /**\n * Removes visual effect of wait for tree loading.\n */\n/**\n * Removes visual effect of wait for tree loading.\n */\ndynamicTree.Tree.addMethod('stopWaiting', function () {\n    jQuery('#' + this.id).html('')[0];\n});\ndynamicTree.Tree.addMethod('_getTemplateElement', function (currentElement) {\n    var id = this.templateDomId;    /**\n      * @see comment in _getHeaderTemplateElement in dynamicTree.treenode.js for an explanation of the commented below\n      */\n    //    if (!dynamicTree._templateHash[id]) {\n    //        dynamicTree._templateHash[id] = $(id);\n    //    }\n    //    var clone = dynamicTree._templateHash[id].clone(true);\n    /**\n      * @see comment in _getHeaderTemplateElement in dynamicTree.treenode.js for an explanation of the commented below\n      */\n    //    if (!dynamicTree._templateHash[id]) {\n    //        dynamicTree._templateHash[id] = $(id);\n    //    }\n    //    var clone = dynamicTree._templateHash[id].clone(true);\n    var clone = document.getElementById(id).clone(true);\n    jQuery(clone).attr('id', this.getId());\n    clone.templateId = id;\n    clone.templateClassName = clone.className;\n    cloneCustomAttributes(currentElement, clone);\n    return clone;\n});\n\nexport default dynamicTree;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\n/*\n * The TreeNode Object\n *\n * @param options {JSON Object} - Set of configuration options for tree node :\n * <ul>\n * <li>name {String} - The title of this node</li>\n * <li>param {JSON Object} - A parameter, this can be pretty much anything. (eg. an array with information).</li>\n * <li>orderNumber {String} - If one is given the nodes will be sorted by this (else they`ll be sorted alphabetically (If sorting is on).</li>\n * </ul>\n */\n\nimport dynamicTree from './dynamicTree.tree';\nimport {isArray, isIPad, cancelEventBubbling} from '../util/utils.common';\nimport layoutModule from '../core/core.layout';\nimport xssUtil from 'js-sdk/src/common/util/xssUtil';\nimport jQuery from 'jquery';\n\ndynamicTree.TreeNode = function (options) {\n    this.id = dynamicTree.getNextId();\n    this.treeId = null;    // tree sets it\n    // tree sets it\n    this.name = options.name != null ? options.name : this.DEFAULT_NAME;\n    this.param = options.param != null ? options.param : {};\n    this.orderNumber = options.orderNumber != null ? options.orderNumber : null;\n    this.childs = [];\n    this.parent = null;    // default types\n    // used to separate folders from leaves\n    // default types\n    // used to separate folders from leaves\n    this.Types = { Folder: new dynamicTree.TreeNode.Type(this.FOLDER_TYPE_NAME) };\n    this.isloaded = false;\n    this.delayedRendering = true;\n    this.haschilds = false;\n    this.editable = false;\n    this.isWaiting = false;\n    this.hidden = false;\n    this.isDropTarget = false;\n    this.keydownSubFocus = false;   // self-indexing\n    // self-indexing\n    dynamicTree.nodes[this.id] = this;\n};    /**\n *\n * @param name\n * @param cssClassName\n * @param templateDomId\n */\n/**\n *\n * @param name\n * @param cssClassName\n * @param templateDomId\n */\ndynamicTree.TreeNode.Type = function (name, options) {\n    this.name = name;\n    if (options) {\n        this.cssClassName = options.cssClassName;\n        this.templateDomId = options.templateDomId;\n    }\n};    /**\n *\n */\n/**\n *\n */\ndynamicTree.TreeNode.State = {\n    OPEN: 'open',\n    CLOSED: 'closed'\n};\ndynamicTree.TreeNode.addVar('FOLDER_TYPE_NAME', 'com.jaspersoft.jasperserver.api.metadata.common.domain.Folder');\ndynamicTree.TreeNode.addVar('DEFAULT_NAME', 'unset name');\ndynamicTree.TreeNode.addVar('NODE_ID_PREFIX', 'node');\ndynamicTree.TreeNode.addVar('SUB_NODE_ID_SUFFIX', 'sub');\ndynamicTree.TreeNode.addVar('HANDLER_ID_PREFIX', 'handler');\ndynamicTree.TreeNode.addVar('NODE_CLASS_NAME', 'node').addVar('LEAF_CLASS_NAME', 'leaf').addVar('OPEN_CLASS_NAME', 'open').addVar('CLOSED_CLASS_NAME', 'closed').addVar('SELECTED_CLASS_NAME', 'selected').addVar('LOADING_CLASS_NAME', 'loading').addVar('ROOTS_CLASS_NAME', 'roots').addVar('KEYDOWN_SUB_FOCUS_CLASS_NAME', 'focus-visible');    //\n// Templates for tree UI\n//\n//\n// Templates for tree UI\n//\ndynamicTree.TreeNode.addVar('nodeHeaderTemplateDomId', 'list_responsive_collapsible:leaf');\ndynamicTree.TreeNode.addVar('nodeFooterTemplateDomId', 'list_responsive_collapsible');\ndynamicTree.TreeNode.addVar('nodeInputTemplateDomId', 'list_responsive_collapsible:input');    //selectable - defaults to false\n//selectable - defaults to false\ndynamicTree.TreeNode.addVar('isSelectable', false);    /**\n * Gets ID of the tree to which this node belongs.\n *\n * @return {String}\n */\n/**\n * Gets ID of the tree to which this node belongs.\n *\n * @return {String}\n */\ndynamicTree.TreeNode.addMethod('getTreeId', function () {\n    return this.treeId || this.parent && this.parent.getTreeId();\n});    /**\n * Gets state of the node, that is saved in cookies.\n * All possible values of the state are defined in {@see dynamicTree.TreeNode.State}.\n *\n * @return {String} -\n */\n/**\n * Gets state of the node, that is saved in cookies.\n * All possible values of the state are defined in {@see dynamicTree.TreeNode.State}.\n *\n * @return {String} -\n */\ndynamicTree.TreeNode.addMethod('getState', function () {\n    return dynamicTree.trees[this.getTreeId()].getState(this.id);\n});    /**\n * Use this method to distinguish node from leaf. Override it if you have changed supported Types by this node.\n */\n/**\n * Use this method to distinguish node from leaf. Override it if you have changed supported Types by this node.\n */\ndynamicTree.TreeNode.addMethod('isParent', function () {\n    return this.param.type == this.Types.Folder.name;\n});    /**\n * Adds child to the node. New child will be shown if disabled delayed rendering.\n *\n * @param childNode {dynamicTree.TreeNode} - the node which should be added as child\n */\n/**\n * Adds child to the node. New child will be shown if disabled delayed rendering.\n *\n * @param childNode {dynamicTree.TreeNode} - the node which should be added as child\n */\ndynamicTree.TreeNode.addMethod('addChild', function (child) {\n    if (!this.isParent()) {\n        return;\n    }\n    var lastNode = this.childs[this.childs.length - 1];\n    if (lastNode) {\n        lastNode.nextSibling = child;\n        child.prevSibling = lastNode;\n    }\n    this.childs.push(child);\n    child.parent = this;\n    this.resortChilds();\n    if (this.delayedRendering) {\n        return;\n    }\n    child.showNode();\n    child.render(this._getChildrenElement(), child.nextSibling);\n});    /**\n * Removes the node from the children of this node\n *\n * @param childNode {dynamicTree.TreeNode}\n */\n/**\n * Removes the node from the children of this node\n *\n * @param childNode {dynamicTree.TreeNode}\n */\ndynamicTree.TreeNode.addMethod('removeChild', function (child) {\n    for (var i = 0; i < this.childs.length; i++) {\n        if (this.childs[i] == child) {\n            this.childs.splice(i, 1);\n            break;\n        }\n    }\n    child.deselect();\n    if (this.delayedRendering) {\n        return;\n    }\n    var element = child._getElement();\n    if (element) {\n        element.remove();\n    }\n});    /**\n * Resort all children of this node and updates prevSibling and nextSibling\n */\n/**\n * Resort all children of this node and updates prevSibling and nextSibling\n */\ndynamicTree.TreeNode.addMethod('resortChilds', function () {\n    var treeId = this.getTreeId();\n    var tree = dynamicTree.trees[treeId];\n    if (tree && tree.sortNodes && isArray(this.childs)) {\n        this.childs.sort(function (a, b) {\n            return tree.comparer(a, b);\n        });\n        var count = this.childs.length;\n        while (count--) {\n            var node = this.childs[count];\n            node.prevSibling = this.childs[count - 1];\n            node.nextSibling = this.childs[count + 1];\n        }\n    }\n});    /**\n * Removes all children of this node\n */\n/**\n * Removes all children of this node\n */\ndynamicTree.TreeNode.addMethod('resetChilds', function () {\n    this.childs = [];\n});    /**\n * Set to true if node has children.\n *\n * @param {Boolean}\n */\n/**\n * Set to true if node has children.\n *\n * @param {Boolean}\n */\ndynamicTree.TreeNode.addMethod('setHasChilds', function (hasChilds) {\n    this.haschilds = hasChilds;\n});    /**\n * Returns true if node has children.\n *\n * @return {Boolean}\n */\n/**\n * Returns true if node has children.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('hasChilds', function () {\n    if (this.haschilds) {\n        return true;\n    }\n    return this.getChildCount() > 0;\n});    /**\n * Gets count of children of the node.\n *\n * @return {Number}\n */\n/**\n * Gets count of children of the node.\n *\n * @return {Number}\n */\ndynamicTree.TreeNode.addMethod('getChildCount', function () {\n    return this.childs.length;\n});    /**\n * Gets first child of the node.\n *\n * @return {dynamicTree.TreeNode}\n */\n/**\n * Gets first child of the node.\n *\n * @return {dynamicTree.TreeNode}\n */\ndynamicTree.TreeNode.addMethod('getFirstChild', function () {\n    if (this.hasChilds()) {\n        return this.childs[0];\n    }\n    return null;\n});    /**\n * Gets last child of the node.\n *\n * @return {dynamicTree.TreeNode}\n */\n/**\n * Gets last child of the node.\n *\n * @return {dynamicTree.TreeNode}\n */\ndynamicTree.TreeNode.addMethod('getLastChild', function () {\n    if (this.hasChilds()) {\n        return this.childs[this.childs.length - 1];\n    }\n    return null;\n});\ndynamicTree.TreeNode.addMethod('_getElement', function (container) {\n    if (!this._element) {\n        this._element = jQuery('#' + this.NODE_ID_PREFIX + this.id)[0];\n    }\n    return this._element;\n});\ndynamicTree.TreeNode.addMethod('_getTitle', function () {\n    var titleHolder = this._getElement().childElements()[0];\n    titleHolder.cleanWhitespace();\n    var title = titleHolder.childNodes[titleHolder.childNodes.length - 1];\n    if (title.nodeName !== '#text') {\n        title = document.createTextNode('');\n        titleHolder.appendChild(title);\n    }\n    return title;\n});\ndynamicTree.TreeNode.addMethod('_getTitleInputElement', function () {\n    return jQuery(this._getElement().getElementsByTagName('input')[0])[0];\n});\ndynamicTree.TreeNode.addMethod('_getChildrenElement', function () {\n    if (!this._childrenElement) {\n        this._childrenElement = jQuery('#' + this.NODE_ID_PREFIX + this.id + this.SUB_NODE_ID_SUFFIX)[0];\n    }\n    return this._childrenElement;\n});    /**\n * Returns true if the node is open.\n *\n * @return {Boolean}\n */\n/**\n * Returns true if the node is open.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('isOpen', function () {\n    return this.getState() === dynamicTree.TreeNode.State.OPEN;\n});    /**\n * Change display name of the node.\n *\n * @param newName {String}\n */\n/**\n * Change display name of the node.\n *\n * @param newName {String}\n */\ndynamicTree.TreeNode.addMethod('changeName', function (newName) {\n    this.name = newName;\n    this._getTitle().data = this.name;\n});    /**\n * Gets the type of the node. All possible value ara defined in Types.\n *\n * @return {dynamicTree.TreeNode.Type}\n */\n/**\n * Gets the type of the node. All possible value ara defined in Types.\n *\n * @return {dynamicTree.TreeNode.Type}\n */\ndynamicTree.TreeNode.addMethod('getType', function () {\n    for (var type in this.Types) {\n        if (this.param.type === this.Types[type].name) {\n            return this.Types[type];\n        }\n    }\n    return undefined;\n});    /**\n * Updates CSS classes of markup of the node .\n */\n/**\n * Updates CSS classes of markup of the node .\n */\ndynamicTree.TreeNode.addMethod('refreshStyle', function (element) {\n    element = jQuery(element)[0] || this._getElement();\n    if (!element) {\n        return;\n    }\n    if (element.templateClassName) {\n        element.className = element.templateClassName;\n    }\n    if (this.isParent()) {\n        jQuery(element).addClass(this.NODE_CLASS_NAME).removeClass(this.LEAF_CLASS_NAME);\n        if (!this.isWaiting) {\n            if (this.isOpen()) {\n                jQuery(element).attr('aria-expanded', true);\n                jQuery(element).addClass(this.OPEN_CLASS_NAME).removeClass(this.CLOSED_CLASS_NAME);\n            } else {\n                jQuery(element).attr('aria-expanded', false);\n                jQuery(element).addClass(this.CLOSED_CLASS_NAME).removeClass(this.OPEN_CLASS_NAME);\n            }\n        }\n    } else {\n        jQuery(element).addClass(this.LEAF_CLASS_NAME).removeClass(this.NODE_CLASS_NAME);\n    }\n    if (this.isWaiting) {\n        jQuery(element).addClass(this.LOADING_CLASS_NAME);\n    } else {\n        jQuery(element).removeClass(this.LOADING_CLASS_NAME);\n    }\n    if (this.isSelected()) {\n        jQuery(element).addClass(this.SELECTED_CLASS_NAME);\n    } else {\n        jQuery(element).removeClass(this.SELECTED_CLASS_NAME);\n    }\n    if (this.hidden) {\n        jQuery(element).addClass(layoutModule.HIDDEN_CLASS);\n    } else {\n        jQuery(element).removeClass(layoutModule.HIDDEN_CLASS);\n    }\n    if (this.param.cssClass) {\n        jQuery(element).addClass(this.param.cssClass);\n    }\n    var type = this.getType();\n    if (type && type.cssClassName) {\n        jQuery(element).addClass(type.cssClassName);\n    }\n    if (this.keydownSubFocus) {\n        jQuery(element).addClass(this.KEYDOWN_SUB_FOCUS_CLASS_NAME);\n    }\n    var subElement = jQuery(element).children();\n    this.isDropTarget && subElement && jQuery(subElement).addClass(layoutModule.DROP_TARGET_CLASS);\n    !this.isDropTarget && subElement && jQuery(subElement).removeClass(layoutModule.DROP_TARGET_CLASS);\n});\ndynamicTree.TreeNode.addMethod('_createNode', function () {\n    var id = this.id;\n    var tree = dynamicTree.trees[this.getTreeId()];\n    var templH = this._getHeaderTemplateElement();\n    templH.id = this.NODE_ID_PREFIX + id;\n    templH.tabIndex = -1;\n    this.refreshStyle(templH);\n    this.treeId = tree.id;    // DOM element link on this tree node\n    // DOM element link on this tree node\n    templH.treeNode = this;\n    var wrapper = templH.childElements()[0];\n\n    if (tree.allowHyperlinks){\n        wrapper.insert(xssUtil.softHtmlEscape(this.name, {\n            whiteList: ['a']\n        }));\n    } else {\n        wrapper.insert(xssUtil.hardEscape(this.name));\n    }\n\n    if (this.tooltip != null && this.tooltip.length > 0) {\n        wrapper.title = this.tooltip;\n    }\n    wrapper.childElements().each(function (img, index) {\n        if (index === 0) {\n            img.id = this.HANDLER_ID_PREFIX + id;\n        }\n        var tip = this.iconTooltip;\n        if (tip) {\n            img.title = isArray(tip) ? tip[index] : tip;\n        }    //    img.onselectstart = function() { return false; }\n    }.bind(this));\n    this._element = templH;\n});\ndynamicTree.TreeNode.addMethod('_createNodeChildren', function () {\n    var templF = this._getFooterTemplateElement();\n    templF.id = this.NODE_ID_PREFIX + this.id + this.SUB_NODE_ID_SUFFIX;\n    this._childrenElement = templF;\n});    /**\n * Shows the given node, and subnodes.\n */\n/**\n * Shows the given node, and subnodes.\n */\ndynamicTree.TreeNode.addMethod('showNode', function (container) {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    this._createNode();\n    if (this.isParent()) {\n        var showChildren = this.isOpen() || tree.showAllNodesOnStartup;\n        if (showChildren) {\n            this._createNodeChildren();\n            for (var z = 0; z < this.getChildCount(); z++) {\n                this.childs[z].showNode(this._getChildrenElement());\n            }\n            this.delayedRendering = false;\n            tree.fireOpenEvent(this);\n        }\n    }\n    this.render(container);\n});    /**\n * Adds the node template to the DOM.\n */\n/**\n * Adds the node template to the DOM.\n */\ndynamicTree.TreeNode.addMethod('render', function (container, beforeNode) {\n    if (Object.isUndefined(container)) {\n        return;\n    }\n    var element = jQuery(container)[0];\n    if (element) {\n        if (this._getChildrenElement()) {\n            this._getElement().insert(this._getChildrenElement());\n        }\n        if (beforeNode) {\n            element.insert(this._getElement(), { before: beforeNode._getElement() });\n        } else {\n            element.insert(this._getElement());\n        }\n    }\n});\ndynamicTree.TreeNode.addMethod('_renderChildren', function () {\n    var element = this._getElement();\n    if (element && this._getChildrenElement()) {\n        element.insert(this._getChildrenElement());\n    }\n});    /**\n *\n */\n/**\n *\n */\ndynamicTree.TreeNode.addMethod('refreshNode', function () {\n    this.refreshStyle();\n    if (this.isParent() && this.isOpen() && this.isloaded) {\n        if (this.delayedRendering) {\n            this._createNodeChildren();\n            this._renderChildren();\n        } else {\n            this._getChildrenElement().update('');\n        }\n        for (var z = 0; z < this.getChildCount(); z++) {\n            this.childs[z].showNode(this._getChildrenElement());\n        }\n        this.delayedRendering = false;\n    }\n    var tree = dynamicTree.trees[this.getTreeId()];\n    tree.refreshScroll();\n});    /**\n * Shows wait icon on the node.\n */\n/**\n * Shows wait icon on the node.\n */\ndynamicTree.TreeNode.addMethod('wait', function () {\n    this.isWaiting = true;\n    this.refreshStyle();\n});    /**\n * Hides wait icon on the node.\n */\n/**\n * Hides wait icon on the node.\n */\ndynamicTree.TreeNode.addMethod('stopWaiting', function () {\n    this.isWaiting = false;\n    this.refreshStyle();\n});    /**\n * Am I a root node and are we hiding root nodes\n *\n * @return {Boolean}\n */\n/**\n * Am I a root node and are we hiding root nodes\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('isHiddenRootNode', function () {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    return tree.rootNode == this && !tree.bShowRoot;\n});    /**\n * Deselect this node in the tree.\n *\n * @return {Boolean}\n */\n/**\n * Deselect this node in the tree.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('deselect', function (event) {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    if (tree && this.isSelected()) {\n        tree.removeNodeFromSelected(this);\n        this.refreshStyle();\n        if (event) {\n            tree.fireUnSelectEvent(this, event);\n        }\n        return true;\n    } else {\n        return false;\n    }\n});    /**\n * Select this node in the tree.\n *\n * @return {Boolean}\n */\n/**\n * Select this node in the tree.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('select', function (event, focus, options) {\n    options = options || {};\n    options.shouldFocus && !focus && this.focus(event);    // Commented out to fix bug http://bugzilla.jaspersoft.com/show_bug.cgi?id=19047\n    // Commented out to fix bug http://bugzilla.jaspersoft.com/show_bug.cgi?id=19047\n    if (!this.isSelected()) {\n        var tree = dynamicTree.trees[this.getTreeId()];\n        tree.addNodeToSelected(this);\n        this.refreshStyle();\n        !options.silent && tree.fireSelectEvent(this, event);\n        return true;\n    } else {\n        return false;\n    }\n});    /**\n * focus on this node's element\n */\n/**\n * focus on this node's element\n */\ndynamicTree.TreeNode.addMethod('focus', function (event) {\n    if (!isIPad() && this._getElement()) {\n        this._getElement().focus({preventScroll: true});\n        var caption = jQuery(this._getElement()).find('.wrap').first()[0];\n        if (caption){\n            caption.scrollIntoView({block: 'nearest', inline: 'nearest'});\n        }\n\n        const eventType = event && event.type;\n        if (eventType === 'keydown') {\n            event.preventDefault();\n            this.keydownSubFocus = true;\n        } else if (eventType === 'mouseup') {\n            this.keydownSubFocus = false;\n        }\n    }\n});    /**\n * Returns true if this node is selected in the tree.\n *\n * @return {Boolean}\n */\n/**\n * Returns true if this node is selected in the tree.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('isSelected', function () {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    return tree && tree.isNodeSelected(this);\n});\ndynamicTree.TreeNode.addMethod('_removeTitle', function () {\n    var title = this._getTitle();\n    title.data = '';\n    jQuery('#' + title.parentNode)[0].cleanWhitespace();\n});    /**\n * Begins inline edit of the node.\n *\n */\n/**\n * Begins inline edit of the node.\n *\n */\ndynamicTree.TreeNode.addMethod('edit', function (evt) {\n    if (this.editable) {\n        if (dynamicTree.treeNodeEdited == this) {\n            return;\n        }\n        dynamicTree.treeNodeEdited = this;\n        var oldName = this.name;\n        var titleHolder = jQuery(this._getTitle().parentNode)[0];\n        var input = this._getInputTemplateElement();\n        this._getTitle().data = '';\n        titleHolder.cleanWhitespace();\n        titleHolder.insert(input);\n        input.value = xssUtil.unescape(this.name);\n        input.focus();\n        jQuery(input).find(evt);\n        input.onclick = function (e) {\n            cancelEventBubbling(e);\n        };\n        input.ondblclick = function (e) {\n            cancelEventBubbling(e);\n        };\n        input.onmousedown = function (e) {\n            cancelEventBubbling(e);\n        };\n        input.onmouseup = function (e) {\n            cancelEventBubbling(e);\n        };\n        input.onkeydown = function (keyEvt) {\n            var e = window.event ? window.event : keyEvt;\n            if (e.keyCode == 13) {\n                input.onblur = null;\n                this.doEndEdit(e);\n            } else if (e.keyCode == 27) {\n                input.onblur = null;\n                input.value = oldName;\n                this.doEndEdit(e);\n            }\n        }.bindAsEventListener(this);\n        input.onblur = function (event) {\n            this.doEndEdit(event);\n        }.bindAsEventListener(this);\n        dynamicTree.trees[this.getTreeId()].fireStartEditEvent(this, input);\n    }\n});    /**\n * Fires end of inline edit of the node.\n */\n/**\n * Fires end of inline edit of the node.\n */\ndynamicTree.TreeNode.addMethod('doEndEdit', function (evt) {\n    this.editEnded();\n    dynamicTree.trees[this.getTreeId()].fireEndEditEvent(this);\n});    /**\n * Ends the edit of the node.\n */\n/**\n * Ends the edit of the node.\n */\ndynamicTree.TreeNode.addMethod('editEnded', function () {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    if (dynamicTree.treeNodeEdited != null) {\n        var input = this._getTitleInputElement();\n        var newValue = input.value;\n        if (newValue == dynamicTree.treeNodeEdited.name) {\n            input.remove();\n            this._getTitle().data = dynamicTree.treeNodeEdited.name;\n            dynamicTree.treeNodeEdited = null;\n            return;\n        }\n        tree.fireEditEvent(dynamicTree.treeNodeEdited, newValue);\n        if (!dynamicTree.editaborted) {\n            dynamicTree.treeNodeEdited.name = newValue;\n            input.remove();\n            this._getTitle().data = newValue;\n        }\n        dynamicTree.treeNodeEdited = null;\n    }\n});    /**\n * Scrolls to the position of the node.\n */\n/**\n * Scrolls to the position of the node.\n */\ndynamicTree.TreeNode.addMethod('scroll', function (element) {\n    var rootNodeElement = dynamicTree.trees[this.getTreeId()].rootNode._getElement();\n    var container = element ? jQuery(element)[0] : jQuery(rootNodeElement.parentNode)[0];\n    var nodeElement = this._getElement();\n    if (container) {\n        var ch = container.clientHeight;\n        var cw = container.clientWidth;\n        var cst = container.scrollTop;\n        var csl = container.scrollLeft;\n        var nt = nodeElement.cumulativeOffset().top - container.cumulativeOffset().top;\n        var nl = nodeElement.offsetLeft;\n        var nh = nodeElement.clientHeight;\n        var nw = nodeElement.clientWidth;\n        if (nt > cst + ch) {\n            // node is below\n            container.scrollTop = nt - (ch / 2 - nh / 2);\n        } else if (nt + nh < cst) {\n            // node is above\n            container.scrollTop = nt - (ch / 2 - nh / 2);\n        }\n        if (nl > csl + cw) {\n            // node is out left\n            container.scrollLeft = nl - (cw / 2 - nw / 2);\n        } else if (nl + nw < csl) {\n            // node is out right\n            container.scrollTop = nl - (cw / 2 - nw / 2);\n        }\n    }\n});    /**\n * Opens the node.\n */\n/**\n * Opens the node.\n */\ndynamicTree.TreeNode.addMethod('handleNode', function (event) {\n    if (!this.isParent()) {\n        // No reason to handle a node without childs.\n        return;\n    }\n    var tree = dynamicTree.trees[this.getTreeId()];\n    if (this.isOpen()) {\n        tree.writeStates(this.id, dynamicTree.TreeNode.State.CLOSED);\n    } else {\n        tree.writeStates(this.id, dynamicTree.TreeNode.State.OPEN);\n        tree.fireOpenEvent(this, event);\n    }\n    if (event && event.type === 'keydown') {\n        this.keydownSubFocus = true;\n    }\n    this.refreshNode();\n});\ndynamicTree.TreeNode.addMethod('openNode', function (event) {\n    if (!this.isParent()) {\n        // No reason to handle a node without childs.\n        return;\n    }\n    var tree = dynamicTree.trees[this.getTreeId()];\n    if (!this.isOpen()) {\n        tree.writeStates(this.id, dynamicTree.TreeNode.State.OPEN);\n        tree.fireOpenEvent(this, event);\n    }\n    this.refreshNode();\n});\ndynamicTree.TreeNode.addMethod('_getHeaderTemplateElement', function () {\n    var type = this.getType();\n    var id = type && type.templateDomId ? type.templateDomId : this.nodeHeaderTemplateDomId;    /**\n     * The commented out section is actually the preferred way to do this however, IE seems to pick up the wrong template\n     * The scenario is when ever you are in ad hoc and switch to presentation mode and back again the tree is not rendered\n     * simply because the cloned node doesn't have any sub nodes/children. In our current implementation, the LI node contains\n     * a <span> and a <p>. These get left out.\n     *\n     * Note: Switching to the implementation where we simply create the clone from the id instead of using the hash may and is going to have\n     * a performance issue.... (papanii)\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    /**\n     * The commented out section is actually the preferred way to do this however, IE seems to pick up the wrong template\n     * The scenario is when ever you are in ad hoc and switch to presentation mode and back again the tree is not rendered\n     * simply because the cloned node doesn't have any sub nodes/children. In our current implementation, the LI node contains\n     * a <span> and a <p>. These get left out.\n     *\n     * Note: Switching to the implementation where we simply create the clone from the id instead of using the hash may and is going to have\n     * a performance issue.... (papanii)\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    var clone = document.getElementById(id).clone(true);\n    clone.templateId = id;\n    clone.templateClassName = clone.className;\n    return clone;\n});\ndynamicTree.TreeNode.addMethod('_getFooterTemplateElement', function () {\n    var id = this.nodeFooterTemplateDomId;    /**\n     * @see comment in _getHeaderTemplateElement above\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    /**\n     * @see comment in _getHeaderTemplateElement above\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    var clone = document.getElementById(id).clone(true);\n    clone.templateId = id;\n    clone.update('');\n    return clone;\n});\ndynamicTree.TreeNode.addMethod('_getInputTemplateElement', function () {\n    var id = this.nodeInputTemplateDomId;    /**\n     * @see comment in _getHeaderTemplateElement above\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    /**\n     * @see comment in _getHeaderTemplateElement above\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    var clone = document.getElementById(id).clone(true);\n    clone.templateId = id;\n    return clone;\n});\n\nexport default dynamicTree;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    isInSelection: function () {}\n}","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @version: $Id$\n */\n\n/* global alert*/\nimport {Draggables, Draggable, Droppables} from 'dragdropextra';\nimport {Template} from 'prototype';\nimport dynamicTree from './dynamicTree.treenode';\nimport layoutModule from '../core/core.layout';\nimport designerBase from './dynamicTree.designerBase';\nimport {\n    matchMeOrUp,\n    isSupportsTouch,\n    isIPad,\n    isMetaHeld,\n    isShiftHeld,\n    isRightClick,\n    isIE7,\n    isIE,\n    matchAny\n} from '../util/utils.common';\nimport TouchController from '../util/touch.controller';\nimport {JRS} from \"../namespace/namespace\";\nimport jQuery from 'jquery';\n\ndynamicTree.Tree.\n    addVar('NODE_PATTERN', \".node\").                //node itself\n    addVar('NODE_WRAPPER_PATTERN', \".node > .wrap\").\n    addVar('NODE_ICON_PATTERN', \".node > .wrap .icon\").\n    addVar('NODE_CUSTOM_PATTERNS', []);\n\ndynamicTree.Tree.\n    addVar('LEAF_PATTERN', \".leaf\").                //leaf itself\n    addVar('LEAF_WRAPPER_PATTERN', \".leaf > .wrap\").\n    addVar('LEAF_ICON_PATTERN', \".leaf > .wrap .icon\").\n    addVar('LEAF_CUSTOM_PATTERNS', []);\n\ndynamicTree.Tree.addVar('draggables', []);\ndynamicTree.Tree.addVar('isMouseClick', false);\n/**\n *\n */\ndynamicTree.Tree.addMethod('getTreeNodeByEvent', function(event) {\n    var element = Event.element(event); //event.originalTarget || event.srcElement;\n    return this.getTreeNodeByElement(element);\n});\ndynamicTree.Tree.addMethod('getTreeNodeByElement', function(element) {\n    while(element && element.readAttribute && jQuery(element).attr('id') !== this.id) {\n        var node = element.treeNode;\n        if (node && node.getTreeId() === this.getId()) {\n            return node;\n        } else {\n            element = jQuery(element.parentNode)[0];\n        }\n    }\n    return null;\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('isNodeEvent', function(event) {\n    //var element = Event.element(event);//event.originalTarget || event.srcElement;\n\n    //var patterns = [this.NODE_PATTERN, this.NODE_WRAPPER_PATTERN, this.NODE_ICON_PATTERN];\n    //if (isArray(this.NODE_CUSTOM_PATTERNS)) { patterns = patterns.concat(this.NODE_CUSTOM_PATTERNS); }\n\n    var listItem = matchMeOrUp(event.element().parentNode,'LI');\n    return listItem && jQuery(listItem).hasClass(layoutModule.NODE_CLASS);\n});\n\n/**\n *\n */\ndynamicTree.Tree.addMethod('isLeafEvent', function(event) {\n//    var element = Event.element(event);//event.originalTarget || event.srcElement;\n//\n//    var patterns = [this.LEAF_PATTERN, this.LEAF_WRAPPER_PATTERN, this.LEAF_ICON_PATTERN];\n//    if (isArray(this.LEAF_CUSTOM_PATTERNS)) { patterns = patterns.concat(this.LEAF_CUSTOM_PATTERNS); }\n//\n//    return matchAny(element, patterns) != null;\n\n    var listItem = matchMeOrUp(event.element().parentNode,'LI');\n    return listItem && jQuery(listItem).hasClass(layoutModule.LEAF_CLASS);\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('isIconEvent', function(event) {\n//    var element = Event.element(event);//event.originalTarget || event.srcElement;\n//\n//    return matchAny(element,[this.NODE_ICON_PATTERN, this.LEAF_ICON_PATTERN], true) != null;\n    return jQuery(event.element()).hasClass(layoutModule.ICON_CLASS);\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('_registerEvents', function() {\n    this._cleanUpListeners();\n    this._registerClickEvents();\n    this._registerCustomEvents(); // focus and blur\n    this._registerKeyEvents();\n    this._registerMouseEvents();\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('_cleanUpListeners', function() {\n    var treeContainer = this._getElement();\n\n    treeContainer.stopObserving('click');\n    treeContainer.stopObserving('dblclick');\n\n    if (isSupportsTouch()) {\n        treeContainer.stopObserving('touchstart');\n        treeContainer.stopObserving('drag:touchstart');\n        treeContainer.stopObserving('touchend');\n    } else {\n        treeContainer.stopObserving('mousedown');\n        treeContainer.stopObserving('drag:mousedown');\n        treeContainer.stopObserving('mouseup');\n    }\n    treeContainer.stopObserving('mouseover');\n    treeContainer.stopObserving('mouseout');\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('_registerClickEvents', function() {\n    var treeContainer = this._getElement();\n\n    treeContainer.observe('click', function(event) {\n        var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n\n        var isNode = this.isNodeEvent(event);\n        var isLeaf = this.isLeafEvent(event);\n\n        if (isNode) {\n            treeContainer.fire('nodeIcon:click', {targetEvent: event, node: node});\n            treeContainer.fire('node:click', {targetEvent: event, node: node});\n        } else if (isLeaf) {\n            treeContainer.fire('nodeIcon:click', {targetEvent: event, node: node});\n            treeContainer.fire('leaf:click', {targetEvent: event, node: node});\n        }\n\n        if (!isIPad() && isNode) {\n            node.handleNode(event);\n        }\n\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('dblclick', function(event) {\n        var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n\n        var isIcon = this.isIconEvent(event);\n        var isNode = this.isNodeEvent(event);\n        var isLeaf = this.isLeafEvent(event);\n\n        if (isNode) {\n            isIcon && treeContainer.fire('nodeIcon:dblclick', {targetEvent: event, node: node});\n            treeContainer.fire('node:dblclick', {targetEvent: event, node: node})\n        } else if (isLeaf) {\n            isIcon && treeContainer.fire('leafIcon:dblclick', {targetEvent: event, node: node});\n            treeContainer.fire('leaf:dblclick', {targetEvent: event, node: node})\n        }\n\n        if (this.handleNodeOnDblclick && (isNode || isLeaf) && !isIcon) {\n            node.handleNode(event);\n        }\n    }.bindAsEventListener(this));\n\n});\n\ndynamicTree.Tree.addMethod('_registerMouseEvents', function() {\n    var treeContainer = this._getElement();\n    treeContainer.observe(isSupportsTouch() ? 'touchstart' : 'mousedown', function(event) {\n    \tvar element = event.element();\n\n        var node = matchMeOrUp(element, layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) return;\n\n        event.treeEvent = true;\n\n        var isIcon = this.isIconEvent(event);\n        var isNode = this.isNodeEvent(event);\n        var isLeaf = this.isLeafEvent(event);\n\n        if(isSupportsTouch()){\n        \tif(!JRS.vars.ajax_in_progress){\n\t            this.twofingers = false;\n\t            if(event.touches.length == 2) {\n\t            \tthis.twofingers = true;\n\t            \tthis._selectOrEditNode(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event), { shouldFocus: true});\n\t            \tif(node.isSelected() || (designerBase && designerBase.isInSelection(node))){\n\t\t            \tvar li = jQuery(element).parents('li:first');\n                        jQuery(li).hasClass('selected') && document.fire(layoutModule.ELEMENT_CONTEXTMENU, {targetEvent: event, node: element});\n\t\t            \treturn;\n\t            \t}\n\t            }\n        \t} else {\n            \talert('please wait');\n            }\n        }\n\n        if(!isSupportsTouch() || !JRS.vars.ajax_in_progress) {\n            if (this.selectOnMousedown && (!isSupportsTouch() || event.touches.length == 1)) {\n                this._selectOrEditNode(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event), { shouldFocus: true });\n            }\n\n            if (isNode) {\n                isIcon && treeContainer.fire('nodeIcon:mousedown', {targetEvent: event, node: node});\n                treeContainer.fire('node:mousedown', {targetEvent: event, node: node})\n            } else if (isLeaf) {\n                isIcon && treeContainer.fire('leafIcon:mousedown', {targetEvent: event, node: node});\n                treeContainer.fire('leaf:mousedown', {targetEvent: event, node: node})\n            }\n        }\n\n    }.bindAsEventListener(this));\n\n    //scriptaculous stopped mousedown event but we made it throw this instead\n    treeContainer.observe(isSupportsTouch() ? 'drag:touchstart' :'drag:mousedown', function(e) {\n        this.isMouseClick = true;\n        var event = e.memo.targetEvent;\n\n        var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n\n        event.treeEvent = true;\n\n        var isIcon = this.isIconEvent(event), isNode = this.isNodeEvent(event), isLeaf = this.isLeafEvent(event);\n\n        if (this.selectOnMousedown && !isRightClick(event)) {\n            this._selectOrEditNode(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event), { shouldFocus: true});\n        }\n\n        //var eventNames = [];\n\n        if (isNode) {\n            isIcon && treeContainer.fire('nodeIcon.drag:mousedown', {targetEvent: event, node: node});\n            treeContainer.fire('node.drag:mousedown', {targetEvent: event, node: node})\n        } else if (isLeaf) {\n            isIcon && treeContainer.fire('leafIcon.drag:mousedown', {targetEvent: event, node: node});\n            treeContainer.fire('leaf.drag:mousedown', {targetEvent: event, node: node})\n        }\n\n    }.bindAsEventListener(this));\n\n    treeContainer.observe(isSupportsTouch() ? 'touchend' : 'mouseup', function(event) {\n        this.isMouseClick = true;\n        var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n\n        event.treeEvent = true;\n\n        var isIcon = this.isIconEvent(event), isNode = this.isNodeEvent(event), isLeaf = this.isLeafEvent(event);\n\n        if(this.twofingers) {\n            event.isEmulatedRightClick = true;\n        }\n        if(isSupportsTouch() && !this.twofingers) {\n\t    \tif(this.clickid == node.id) {\n\t    \t\tif(!JRS.vars.ajax_in_progress && event.timeStamp - this.clicktime < 700) {\n\t    \t\t\tif (isNode) {\n\t    \t            isIcon && treeContainer.fire('nodeIcon:dblclick', {targetEvent: event, node: node});\n\t    \t            treeContainer.fire('node:dblclick', {targetEvent: event, node: node})\n\t    \t        } else if (isLeaf) {\n\t    \t            isIcon && treeContainer.fire('leafIcon:dblclick', {targetEvent: event, node: node});\n\t    \t            treeContainer.fire('leaf:dblclick', {targetEvent: event, node: node})\n\t    \t        }\n\n\t    \t        if (this.handleNodeOnDblclick && (isNode || isLeaf) && !isIcon) {\n\t    \t            node.handleNode(event);\n\t    \t        }\n\t    \t\t}\n\t    \t}\n\t        this.clicktime = event.timeStamp;\n\t        this.clickid = node.id;\n    \t}\n        if(!isSupportsTouch() || !JRS.vars.ajax_in_progress) {\n        \tif (!this.selectOnMousedown && !TouchController.element_scrolled && (!isSupportsTouch() || event.changedTouches.length == 1)) {\n                this._selectOrEditNode(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event), { shouldFocus: true });\n            }\n            this._deselectOthers(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event));\n\n            if (isNode) {\n                isIcon && treeContainer.fire('nodeIcon:mouseup', {targetEvent: event, node: node});\n                treeContainer.fire('node:mouseup', {targetEvent: event, node: node})\n            } else if (isLeaf) {\n                isIcon && treeContainer.fire('leafIcon:mouseup', {targetEvent: event, node: node});\n                treeContainer.fire('leaf:mouseup', {targetEvent: event, node: node})\n            }\n\n            if (isSupportsTouch() && isNode && isIcon && !TouchController.element_scrolled) {\n                node.handleNode(event);\n            }\n        }\n\n    }.bindAsEventListener(this));\n\n    if ('createTouch' in document) {\n    \t/*_*\\\n        document.observe('touchmove', function(e) {\n            var event = e.targetEvent ? e.targetEvent : e;\n            var touch =  event.changedTouches[0];\n            var element = $(document.elementFromPoint(touch.pageX, touch.pageY));\n            var node = matchMeOrUp(element, layoutModule.BUTTON_PATTERN) && this.getTreeNodeByElement(element);\n            if (node) {\n                var draggable = this.createDraggableIfNeeded(event, node);\n                draggable && draggable.initDrag(event);\n                if (node != treeContainer.lastHoveredNode) {\n                    treeContainer.lastHoveredNode && treeContainer.fire('tree:mouseout', { targetEvent: event, node: node });\n                    treeContainer.lastHoveredNode = node;\n                    treeContainer.fire('tree:mouseover', {targetEvent: event, node: node});\n                }\n            }\n        }.bindAsEventListener(this));\n        */\n    } else {\n        treeContainer.observe('mouseover', function(event) {\n        \tvar el = event.element();\n            var node = matchMeOrUp(el, layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n\n            if (!node) {return;}\n\n            this.createDraggableIfNeeded(event, node);\n            !isIE7() && treeContainer.fire('tree:mouseover', {targetEvent: event, node: node});\n        }.bindAsEventListener(this));\n\n        if (!isIE7()) {\n            treeContainer.observe('mouseout', function(event){\n                var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n                if (!node) {return;}\n                treeContainer.fire('tree:mouseout', {\n                    targetEvent: event,\n                    node: node\n                });\n            }.bindAsEventListener(this));\n        }\n    }\n\n    //register default drop zone on tree\n    Droppables.add(treeContainer,{\n        accept: this.dropClasses,\n        onDrop: (function(dragging){\n            this.elementDropped = dragging;\n        }).bind(this)\n    });\n});\n\ndynamicTree.Tree.addMethod('_registerKeyEvents', function() {\n    var treeContainer = this._getElement();\n\n    let enterOrSpaceHandler = () => {\n        return (event) => {\n            const $el = jQuery('#resultsList').find('.selected')[0];\n            const isElFoldersTree = jQuery(event.target).closest('.list.collapsible.folders').attr('id') === 'foldersTree';\n            this.isMouseClick = false;\n            if (isElFoldersTree) {\n                document.body.style.cursor !== 'wait' && $el && $el.focus();\n            } else {\n                const node = this.getTreeNodeByEvent(event);\n                if (dynamicTree.treeNodeEdited === node) {\n                    return;\n                }\n                node && this._expandOrCollapse(node, event.memo.targetEvent);\n            }\n        }\n    }\n\n    treeContainer.observe('key:enter', enterOrSpaceHandler().bindAsEventListener(this));\n    treeContainer.observe('key:space', enterOrSpaceHandler().bindAsEventListener(this));\n\n    treeContainer.observe('key:home', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        this.isMouseClick = false;\n        node && this._selectFirstVisibleNode(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:end', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        this.isMouseClick = false;\n        node && this._selectLastVisibleNode(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:down', function(event) {\n        event.memo.targetEvent.preventDefault();\n        var node = this.getTreeNodeByEvent(event);\n        this.isMouseClick = false;\n        if (dynamicTree.treeNodeEdited === node) {\n            return;\n        }\n        node && this._selectNextNode(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:up', function(event) {\n        event.memo.targetEvent.preventDefault();\n        var node = this.getTreeNodeByEvent(event);\n        this.isMouseClick = false;\n        if (dynamicTree.treeNodeEdited === node) {\n            return;\n        }\n        node && this._selectPreviousNode(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:right', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        this.isMouseClick = false;\n        if (dynamicTree.treeNodeEdited === node) {\n            return;\n        }\n        node && this._selectInwards(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:left', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        this.isMouseClick = false;\n        if (dynamicTree.treeNodeEdited === node) {\n            return;\n        }\n        node && this._selectOutwards(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:contextMenu', function(event) {\n        this.isMouseClick = false;\n        var node = this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n        event.treeEvent = true;\n\n        treeContainer.fire('tree:contextMenu', {targetEvent: event, node: node, focused: event.memo.node});\n    }.bindAsEventListener(this));\n});\n\ndynamicTree.Tree.addMethod('_registerCustomEvents', function() {\n    var treeContainer = this._getElement();\n\n    treeContainer.observe('mousedown', function(event) {\n        if (!dynamicTree.activeTreeId || dynamicTree.activeTreeId !== this.getId()) {\n            treeContainer.fire('tree:blur', {targetEvent: event, tree: dynamicTree.getActiveTree()});\n\n            dynamicTree.activeTreeId = this.getId();\n            treeContainer.fire('tree:focus', {targetEvent: event, tree: dynamicTree.getActiveTree()});\n        }\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('mouseover', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n\n        if (!node) {\n            treeContainer.fire('tree:mouseover', {targetEvent: event, tree: this});\n        }\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('mouseout', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n\n        if (!node) {\n            treeContainer.fire('tree:mouseout', {targetEvent: event, tree: this});\n        }\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('focusin', function(event) {\n        const $el = jQuery(event.target).closest('.list.collapsible.folders');\n        $el.attr('tabindex', -1);\n        $el.find(\"[tabindex='0']\").attr('tabindex', -1);\n        $el.find('.selected').attr('tabindex', 0);\n        var node = this.getTreeNodeByEvent(event);\n        if (node) {\n            if (!this.isMouseClick) {\n                node.keydownSubFocus = true;\n            }\n            node.focus();\n            node.refreshStyle();\n        } else {\n            $el.find('.selected').focus();\n        }\n\n        if ($el.find(\"[tabindex='0']\").length === 0){\n            $el.attr('tabindex', 0);\n        }\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('focus', function(event) {\n        this.isMouseClick = false;\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('focusout', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        if (node) {\n            node.keydownSubFocus = false;\n            node.refreshStyle();\n        }\n        const $el = jQuery(event.target).closest('.list.collapsible.folders');\n        $el.find(\"[tabindex='0']\").attr('tabindex', -1);\n        $el.attr('tabindex', 0);\n    }.bindAsEventListener(this));\n});\n\n\ndynamicTree.Tree.addMethod('fireOpenEvent', function(node, event) {\n    var treeContainer = this._getElement();\n    treeContainer.fire('node:open', {node: node, targetEvent: event});\n});\n\ndynamicTree.Tree.addMethod('fireSelectEvent', function(node, event) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:selected' : 'leaf:selected', {node: node, targetEvent: event});\n});\n\n\ndynamicTree.Tree.addMethod('fireUnSelectEvent', function(node, event) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:unselected' : 'leaf:unselected', {node: node, targetEvent: event});\n});\n\n\ndynamicTree.Tree.addMethod('fireUnSelectAllEvent', function(event) {\n    var treeContainer = this._getElement();\n    treeContainer.fire('items:unselected', {targetEvent: event});\n});\n\ndynamicTree.Tree.addMethod('fireEditEvent', function(node, newVal) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:edit' : 'leaf:edit', {node: node, newValue: newVal})\n});\n\ndynamicTree.Tree.addMethod('fireStartEditEvent', function(node, input) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:startEdit' : 'leaf:startEdit', {node: node, input: input})\n});\n\ndynamicTree.Tree.addMethod('fireEndEditEvent', function(node) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:endEdit' : 'leaf:endEdit', {node: node})\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('observe', function(eventName, handler) {\n    this._getElement().observe(eventName, handler);\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('stopObserving', function(eventName, handler) {\n    this._getElement().stopObserving(eventName, handler);\n});\ndynamicTree.Tree.addMethod('createDraggableIfNeeded', function(event, node) {\n    /*\n    Make draggable - test in this order - for efficiency\n    test 1) does the tree have any drag patterns?\n    test 2) is a draggable already created for the clicked element?\n    test 3) does clicked element or its ancestors match any draggable patterns?\n    test 4) is a draggable already created for the clicked element or matching ancestor?\n    */\n    var thisElem = event ? event.element() : node._getElement().children(this.dragPattern);\n    var isCreated = this.draggables[thisElem.identify()];\n\n    if (this.dragPattern && !isCreated) {\n        var matchingElem = matchAny(thisElem, [this.dragPattern], true);\n        if (matchingElem && thisElem.className.toLowerCase().indexOf('icon') < 0 && !this.draggables[matchingElem.identify()]) {\n            this.draggables[matchingElem.identify()] =\n            new Draggable(thisElem, {\n                superghosting: true,\n                mouseOffset: true,\n                delay: (isIE() || isSupportsTouch() ? 200 : 0),\n                onStart: this.setDragStartState.bind(this, node),\n                onEnd: this.setDragEndState.bind(this, node)\n            });\n\n            return this.draggables[matchingElem.identify()];\n        }\n    }\n\n    return null;\n});\n\ndynamicTree.Tree.addMethod('setDragStartState', function(node, draggable, event) {\n    var templateClassName = node._getElement().templateClassName;\n    if (templateClassName) { jQuery(draggable.element).addClass(templateClassName); }\n\n    draggable.element.setStyle({width: null, height: null});\n    jQuery(draggable.element).addClass(layoutModule.DRAGGING_CLASS).addClass(this.getId());\n    // Customize draggable style\n    if (this.dragClasses) {\n        jQuery(draggable.element).addClass(this.dragClasses);\n    }\n\n    if (this.selectedNodes.length > 1) {\n        draggable.element.update(new Template(this.TREE_NN_ITEMS_SELECTED).evaluate({count: this.selectedNodes.length}));\n    }\n\n    draggable.element.node = node;\n    draggable.element.nodes = this.selectedNodes;\n\n    draggable.options.scroll = this._getElement();\n    draggable.options.scrollSensitivity = layoutModule.SCROLL_SENSITIVITY;\n    Draggables.dragging = this.regionID || true;\n});\n\ndynamicTree.Tree.addMethod('setDragEndState', function(node, draggable, event) {\n    Draggables.dragging = null;\n});\n\nexport default dynamicTree;\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\n/*\n * TreeSupport is extend Tree to use it with JasperServer.\n * You can extend it to change parameters and/or look and feel\n *\n * @param id {String} - unique ID for the tree on the page\n * @param options {JSON Object} - Set of configuration options for tree :\n * <ul>\n * <li>rootUri {String} - uri for the root of this tree\n *   (usually '/' but could be something like '/area/node' if this tree is supposed\n *   to show only particular branch from the data structure)\n * </li>\n * <li>providerId {String} - Data Provider ID</li>\n * <li>resetStatesOnShow {Boolean} - If false tree state will be restored from cookies</li>\n * <li>nodeClass {@link dynamicTree.TreeNode} - function that will be used to create instances of tree node</li>\n * <li>rootObjectModifier {Function} - modifies root object</li>\n * <li>urlGetNode {String} - server url for 'getNode' method</li>\n * <li>urlGetChildren {String} - server url for 'getChildren' method</li>\n * <li>urlGetMultipleChildren {String} - server url for 'getMultipleChildren' method</li>\n * <li>urlGetMessage {String} - server url for 'getMessage' method</li>\n * </ul>\n *\n * See {@link dynamicTree.Tree} for more options.\n */\n\nimport dynamicTree from './dynamicTree.events';\nimport {deepClone, trim, unescapeBackslash} from \"../util/utils.common\";\nimport __jrsConfigs__ from 'js-sdk/src/jrs.configs';\nimport {ajaxTargettedUpdate} from \"../core/core.ajax\";\nimport {baseErrorHandler} from \"../core/core.ajax.utils\";\nimport xssUtil from 'js-sdk/src/common/util/xssUtil';\nimport jQuery from 'jquery';\nimport _ from 'underscore';\n\ndynamicTree.TreeSupport = function (id, options) {\n    dynamicTree.Tree.call(this, id, options);    // instance variables\n    // instance variables\n    this.providerId = options.providerId;\n    this.hideLoader = options.hideLoader;\n    this.rootUri = Object.isUndefined(options.rootUri) ? '/' : options.rootUri;\n    this.nodeClass = options.nodeClass && Object.isFunction(options.nodeClass) ? options.nodeClass : dynamicTree.TreeNode;\n    if (options.rootObjectModifier) {\n        this.modifyRootObject = options.rootObjectModifier;\n    }\n    this.resetStatesOnShow = Object.isUndefined(options.resetStatesOnShow) || options.resetStatesOnShow;\n    this.inInit = true;    // default ajax related values\n    // default ajax related values\n    this.ajaxBufferId = 'ajaxbuffer';    // id of a DIV elements that receives server response\n    // id of a DIV elements that receives server response\n    this.nodeTextId = 'treeNodeText';    // id of a text element that contains JSONized tree\n    // id of a text element that contains JSONized tree\n    this.urlGetNode = options.urlGetNode ? options.urlGetNode : this._getFlowUrl('getNode');    // server url for 'getNode' method\n    // server url for 'getNode' method\n    this.urlGetChildren = options.urlGetChildren ? options.urlGetChildren : this._getFlowUrl('getChildren');    // server url for 'getChildren' method\n    // server url for 'getChildren' method\n    this.urlGetMultipleChildren = options.urlGetMultipleChildren ? options.urlGetMultipleChildren : this._getFlowUrl('getMultipleChildren');    // server url for 'getMultipleChildren' method\n    // server url for 'getMultipleChildren' method\n    this.urlGetMessage = options.urlGetMessage ? options.urlGetMessage : this._getFlowUrl('getMessage');    // server url for 'getMessage' method\n    // server url for 'getMessage' method\n    this.additionalParams = options.additionalParams ? options.additionalParams : {};    /////////////////////////////////////\n    // dragging related variables\n    // (if you require drag support, please pass treeDragSupport argument in ctor and include drag.js)\n    /////////////////////////////////////\n    /////////////////////////////////////\n    // dragging related variables\n    // (if you require drag support, please pass treeDragSupport argument in ctor and include drag.js)\n    /////////////////////////////////////\n    if (this.TREE_NN_ITEMS_SELECTED == null) {\n        var callback = function (text) {\n            this.TREE_NN_ITEMS_SELECTED = text;\n        }.bind(this);\n        this.getMessage('TREE_NN_ITEMS_SELECTED', callback, null);\n    }\n    this._initOpenListener();\n};\ndynamicTree.TreeSupport.prototype = deepClone(dynamicTree.Tree.prototype);    /////////////////////////////////////\n// methods\n/////////////////////////////////////\n/**\n *  Adding handler of 'node:open' event. If event occurred, handler will loads children of node from server.\n */\n/////////////////////////////////////\n// methods\n/////////////////////////////////////\n/**\n *  Adding handler of 'node:open' event. If event occurred, handler will loads children of node from server.\n */\ndynamicTree.TreeSupport.addMethod('_initOpenListener', function () {\n    this.observe('node:open', function (event) {\n        var node = event.memo.node;\n        if (node && !node.isloaded) {\n            this.getTreeNodeChildren(node);\n        }\n    }.bindAsEventListener(this));\n});    /**\n * Remove all or specified handler from event and adding default handler on 'node:open' event.\n *\n * @param eventName {String} event, from which should be removed handlers.\n * @param handler {Function} handler function, which should be removed\n */\n/**\n * Remove all or specified handler from event and adding default handler on 'node:open' event.\n *\n * @param eventName {String} event, from which should be removed handlers.\n * @param handler {Function} handler function, which should be removed\n */\ndynamicTree.TreeSupport.addMethod('stopObserving', function (eventName, handler) {\n    this._getElement().stopObserving(eventName, handler);\n    if (eventName === 'node:open' && !handler) {\n        this._initOpenListener();\n    }\n});\ndynamicTree.TreeSupport.addMethod('_getFlowUrl', function (methodName) {\n    return __jrsConfigs__.contextPath + '/flow.html?_flowId=treeFlow&method=' + methodName;\n});    /*\n * Loads tree from server and renders it into given container.\n * Generates \"tree:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @type Asynchronous method\n * @param depth {Number} controls how many levels of children to prefetch at this load\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n * @param forceHtmlEscape {Boolean} asks server to  escape response as html before putting it into tree div\n */\n/*\n * Loads tree from server and renders it into given container.\n * Generates \"tree:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @type Asynchronous method\n * @param depth {Number} controls how many levels of children to prefetch at this load\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n * @param forceHtmlEscape {Boolean} asks server to  escape response as html before putting it into tree div\n */\ndynamicTree.TreeSupport.addMethod('showTree', function (depth, userCallbackFn, errorCallbackFn, forceHtmlEscape) {\n    var url = this.urlGetNode + '&provider=' + this.providerId + '&uri=' + this.rootUri + '&depth=' + depth;\n    forceHtmlEscape && (url += '&forceHtmlEscape=true');\n    url += '&' + this._evaluateAdditionalParams();\n    this._showTree(url, userCallbackFn, errorCallbackFn);\n});\ndynamicTree.TreeSupport.addMethod('_evaluateAdditionalParams', function () {\n    var params = this.additionalParams;\n    if (_.isFunction(params)) {\n        params = params.call(null);\n    }\n    if (_.isObject(params)) {\n        return Object.toQueryString(params);\n    }\n    return null;\n});    /*\n * Loads tree from the server and renders it into given container.\n * Generates \"tree:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @type Asynchronous method\n * @param prefetchedListStr {String} comma separated uris to prefetch (example: '/reports/samples,/adhoc/topics').\n * Controls which tree branches to prefetch at this load.\n * @param userCallbackFn {Function} optional user function object to call after tree gets loaded and rendered\n * @param errorCallbackFn {Function} optional user error handler function to call if error occured\n */\n/*\n * Loads tree from the server and renders it into given container.\n * Generates \"tree:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @type Asynchronous method\n * @param prefetchedListStr {String} comma separated uris to prefetch (example: '/reports/samples,/adhoc/topics').\n * Controls which tree branches to prefetch at this load.\n * @param userCallbackFn {Function} optional user function object to call after tree gets loaded and rendered\n * @param errorCallbackFn {Function} optional user error handler function to call if error occured\n */\ndynamicTree.TreeSupport.addMethod('showTreePrefetchNodes', function (prefetchedListStr, userCallbackFn, errorCallbackFn) {\n    var url = this.urlGetNode + '&provider=' + this.providerId + '&uri=' + this.rootUri;\n    if (prefetchedListStr) {\n        url += '&prefetch=' + encodeURIComponent(prefetchedListStr);\n    }\n    url += '&' + this._evaluateAdditionalParams();\n    this._showTree(url, userCallbackFn, errorCallbackFn);\n});\ndynamicTree.TreeSupport.addMethod('_showTree', function (url, userCallbackFn, errorCallbackFn) {\n    var self = this;\n    this.inInit = true;\n    this.wait();\n    var callback = function (obj, uc, ec) {\n        return function () {\n            return obj.showTreeCallback(uc, ec);\n        };\n    }(this, userCallbackFn, errorCallbackFn);\n    var httpErrorHandler = function () {\n        var rc = false;\n        if (self.httpErrorHandler) {\n            rc = self.httpErrorHandler.apply(window, arguments);\n        }\n        if (rc === false) {\n            rc = baseErrorHandler.apply(window, arguments);\n        }\n        return rc;\n    };\n    ajaxTargettedUpdate(url, {\n        fillLocation: this.ajaxBufferId,\n        callback: callback,\n        errorHandler: httpErrorHandler,\n        hideLoader: this.hideLoader\n    });\n});\ndynamicTree.TreeSupport.addMethod('showTreeCallback', function (userCallbackFn, errorCallbackFn) {\n    // get JSONized Node\n    var div = document.getElementById(this.nodeTextId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        } else {\n            this.fireServerErrorEvent();\n        }\n        return;\n    }    //as this data was escaped before adding to DOM to prevent XSS (core.ajax.js:246)\n    //here it should be unescaped for further use\n    //as this data was escaped before adding to DOM to prevent XSS (core.ajax.js:246)\n    //here it should be unescaped for further use\n    var json = xssUtil.unescape(jQuery(div).text());\n    var rootObj = json.evalJSON();\n    if (this.modifyRootObject) {\n        rootObj = this.modifyRootObject(rootObj, false);\n    }    // clean AJAX buffer\n    // clean AJAX buffer\n    div = document.getElementById(this.ajaxBufferId);\n    jQuery(div).html('');    // build the tree\n    // build the tree\n    this.setRootNode(this.processNode(rootObj));\n    this.resortTree();\n    if (this.resetStatesOnShow) {\n        this.resetStates();\n    }\n    this.renderTree();\n    this.inInit = false;\n    if (userCallbackFn) {\n        userCallbackFn();\n    } else {\n        this.fireTreeLoadedEvent({ tree: this });\n    }\n});    /*\n * internally used method to turn server model into javascript tree model\n * Be advised of the power of 'extra' property of server node object.\n * You can set there pretty much anything and therefore customize you tree behaviour.\n * TreeNode is available in node handlers which you may assign as callback functions to your code\n *\n * @param metaNode {JSON Object} server node\n */\n/*\n * internally used method to turn server model into javascript tree model\n * Be advised of the power of 'extra' property of server node object.\n * You can set there pretty much anything and therefore customize you tree behaviour.\n * TreeNode is available in node handlers which you may assign as callback functions to your code\n *\n * @param metaNode {JSON Object} server node\n */\ndynamicTree.TreeSupport.addMethod('processNode', function (metaNode) {\n    var param = {};\n    param.id = metaNode.id;\n    param.type = metaNode.type;\n    param.uri = metaNode.uri;\n    param.extra = deepClone(metaNode.extra);\n    if (metaNode.cssClass) {\n        param.cssClass = metaNode.cssClass;\n    }\n    var NodeClassFn = this.nodeClass;\n    var localRoot = new NodeClassFn({\n        name: unescapeBackslash(metaNode.label),\n        param: param,\n        orderNumber: metaNode.order\n    });\n    if (metaNode.tooltip) {\n        localRoot.tooltip = metaNode.tooltip;\n    }    //    localRoot.iconTooltip = this.getIconTooltip(localRoot);\n    //    localRoot.iconTooltip = this.getIconTooltip(localRoot);\n    var ch = metaNode.children;\n    if (ch != null) {\n        var len = ch.length;\n        if (len === 0) {\n            localRoot.setHasChilds(false);\n        } else {\n            for (var i = 0; i < len; i++) {\n                var chNodeObj = ch[i];\n                if (chNodeObj) {\n                    var chTreeNode = this.processNode(chNodeObj);\n                    localRoot.addChild(chTreeNode);\n                }\n            }\n        }\n        localRoot.isloaded = true;\n    }\n    return localRoot;\n});    /*\n * Dynamically loads children for the node\n * Generates \"children:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @param parentNode {{@link dynamicTree.TreeNode}} the node, for which children should be loaded\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\n/*\n * Dynamically loads children for the node\n * Generates \"children:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @param parentNode {{@link dynamicTree.TreeNode}} the node, for which children should be loaded\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\ndynamicTree.TreeSupport.addMethod('getTreeNodeChildren', function (parentNode, userCallbackFn, errorCallbackFn) {\n    var uri = parentNode.param.uri;\n    var callback = function (obj, ni, uc, ec) {\n        return function () {\n            obj.resortTree();\n            obj.getTreeNodeChildrenCallback(ni, uc, ec);\n        };\n    }(this, parentNode.id, userCallbackFn, errorCallbackFn);\n    var treeErrorHandler = function (ajaxAgent) {\n        if (ajaxAgent.status == 500 || ajaxAgent.getResponseHeader('JasperServerError')) {\n            parentNode.stopWaiting();\n        }\n        baseErrorHandler(ajaxAgent);\n    };\n    ajaxTargettedUpdate(this.urlGetChildren + '&provider=' + this.providerId + '&uri=' + encodeURIComponent(encodeURIComponent(uri)) + '&' + this._evaluateAdditionalParams(), {\n        fillLocation: this.ajaxBufferId,\n        callback: callback,\n        errorHandler: treeErrorHandler,\n        hideLoader: this.hideLoader\n    });\n    if (!this.inInit) {\n        parentNode.wait();\n    }\n});\ndynamicTree.TreeSupport.addMethod('getTreeNodeChildrenCallback', function (parentNodeId, userCallbackFn, errorCallbackFn) {\n    var div = document.getElementById(this.nodeTextId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        } else {\n            this.fireServerErrorEvent();\n        }\n        return;\n    }\n    var ns = xssUtil.unescape(jQuery(div).text()).evalJSON();\n    var parentNode = dynamicTree.nodes[parentNodeId];\n    if (this.modifyRootObject) {\n        ns = this.modifyRootObject(ns, true, parentNode);\n    }\n    div = document.getElementById(this.ajaxBufferId);\n    jQuery(div).html('');\n    parentNode.resetChilds();\n    parentNode.stopWaiting();\n    var len = ns.length;\n    if (len === 0) {\n        parentNode.setHasChilds(false);\n    } else {\n        var treeId = parentNode.getTreeId();\n        var tree = treeId ? dynamicTree.trees[treeId] : null;\n        var tmpSortNodes = tree ? tree.sortNodes : null;\n        if (tree) {\n            tree.sortNodes = false;\n        }\n        for (var i = 0; i < len; i++) {\n            var node = this.processNode(ns[i]);\n            parentNode.addChild(node);\n        }\n        if (tree) {\n            tree.sortNodes = tmpSortNodes;\n            parentNode.resortChilds();\n        }\n    }\n    parentNode.isloaded = true;\n    parentNode.refreshNode();\n    if (userCallbackFn) {\n        userCallbackFn(parentNode.childs);\n    } else {\n        this.fireChildrenLoadedEvent(parentNode.childs);\n    }\n});    /*\n * Loads children for several given nodes\n * Generates \"multipleChildren:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n\n * @param parentNodes {Array<{@link dynamicTree.TreeNode}>} array of TreeNode instances\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\n/*\n * Loads children for several given nodes\n * Generates \"multipleChildren:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n\n * @param parentNodes {Array<{@link dynamicTree.TreeNode}>} array of TreeNode instances\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\ndynamicTree.TreeSupport.addMethod('getTreeMultipleNodesChildren', function (parentNodes, userCallbackFn, errorCallbackFn) {\n    var uri = '';\n    var ids = [];\n    var i;\n    if (parentNodes && parentNodes.length) {\n        for (i = 0; i < parentNodes.length; i++) {\n            if (i > 0) {\n                uri += ',';\n            }\n            uri += encodeURIComponent(encodeURIComponent(parentNodes[i].param.uri));\n            ids[i] = parentNodes[i].id;\n        }\n    }\n    if (!uri.length) {\n        // no nodes requested - just return\n        return;\n    }\n    var callback = function (obj, ni, uc, ec) {\n        return function () {\n            return obj.getTreeMultipleNodesChildrenCallback(ni, uc, ec);\n        };\n    }(this, ids, userCallbackFn, errorCallbackFn);\n    ajaxTargettedUpdate(this.urlGetMultipleChildren + '&provider=' + this.providerId, // + '&uris=' + uri,\n        {\n            fillLocation: this.ajaxBufferId,\n            callback: callback,\n            postData: 'uris=' + uri,\n            errorHandler: baseErrorHandler,\n            hideLoader: this.hideLoader\n        });\n    if (!this.inInit) {\n        for (i = 0; i < parentNodes.length; i++) {\n            parentNodes[i].wait();\n        }\n    }\n});\ndynamicTree.TreeSupport.addMethod('getTreeMultipleNodesChildrenCallback', function (parentNodeIds, userCallbackFn, errorCallbackFn) {\n    var div = document.getElementById(this.nodeTextId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        } else {\n            this.fireServerErrorEvent();\n        }\n        return;\n    }\n    var ns = xssUtil.unescape(jQuery(div).text()).evalJSON();\n    div = document.getElementById(this.ajaxBufferId);\n    jQuery(div).html('');\n    if (userCallbackFn) {\n        userCallbackFn(parentNodeIds, ns);\n    } else {\n        this.setMultipleNodesChilden(parentNodeIds, ns);\n        this.fireMultipleChildrenLoadedEvent(parentNodeIds, ns);\n    }\n});    /*\n * Default processor for getTreeMultipleNodesChildren\n *\n * @param parentNodeIds {Array<String>} parent node IDs for which server was requested\n * @param nodeHolders {Array<JSON Object>} processed server response object\n * @param noRender {Boolean} if true nodes which loaded from server will not be displayed\n */\n/*\n * Default processor for getTreeMultipleNodesChildren\n *\n * @param parentNodeIds {Array<String>} parent node IDs for which server was requested\n * @param nodeHolders {Array<JSON Object>} processed server response object\n * @param noRender {Boolean} if true nodes which loaded from server will not be displayed\n */\ndynamicTree.TreeSupport.addMethod('setMultipleNodesChilden', function (parentNodeIds, nodeHolders, noRender) {\n    if (parentNodeIds && nodeHolders) {\n        for (var nn = 0; nn < nodeHolders.length; nn++) {\n            var nodeHolder = nodeHolders[nn];\n            var ns = nodeHolder.children;    // find a parentNode\n            // find a parentNode\n            var parentNode = null;\n            for (var pn = 0; pn < parentNodeIds.length; pn++) {\n                var tempnode = dynamicTree.nodes[parentNodeIds[pn]];\n                if (tempnode.param.uri == nodeHolder.parentUri) {\n                    parentNode = tempnode;\n                    break;\n                }\n            }\n            if (parentNode) {\n                parentNode.resetChilds();\n                parentNode.stopWaiting();\n                var len = ns.length;\n                if (len === 0) {\n                    parentNode.setHasChilds(false);\n                } else {\n                    var treeId = parentNode.getTreeId();\n                    var tree = treeId ? dynamicTree.trees[treeId] : null;\n                    var tmpSortNodes = tree ? tree.sortNodes : null;\n                    if (tree) {\n                        tree.sortNodes = false;\n                    }\n                    for (var i = 0; i < len; i++) {\n                        var node = this.processNode(ns[i]);\n                        parentNode.addChild(node);\n                    }\n                    if (tree) {\n                        tree.sortNodes = tmpSortNodes;\n                        parentNode.resortChilds();\n                    }\n                }\n                parentNode.isloaded = true;\n                if (!noRender) {\n                    parentNode.refreshNode();\n                }\n            }\n        }\n    }\n});    /*\n * Dynamically loads children for a given node.\n * Makes sure that all requested nodes get prefetched.\n * Nodes to be prefetched have to have parentNode as a common (grand*)parent\n *\n * Generates \"multipleChildren:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n\n * @param parentNode {{@link dynamicTree.TreeNode}} the node for which children should be loaded\n * @param prefetchedListStr {String} comma separated URIs to be prefetched\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\n/*\n * Dynamically loads children for a given node.\n * Makes sure that all requested nodes get prefetched.\n * Nodes to be prefetched have to have parentNode as a common (grand*)parent\n *\n * Generates \"multipleChildren:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n\n * @param parentNode {{@link dynamicTree.TreeNode}} the node for which children should be loaded\n * @param prefetchedListStr {String} comma separated URIs to be prefetched\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\ndynamicTree.TreeSupport.addMethod('getTreeNodeChildrenPrefetched', function (parentNode, prefetchedListStr, userCallbackFn, errorCallbackFn, depth, disableSorting, noRender) {\n    var uri = parentNode.param.uri;\n    var url = this.urlGetNode + '&provider=' + this.providerId + '&uri=' + uri;\n    var prefetch = '';\n    if (prefetchedListStr) {\n        //            url += '&prefetch=' + prefetchedListStr;\n        prefetch = '&prefetch=' + prefetchedListStr;\n    }\n    if (depth) {\n        url += '&depth=' + depth;\n    }\n    var callback = function (obj, ni, uc, ec, ds, nr) {\n        return function () {\n            return obj.getTreeNodeChildrenPrefetchedCallback(ni, uc, ec, ds, nr);\n        };\n    }(this, parentNode.id, userCallbackFn, errorCallbackFn, disableSorting, noRender);\n    ajaxTargettedUpdate(url, {\n        fillLocation: this.ajaxBufferId,\n        callback: callback,\n        postData: prefetch,\n        errorHandler: baseErrorHandler,\n        hideLoader: this.hideLoader\n    });\n    if (!this.inInit) {\n        parentNode.wait();\n    }\n});\ndynamicTree.TreeSupport.addMethod('getTreeNodeChildrenPrefetchedCallback', function (parentNodeId, userCallbackFn, errorCallbackFn, disableSorting, noRender) {\n    var div = document.getElementById(this.nodeTextId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        } else {\n            this.fireServerErrorEvent();\n        }\n        return;\n    }\n    var n = xssUtil.unescape(jQuery(div).text()).evalJSON();\n    div = document.getElementById(this.ajaxBufferId);\n    jQuery(div).html('');\n    var parentNode = dynamicTree.nodes[parentNodeId];\n    parentNode.resetChilds();\n    parentNode.stopWaiting();\n    if (n.children) {\n        var treeId = parentNode.getTreeId();\n        var tree = treeId ? dynamicTree.trees[treeId] : null;\n        var tmpSortNodes = tree ? tree.sortNodes : null;\n        if (tree) {\n            tree.sortNodes = false;\n        }\n        for (var i = 0; i < n.children.length; i++) {\n            var node = this.processNode(n.children[i]);\n            parentNode.addChild(node);\n        }\n        if (tree) {\n            tree.sortNodes = tmpSortNodes;\n            disableSorting || parentNode.resortChilds();\n        }\n    }\n    parentNode.isloaded = true;\n    if (!noRender) {\n        parentNode.refreshNode();\n    }\n    if (userCallbackFn) {\n        userCallbackFn();\n    } else {\n        this.fireChildredPrefetchedLoadedEvent(parentNode.childs);\n    }\n});    /**\n * Expands the tree up to a given node, and then select it\n *\n * @param uriStr {String} path to the node\n * @param fnAction {Function} optional action to be called\n * @param findFirstChild {Boolean} optional parameter, if true first child of the node will be open\n */\n/**\n * Expands the tree up to a given node, and then select it\n *\n * @param uriStr {String} path to the node\n * @param fnAction {Function} optional action to be called\n * @param findFirstChild {Boolean} optional parameter, if true first child of the node will be open\n */\ndynamicTree.TreeSupport.addMethod('openAndSelectNode', function (uriStr, fnAction, findFirstChild, options) {\n    var fn = function (node) {\n        var tree = dynamicTree.trees[node.getTreeId()];\n        if (node.parent) {\n            if (tree && tree.rootNode != node.parent && tree.getState(node.parent.id) == dynamicTree.TreeNode.State.CLOSED) {\n                node.parent.handleNode();\n            }\n        }\n        if (node && jQuery('#dataChooserSource').length)\n            node.nofocus = true;\n        tree._selectOrEditNode(undefined, node, false, false, false, options);\n    };\n    this.processNodePath(uriStr, fn, findFirstChild);    // scroll tree container to make selected node visible\n    // scroll tree container to make selected node visible\n    var selectedNode = this.getSelectedNode();\n    if (selectedNode) {\n        selectedNode.scroll();\n    } else {\n        let rootNode = this.getRootNode();\n        if (rootNode.name) {\n            fn(rootNode);\n        }  else {\n            fn(rootNode.getFirstChild());\n        }\n    }\n    if (fnAction) {\n        fnAction();\n    }\n});\ndynamicTree.TreeSupport.addMethod('processNodePath', function (uriStr, fnForNode, findFirstChild) {\n    var node = this.getRootNode();\n    if (uriStr === '/') {\n        fnForNode(node);\n    } else {\n        var path = uriStr.split('/');\n        var i;\n        for (i = 0; i < path.length; i++) {\n            if (!path[i]) {\n                continue;\n            }\n            var oldNode = node;\n            node = this.findNodeChildByMetaName(node, path[i]);\n            if (!node) {\n                if (findFirstChild) {\n                    node = this.findNodeFirstNodeChildByAlphabeticalOrder(oldNode);\n                    if (!node) {\n                        return;\n                    }\n                } else {\n                    return;\n                }\n            }\n            fnForNode(node);\n        }\n    }\n});    /**\n * Returns TreeNode which is last node in node hierarchical chain for a given uri\n * If returned node corresponds to uriStr, it means no more server requests needed\n * If it corresponds to parent (grand-parent, etc.), the value shows existing root\n * from which the rest should be requested from server\n * Example: uriStr='/area/subarea/dept/prod1', return is TreeNode with uri '/area/subarea'.\n * It means, we need to load children of 'subarea' and children of 'dept' from server\n *\n * @param uriStr {String}\n */\n/**\n * Returns TreeNode which is last node in node hierarchical chain for a given uri\n * If returned node corresponds to uriStr, it means no more server requests needed\n * If it corresponds to parent (grand-parent, etc.), the value shows existing root\n * from which the rest should be requested from server\n * Example: uriStr='/area/subarea/dept/prod1', return is TreeNode with uri '/area/subarea'.\n * It means, we need to load children of 'subarea' and children of 'dept' from server\n *\n * @param uriStr {String}\n */\ndynamicTree.TreeSupport.addMethod('findLastLoadedNode', function (uriStr) {\n    var nodeHolder = { node: null };\n    var fn = function (holder) {\n        return function (node) {\n            holder.node = node;\n        };\n    }(nodeHolder);\n    this.processNodePath(uriStr, fn);\n    return nodeHolder.node;\n});\ndynamicTree.TreeSupport.addMethod('findNodeChildByMetaName', function (node, name) {\n    if (node.hasChilds()) {\n        for (var i = 0; i < node.childs.length; i++) {\n            if (node.childs[i].param.id == name) {\n                return node.childs[i];\n            }\n        }\n    }\n    return null;\n});    /*\n * This function gets the first child based on alphabetical order.\n * For e.g. if the node contains children: {topic, mail, apple, orange}, apple will be returned..\n *\n * @param node {{@link dynamicTree.TreeNode}} parent node\n */\n/*\n * This function gets the first child based on alphabetical order.\n * For e.g. if the node contains children: {topic, mail, apple, orange}, apple will be returned..\n *\n * @param node {{@link dynamicTree.TreeNode}} parent node\n */\ndynamicTree.TreeSupport.addMethod('findNodeFirstNodeChildByAlphabeticalOrder', function (node) {\n    var firstchildName = null;\n    var firstchildIndex = null;\n    if (node.childs.length > 0) {\n        firstchildName = node.childs[0].param.id;\n        firstchildIndex = 0;\n        var tempChildName = null;\n        var tempChildIndex = null;\n        for (var index = 1; index < node.childs.length; index++) {\n            tempChildName = node.childs[index].param.id;\n            tempChildIndex = index;\n            var loopCount = tempChildName.length < firstchildName.length ? tempChildName.length : firstchildName.length;\n            for (var loopIndex = 0; loopIndex < loopCount; loopIndex++) {\n                if (tempChildName.charCodeAt(loopIndex) < firstchildName.charCodeAt(loopIndex)) {\n                    firstchildName = tempChildName;\n                    firstchildIndex = tempChildIndex;\n                    break;\n                } else if (tempChildName.charCodeAt(loopIndex) > firstchildName.charCodeAt(loopIndex)) {\n                    //we break out.\n                    break;\n                }\n            }\n        }\n        return node.childs[firstchildIndex];\n    } else {\n        return null;\n    }\n});    /**\n * Recursively searching for node by node identifier starting from root node.\n * @param nodeId Node identifier.\n */\n/**\n * Recursively searching for node by node identifier starting from root node.\n * @param nodeId Node identifier.\n */\ndynamicTree.TreeSupport.addMethod('findNodeById', function (nodeId, startNode) {\n    return function _findNodeById(keyNode, node) {\n        if (!node || !keyNode) {\n            return null;\n        }\n        if (node.param.id === keyNode) {\n            return node;\n        }\n        if (node.hasChilds()) {\n            for (var i = 0; i < node.childs.length; ++i) {\n                var found = _findNodeById(keyNode, node.childs[i]);\n                if (found) {\n                    return found;\n                }\n            }\n        }\n        return null;\n    }(nodeId, startNode ? startNode : this.getRootNode());\n});    /*\n * Checks that node has child folders that are loaded and open\n *\n * @param node {{@link dynamicTree.TreeNode}} parent node\n */\n/*\n * Checks that node has child folders that are loaded and open\n *\n * @param node {{@link dynamicTree.TreeNode}} parent node\n */\ndynamicTree.TreeSupport.addMethod('hasVisibleFolders', function (rootObj) {\n    if (this.bShowRoot) {\n        return true;\n    }\n    var children = rootObj.children;\n    if (children) {\n        for (var i = 0; i < children.length; i++) {\n            var grandchildren = rootObj.children[i].children;\n            if (grandchildren && grandchildren.length > 0) {\n                return true;\n            }\n        }\n    }\n    return false;\n});    ///////////////////////////////////////////\n// Message system support\n///////////////////////////////////////////\n///////////////////////////////////////////\n// Message system support\n///////////////////////////////////////////\ndynamicTree.TreeSupport.addMethod('getMessage', function (messageId, userCallbackFn, errorCallbackFn) {\n    var url = this.urlGetMessage + '&messageId=' + messageId;\n    var callback = function (obj, uc, ec) {\n        return function () {\n            return obj.getMessageCallback(uc, ec);\n        };\n    }(this, userCallbackFn, errorCallbackFn);\n    ajaxTargettedUpdate(url, {\n        fillLocation: this.ajaxBufferId,\n        callback: callback,\n        errorHandler: baseErrorHandler,\n        hideLoader: this.hideLoader\n    });\n});\ndynamicTree.TreeSupport.addMethod('getMessageCallback', function (userCallbackFn, errorCallbackFn) {\n    var div = document.getElementById(this.ajaxBufferId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        }\n        return;\n    }    // clean AJAX buffer\n    // clean AJAX buffer\n    var divEl = jQuery(div);\n    var text = trim(divEl.html());\n    divEl.html('');\n    if (userCallbackFn) {\n        userCallbackFn(text);\n    }\n});    ////////////////////////////////////////////////////////\n// Message system support\n////////////////////////////////////////////////////////\n/**\n * Generates \"server:error\" event.\n */\n////////////////////////////////////////////////////////\n// Message system support\n////////////////////////////////////////////////////////\n/**\n * Generates \"server:error\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireServerErrorEvent', function () {\n    this._getElement().fire('server:error', {});\n});    /**\n * Generates \"tree:loaded\" event.\n */\n/**\n * Generates \"tree:loaded\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireTreeLoadedEvent', function (tree) {\n    this._getElement().fire('tree:loaded', { tree: tree });\n});    /**\n * Generates \"children:loaded\" event.\n */\n/**\n * Generates \"children:loaded\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireChildrenLoadedEvent', function (nodes) {\n    this._getElement().fire('children:loaded', { nodes: nodes });\n});    /**\n * Generates \"multipleChildren:loaded\" event.\n */\n/**\n * Generates \"multipleChildren:loaded\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireMultipleChildrenLoadedEvent', function (parentNodeIds, metaNodes) {\n    this._getElement().fire('multipleChildren:loaded', {\n        parentNodeIds: parentNodeIds,\n        metaNodes: metaNodes\n    });\n});    /**\n * Generates \"childredPrefetched:loaded\" event.\n */\n/**\n * Generates \"childredPrefetched:loaded\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireChildredPrefetchedLoadedEvent', function (nodes) {\n    this._getElement().fire('childredPrefetched:loaded', { nodes: nodes });\n});\n\nexport default dynamicTree;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @version: $Id$\n */\nimport jQuery from 'jquery';\nimport dynamicTree from './dynamicTree.treesupport';\nimport {deepClone, isIPad} from '../util/utils.common';\nimport TouchController from '../util/touch.controller';\n\n// Creating RepositoryFolder class.\ndynamicTree.RepositoryFolder = function(options) {\n    dynamicTree.TreeNode.call(this, options);\n\n    this.Types = {\n        Folder : new dynamicTree.TreeNode.Type('com.jaspersoft.jasperserver.api.metadata.common.domain.Folder'),\n        SuperRoot : new dynamicTree.TreeNode.Type('superroot'),\n        Root : new dynamicTree.TreeNode.Type('root')\n    };\n    this.nodeHeaderTemplateDomId = \"list_responsive_collapsible_folders:folders\";\n\n    if (this.param.extra && this.param.extra.isActiveThemeFolder) {\n        this.param.cssClass = this.ACTIVE_THEME_CLASS;\n    }\n};\nif(dynamicTree.TreeNode) {\n    dynamicTree.RepositoryFolder.prototype = deepClone(dynamicTree.TreeNode.prototype);\n}\n\ndynamicTree.RepositoryFolder.addVar('ACTIVE_THEME_CLASS', \"activeTheme\");\n\ndynamicTree.RepositoryFolder.addMethod('isParent', function() {\n    return this.param.type == this.Types.Folder.name ||\n        this.param.type == this.Types.SuperRoot.name ||\n        this.param.type == this.Types.Root.name;\n});\n\ndynamicTree.RepositoryFolder.addMethod('isSuperRoot', function() {\n    return this.param.type == this.Types.SuperRoot.name;\n});\n\ndynamicTree.RepositoryFolder.addMethod('isPublic', function() {\n    return this.param.id === 'public';\n});\n\ndynamicTree.createRepositoryTree = function(id, options) {\n    // Creating of TreeSupport instance and replacing its method for repository usage.\n    var orgMode = (options.organizationId != null && options.organizationId !== \"\");\n\n    //enable override for showing root node.\n    if((options.bShowRoot ==  null)){\n        options.bShowRoot = !orgMode;\n    }\n\n    if (!options.nodeClass) {\n        options.nodeClass = dynamicTree.RepositoryFolder;\n    }\n\n    options.templateDomId = \"list_responsive_collapsible_folders\";\n\n    var tree = new dynamicTree.TreeSupport(id, options);\n\n    tree.organizationId = options.organizationId;\n    tree.publicFolderUri = options.publicFolderUri;\n    tree.orgMode = orgMode;\n\n    tree.modifyRootObject = function (rootObj, isChildrenCallback, parentNode) {\n        var updatedRootObj;\n        if (isChildrenCallback) {\n            updatedRootObj = [];\n            for (var i=0; i<rootObj.length; i++) {\n                if (rootObj[i].uri != this.publicFolderUri || (!parentNode || parentNode.param.uri == \"/\")) {\n                    updatedRootObj.push(rootObj[i]);\n                }\n            }\n        } else {\n            if (this.orgMode && rootObj.children != null) {\n                var publicFolder;\n                var ch = rootObj.children;\n                var newCh = [];\n                for (var j=0; j<ch.length; j++) {\n                    if (ch[j].uri == this.publicFolderUri) {\n                        publicFolder = ch[j];\n                    } else {\n                        newCh.push(ch[j]);\n                    }\n                }\n                rootObj.children = newCh;\n\n                updatedRootObj = {\n                    type: 'superroot',\n                    label: '',\n                    extra: {}\n                };\n\n                updatedRootObj.children = publicFolder ? [rootObj, publicFolder] : [rootObj];\n            } else {\n                updatedRootObj = rootObj;\n            }\n        }\n        return updatedRootObj;\n    };\n\n    tree.getRootNode = function() {\n        var rootNode = this.rootNode;\n\n        if (rootNode.isSuperRoot()) {\n            return (rootNode.childs[0].isPublic() && rootNode.childs.length > 1) ? rootNode.childs[1] : rootNode.childs[0];\n        }\n\n        return rootNode;\n    };\n\n    tree.findNodeChildByMetaName = function(node, name) {\n        if (node.isSuperRoot()) {\n            var publicNode;\n            var rootNode;\n            if (node.childs[0].isPublic()) {\n                publicNode = node.childs[0];\n                rootNode = node.childs[1];\n            } else {\n                publicNode = node.childs[1];\n                rootNode = node.childs[0];\n            }\n\n            if (name === 'public') {\n                return publicNode;\n            } else {\n                node = rootNode;\n            }\n        }\n\n        if (node.hasChilds()) {\n            for (var i = 0; i < node.childs.length; i++) {\n                if (node.childs[i].param.id == name) {\n                    return node.childs[i];\n                }\n            }\n        }\n\n        if (name == 'public' && node.parent && node.parent.isSuperRoot()) {\n            return tree.findNodeChildByMetaName(node.parent, name);\n        }\n\n        return null;\n    };\n\n    if(isIPad()){\n        var scrollElement = jQuery('#' + id)[0];\n        tree.touchController = new TouchController(scrollElement, jQuery(scrollElement).parent(1), {\n            absolute: true\n        });\n    }\n\n    return tree;\n};\n\nexport default dynamicTree;"],"sourceRoot":""}