{"version":3,"sources":["webpack://jrs-ui/./src/org/org.role.mng.main.js","webpack://jrs-ui/./src/org/org.role.mng.actions.js","webpack://jrs-ui/./src/org/org.role.mng.components.js","webpack://jrs-ui/./src/org/org.root.role.js","webpack://jrs-ui/./src/manage/manageRoles.common.js"],"names":["canAddRole","orgModule","canDeleteRole","role","tenantId","_","roleName","canDeleteAll","roles","length","detect","Event","Action","initialize","opt","layoutModule","webHelpModule","options","window","localContext","roleMngInitOptions","removeContextMenuTreePlugin","json","this","roleList","toolbarModel","actionModel","text","org","addDialog","show","bind","hide","properties","event","tree","id","getOrganization","navigateToManager","bindAsEventListener","isProVersion","ADD","buttonId","action","actionArgs","test","DELETE","CE_LIST_TEMPLATE_ID","CE_ITEM_TEMPLATE_ID","PRO_LIST_TEMPLATE_ID","PRO_ITEM_TEMPLATE_ID","ROLE_ID_PATTERN","ROLE_ORGANIZATION_PATTERN","listTemplateId","itemTemplateId","value","item","dynamicList","label","processTemplate","element","jQuery","find","update","getValue","ROLE_NAME_PATTERN","EXTERNAL_ROLE_PATTERN","viewAssignedListTemplateDomId","viewAssignedItemTemplateDomId","searchAssigned","showAssigned","panel","external","regExp","RegExp","unsupportedSymbols","RegExpRepresenter","getRepresentedString","inputValidator","_validators","_initCustomEvents","rmProperties","setValue","checked","parents","removeClass","addClass","entity","_value","resetValidation","changeReadonly","_toRole","ValidationModule","onExist","onNotExist","save","oldRole","isEditMode","getAssignedEntities","getUnassignedEntities","entityName","getNameWithTenant","assigned","unassigned","dfd","setProperties","resolve","$activeElements","$availableAndAssignedEl","on","input","target","stopPropagation","e","val","users","ADD_ROLE_ID","ADD_ROLE_BUTTON_ID","CANCEL_ROLE_BUTTON_ID","ADD_ROLE_NAME_ID","ADD_ROLE_BUTTON_TITLE_PATTERN","addRole","addBtn","cancelBtn","button","matchAny","_doAdd","organization","title","msg","isRoot","organizationName","dialogs","focus","_validate","Object","assign","orgRoleMngActions","orgRoleMngComponents","orgRoleMngMain","jrsConfigs","TenantsTreeView"],"mappings":"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","file":"_chunks/chunk.4093.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\nimport orgModule from '../manage/mng.root';\nimport _ from 'underscore';\nimport layoutModule from '../core/core.layout';\nimport webHelpModule from '../components/components.webHelp';\nimport {isProVersion} from \"../namespace/namespace\";\n\nfunction invokeRoleAction(actionName, options) {\n    var action = orgModule.roleActionFactory[actionName](options);\n    action.invokeAction();\n}\nfunction invokeRoleManagerAction(actionName, options) {\n    var action = orgModule.roleManager.actionFactory[actionName](options);\n    action.invokeAction();\n}\nfunction canAddRole() {\n    if (orgModule.roleManager.tenantsTree) {\n        return orgModule.roleManager.tenantsTree.getTenant() != null;\n    } else {\n        return true;\n    }\n}\nfunction canEditRole(role) {\n    var role = role ? role : orgModule.properties.getValue();\n    return role.tenantId || orgModule.manager.isUserSuperuser();\n}\nfunction canDeleteRole(role) {\n    var role = role ? role : orgModule.properties.getValue();\n    return role.tenantId || orgModule.manager.isUserSuperuser() && !_.contains(orgModule.systemRoles, role.roleName);\n}\nfunction canDeleteAll() {\n    var roles = orgModule.entityList.getSelectedEntities();\n    return roles.length > 0 && !roles.detect(function (role) {\n        return !canDeleteRole(role);\n    });\n}\norgModule.roleManager = {\n    Event: {},\n    Action: {},\n    initialize: function (opt) {\n        layoutModule.resizeOnClient('folders', 'roles', 'properties');\n        webHelpModule.setCurrentContext('admin');\n        var options = _.extend(opt, window.localContext.roleMngInitOptions, { removeContextMenuTreePlugin: true });    // Manager customization.\n        // Manager customization.\n        orgModule.manager.initialize(options);\n        orgModule.manager.entityJsonToObject = function (json) {\n            return new orgModule.Role(json);\n        };\n        orgModule.manager.relatedEntityJsonToObject = function (json) {\n            return new orgModule.User(json);\n        };\n        this.roleList.initialize({\n            toolbarModel: this.actionModel,\n            text: orgModule.manager.state.text\n        });    // Dialogs customization.\n        // Dialogs customization.\n        orgModule.addDialog.show = function (org) {\n            this.addDialog.show(org);\n        }.bind(this);\n        orgModule.addDialog.hide = function (org) {\n            this.addDialog.hide(org);\n        }.bind(this);\n        this.properties.initialize();\n        this.addDialog.initialize();\n        orgModule.observe('server:unavailable', function (event) {\n            var tree = orgModule.manager.tree;\n            var id = tree ? tree.getOrganization().id : null;\n            new orgModule.Role({\n                roleName: '',\n                tenantId: id\n            }).navigateToManager();\n        }.bindAsEventListener(this));\n        orgModule.observe('entity:deleted', function () {\n            orgModule.properties.hide();\n        });\n        orgModule.observe('entities:deleted', function () {\n            orgModule.properties.hide();\n        });\n        if (!isProVersion()) {\n            orgModule.manager.reloadEntities();\n        }\n    },\n    actionModel: {\n        ADD: {\n            buttonId: 'addNewRoleBtn',\n            action: orgModule.invokeClientAction,\n            actionArgs: 'create',\n            test: canAddRole\n        },\n        DELETE: {\n            buttonId: 'deleteAllRolesBtn',\n            action: orgModule.invokeClientAction,\n            actionArgs: 'deleteAll',\n            test: canDeleteAll\n        }\n    }\n};\n\norgModule.canDeleteRole = canDeleteRole;\norgModule.canEditRole = canEditRole;\norgModule.canAddRole = canAddRole;\norgModule.canDeleteAllRoles = canDeleteAll;\n\nexport default orgModule;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @version: $Id$\n */\n\nimport orgModule from './org.role.mng.main';\n\norgModule.roleActionFactory = {\n};\n\norgModule.roleManager.actionFactory = {\n};\n\nexport default orgModule;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @version: $Id$\n */\n\nimport layoutModule from '../core/core.layout';\nimport {isProVersion} from \"../namespace/namespace\";\nimport {dynamicList} from '../components/list.base';\nimport RegExpRepresenter from '../tenantImportExport/utils/RegExpRepresenter';\nimport dialogs from '../components/components.dialogs';\nimport {ValidationModule, matchAny} from \"../util/utils.common\";\nimport orgModule from \"./org.role.mng.main\";\nimport jQuery from 'jquery';\n\n/////////////////////////////////\n// Panel which shows roles list\n/////////////////////////////////\norgModule.roleManager.roleList = {\n    CE_LIST_TEMPLATE_ID: \"tabular_oneColumn:roles\",\n    CE_ITEM_TEMPLATE_ID: \"tabular_oneColumn:roles:leaf\",\n    PRO_LIST_TEMPLATE_ID: \"tabular_twoColumn:roles\",\n    PRO_ITEM_TEMPLATE_ID: \"tabular_twoColumn:roles:leaf\",\n\n    ROLE_ID_PATTERN: \".ID\",\n    ROLE_ORGANIZATION_PATTERN: \".organization\",\n\n    initialize: function(options) {\n        orgModule.entityList.initialize({\n            listTemplateId: (isProVersion()) ? this.PRO_LIST_TEMPLATE_ID : this.CE_LIST_TEMPLATE_ID,\n            itemTemplateId: (isProVersion()) ? this.PRO_ITEM_TEMPLATE_ID : this.CE_ITEM_TEMPLATE_ID,\n            toolbarModel: options.toolbarModel,\n            text: options.text\n        });\n\n        orgModule.entityList._createEntityItem = function(value) {\n            var item = new dynamicList.ListItem({\n                label: value.roleName,\n                value: value\n            });\n\n            item.processTemplate = function(element) {\n                var id = jQuery(element).find(orgModule.roleManager.roleList.ROLE_ID_PATTERN)[0];\n                id.update(this.getValue().roleName);\n\n                var tenantId = this.getValue().tenantId;\n                if (isProVersion() && tenantId) {\n                    var org = jQuery(element).find(orgModule.roleManager.roleList.ROLE_ORGANIZATION_PATTERN)[0];\n                    org.update(tenantId);\n                }\n\n                return element;\n            };\n\n            return item;\n        }\n\n    }\n};\n\n////////////////////////////////////////\n// Panel which shows role's properties\n////////////////////////////////////////\norgModule.roleManager.properties = {\n    ROLE_NAME_PATTERN: \"#roleName\",\n    EXTERNAL_ROLE_PATTERN: \"#externalRole\",\n\n    role: null,\n\n    initialize: function() {\n\n        orgModule.properties.initialize({\n            viewAssignedListTemplateDomId: \"list_responsive_fields\",\n            viewAssignedItemTemplateDomId: \"list_responsive_fields:leaf\",\n            searchAssigned: true,\n            showAssigned: true\n        });\n\n        var panel = jQuery('#' + orgModule.properties._id);\n\n        this.roleName = panel.find(this.ROLE_NAME_PATTERN)[0];\n        this.external = panel.find(this.EXTERNAL_ROLE_PATTERN)[0];\n\n        this.roleName.regExp = new RegExp(orgModule.Configuration.roleNameNotSupportedSymbols);\n        this.roleName.unsupportedSymbols =\n            new RegExpRepresenter(orgModule.Configuration.roleNameNotSupportedSymbols).getRepresentedString();\n\n        this.roleName.inputValidator = orgModule.createInputRegExValidator(this.roleName);\n\n        this._validators = [\n            orgModule.createBlankValidator(this.roleName, \"roleNameIsEmpty\"),\n            this.roleName.inputValidator\n        ];\n\n        this._initCustomEvents();\n\n        orgModule.properties.setProperties = function(properties) {\n            var rmProperties = orgModule.roleManager.properties;\n\n            rmProperties.roleName.setValue(properties.roleName);\n            rmProperties.external.checked = properties.external;\n\n            if (properties.external) {\n                jQuery(rmProperties.external).parents(\"fieldset\").removeClass(layoutModule.HIDDEN_CLASS);\n            } else {\n                jQuery(rmProperties.external).parents(\"fieldset\").addClass(layoutModule.HIDDEN_CLASS);\n            }\n\n            orgModule.invokeServerAction(orgModule.ActionMap.SEARCH_ASSIGNED, {\n                text: \"\"\n            });\n        };\n\n        orgModule.properties._deleteEntity = function() {\n            orgModule.invokeClientAction(orgModule.ActionMap.DELETE, {entity: this._value});\n        };\n\n        orgModule.properties._editEntity = function() {\n            var rmProperties = orgModule.roleManager.properties;\n\n            this.resetValidation([rmProperties.ROLE_NAME_PATTERN]);\n            this.changeReadonly(true, [rmProperties.ROLE_NAME_PATTERN]);\n        };\n\n        orgModule.properties._showEntity = function() {\n            var rmProperties = orgModule.roleManager.properties;\n\n            this.resetValidation([rmProperties.ROLE_NAME_PATTERN]);\n            this.changeReadonly(false, [rmProperties.ROLE_NAME_PATTERN]);\n        };\n\n        orgModule.properties.validate = function() {\n            var rmProperties = orgModule.roleManager.properties;\n\n            var role = rmProperties._toRole(this._value.tenantId);\n\n            if (role.roleName == this._value.roleName) {\n                this.save(role);\n            } else {\n                return ValidationModule.validateLegacy(rmProperties._validators) && orgModule.invokeServerAction(orgModule.ActionMap.EXIST, {\n                    entity: role,\n                    onExist: function() {\n                        ValidationModule.showError(rmProperties.roleName, orgModule.messages['roleNameIsAlreadyInUse']);\n                    }.bind(this),\n                    onNotExist: function() {\n                        ValidationModule.hideError(rmProperties.roleName);\n                        this.save(role);\n                    }.bind(this)\n                });\n            }\n        };\n\n        orgModule.properties.isChanged = function() {\n            var rmProperties = orgModule.roleManager.properties;\n\n            var oldRole = this._value;\n            var role = rmProperties._toRole();\n\n            return this.isEditMode && (oldRole.roleName != role.roleName ||\n                this.getAssignedEntities().length > 0 || this.getUnassignedEntities().length > 0);\n        };\n\n        orgModule.properties.save = function(role) {\n            orgModule.invokeServerAction(\"update\", {\n                entityName: this._value.getNameWithTenant(),\n                entity: role,\n                assigned: this.getAssignedEntities(),\n                unassigned: this.getUnassignedEntities()\n            });\n        };\n\n        orgModule.properties.cancel = function() {\n            var dfd = new jQuery.Deferred();\n            this.setProperties(this._value);\n            return dfd.resolve();\n        };\n\n        orgModule.properties.canEdit = function() {\n            if (this._value == null) {\n                return true;\n            } else {\n                return orgModule.canEditRole(this._value);\n            }\n        };\n\n        orgModule.properties.canDelete = function() {\n            if (this._value == null) {\n                return true;\n            } else {\n                return orgModule.canDeleteRole(this._value);\n            }\n        };\n\n    },\n\n    _initCustomEvents: function(roles) {\n        var panel = jQuery('#' + orgModule.properties._id),\n            $activeElements = jQuery(\"#moveButtons, #userEnable\"),\n            $availableAndAssignedEl = jQuery(\"#editUsers\").find(\"#assigned, #available\");\n\n\n        panel.on('keyup', function(event) {\n            var input = event.target;\n\n            if (input == this.roleName) {\n                ValidationModule.validateLegacy([input.inputValidator]);\n                event.stopPropagation();\n            }\n\n            orgModule.properties._toggleButton();\n\n        }.bind(this));\n\n        $activeElements.on('click', function(e) {\n            orgModule.properties._toggleButton();\n        });\n\n        $availableAndAssignedEl.on('dblclick', function() {\n            orgModule.properties._toggleButton();\n        });\n    },\n\n    _toRole: function(tenantId) {\n        var panel = jQuery('#' + orgModule.properties._id);\n\n        var role = new orgModule.Role({\n            roleName: panel.find(this.ROLE_NAME_PATTERN).val()\n        });\n\n        if(tenantId) {\n            role.tenantId = tenantId;\n        }\n\n        role.users = orgModule.properties.getAssignedEntities();\n\n        return role;\n    }\n};\n\n////////////////////////////////////////\n// Create role dialog\n////////////////////////////////////////\norgModule.roleManager.addDialog = {\n    ADD_ROLE_ID: \"addRole\",\n    ADD_ROLE_BUTTON_ID: \"addRoleBtn\",\n    CANCEL_ROLE_BUTTON_ID: \"cancelAddRoleBtn\",\n    ADD_ROLE_NAME_ID: \"addRoleName\",\n\n    ADD_ROLE_BUTTON_TITLE_PATTERN: \".wrap\",\n\n    initialize: function() {\n        this.addRole = jQuery('#' + this.ADD_ROLE_ID)[0];\n        this.addBtn = jQuery('#' + this.ADD_ROLE_BUTTON_ID)[0];\n        this.cancelBtn = jQuery('#' + this.CANCEL_ROLE_BUTTON_ID)[0];\n        this.roleName = jQuery('#' + this.ADD_ROLE_NAME_ID)[0];\n\n        this.roleName.regExp = new RegExp(orgModule.Configuration.roleNameNotSupportedSymbols);\n        this.roleName.unsupportedSymbols =\n            new RegExpRepresenter(orgModule.Configuration.roleNameNotSupportedSymbols).getRepresentedString();\n\n        this.roleName.inputValidator = orgModule.createInputRegExValidator(this.roleName);\n\n        this._validators = [\n            orgModule.createBlankValidator(this.roleName, \"roleNameIsEmpty\"),\n            this.roleName.inputValidator\n        ];\n\n        jQuery(this.addRole).on('keyup', function(event) {\n            var input = event.target;\n\n            if (input == this.roleName) {\n                ValidationModule.validateLegacy([input.inputValidator]);\n                event.stopPropagation();\n            }\n        }.bind(this));\n\n        jQuery(this.addRole).on('click', function(event) {\n            var button = matchAny(event.target, [layoutModule.BUTTON_PATTERN], true);\n\n            if (button == this.addBtn) {\n                this._doAdd();\n            } else if(button == this.cancelBtn) {\n                this.hide();\n            }\n        }.bind(this));\n    },\n\n    show: function(organization) {\n        this.organization = organization;\n\n        ValidationModule.hideError(this.roleName);\n\n        var title = jQuery(this.addBtn).find(this.ADD_ROLE_BUTTON_TITLE_PATTERN)[0];\n        if (title) {\n            var msg = (this.organization && !this.organization.isRoot()) ?\n                orgModule.getMessage('addRoleTo', {\n                    organizationName: orgModule.truncateOrgName(this.organization.id)\n                }) :\n                orgModule.getMessage('addRole');\n\n            title.update(msg);\n        }\n\n        this.addBtn.title = (this.organization && !this.organization.isRoot()) ?\n            orgModule.getMessage('addRoleTo', { organizationName: this.organization.id }) :\n            orgModule.getMessage('addRole');\n\n        dialogs.popup.show(this.addRole, true);\n\n        try {\n            this.roleName.focus();\n        } catch(e) {}\n    },\n\n    hide: function() {\n        dialogs.popup.hide(this.addRole);\n        jQuery(this.roleName).val(\"\");\n    },\n\n    _validate: function() {\n        return ValidationModule.validateLegacy(this._validators);\n    },\n\n    _doAdd:function() {\n        if (this._validate()) {\n            var role = new orgModule.Role({\n                roleName: jQuery(this.roleName).val()\n            });\n\n            if (this.organization && !this.organization.isRoot()) { role.tenantId = this.organization.id; }\n\n            orgModule.invokeServerAction(orgModule.ActionMap.EXIST, {\n                entity: role,\n                onExist: function() {\n                    ValidationModule.showError(this.roleName, orgModule.messages['roleNameIsAlreadyInUse']);\n                }.bind(this),\n                onNotExist: function() {\n                    ValidationModule.hideError(this.roleName);\n\n                    orgModule.invokeServerAction(orgModule.ActionMap.CREATE, {\n                        entity: role\n                    });\n                }.bind(this)\n            });\n        }\n    }\n};\n\nexport default orgModule;\n\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport orgRoleMngActions from './org.role.mng.actions';\nimport orgRoleMngComponents from './org.role.mng.components';\nimport orgRoleMngMain from './org.role.mng.main';\n\nexport default Object.assign(orgRoleMngActions, orgRoleMngComponents, orgRoleMngMain);","/*\n * Copyright (C) 2005 - 2019 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport orgModule from '../org/org.root.role';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport TenantsTreeView from '../tenantImportExport/view/TenantsTreeView';\nimport './mng.common.actions';\nimport '../org/org.role.mng.actions';\n\nif (typeof orgModule.messages === 'undefined') {\n    orgModule.messages = {};\n}\nif (typeof orgModule.Configuration === 'undefined') {\n    orgModule.Configuration = {};\n}\n_.extend(window.localContext, jrsConfigs.roleManagement.localContext);\n_.extend(orgModule.messages, jrsConfigs.roleManagement.orgModule.messages);\n_.extend(orgModule.Configuration, jrsConfigs.roleManagement.orgModule.Configuration);\norgModule.roleManager.initialize({ TenantsTreeView: TenantsTreeView });\n"],"sourceRoot":""}