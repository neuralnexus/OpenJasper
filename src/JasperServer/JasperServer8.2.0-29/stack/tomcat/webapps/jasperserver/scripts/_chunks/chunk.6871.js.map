{"version":3,"sources":["webpack://jrs-ui/./src/config/requestSettings.js","webpack://jrs-ui/./src/core/core.ajax.utils.js","webpack://jrs-ui/./src/i18n/all.properties.js","webpack://jrs-ui/./src/dataSource/model/BaseDataSourceModel.js","webpack://jrs-ui/../js-sdk/src/common/util/featureDetection.js","webpack://jrs-ui/./src/util/redirectToUrlUtil.js","webpack://jrs-ui/./src/util/historyHelper.js","webpack://jrs-ui/./src/settings/userTimeZones.settings.js","webpack://jrs-ui/./src/dataSource/view/BaseDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/timezoneTemplate.htm","webpack://jrs-ui/./src/dataSource/template/testConnectionTemplate.htm","webpack://jrs-ui/./src/dataSource/enum/connectionTypes.js","webpack://jrs-ui/./src/i18n/jasperserver_config.properties.js","webpack://jrs-ui/../js-sdk/src/common/templates/dialogErrorPopupTemplate.htm","webpack://jrs-ui/./src/dataSource/model/CustomDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/CustomDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/customDataSourceTemplate.htm","webpack://jrs-ui/./src/dataSource/enum/dataSourceResourceTypes.js","webpack://jrs-ui/./src/settings/dataSourcePatterns.settings.js","webpack://jrs-ui/./src/dataSource/util/settingsUtility.js","webpack://jrs-ui/./src/dataSource/model/JdbcDriverModel.js","webpack://jrs-ui/./src/dataSource/collection/JdbcDriverCollection.js","webpack://jrs-ui/./src/dataSource/model/JdbcDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/dialog/BaseDialog.js","webpack://jrs-ui/./src/dataSource/template/dialog/baseDialogTemplate.htm","webpack://jrs-ui/../js-sdk/src/common/transport/AjaxFormSubmitter.js","webpack://jrs-ui/../js-sdk/src/components/loadingOverlay/LoadingOverlay.js","webpack://jrs-ui/../js-sdk/src/components/loadingOverlay/template/overlayLayout.htm","webpack://jrs-ui/./src/dataSource/view/dialog/UploadJdbcDriverDialog.js","webpack://jrs-ui/./src/dataSource/template/dialog/uploadJdbcDriverDialogTemplate.htm","webpack://jrs-ui/./src/dataSource/template/dialog/fileUploadTemplate.htm","webpack://jrs-ui/./src/dataSource/template/jdbcCustomFieldTemplate.htm","webpack://jrs-ui/../js-sdk/src/common/templates/components.pickers.htm","webpack://jrs-ui/./src/settings/awsSettings.settings.js","webpack://jrs-ui/./src/dataSource/template/jdbcOptionalFieldTemplate.htm","webpack://jrs-ui/./src/dataSource/view/JdbcDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/jdbcSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/template/jdbcAthenaAwsRegionTemplate.htm","webpack://jrs-ui/./src/dataSource/template/jdbcfileLocationTemplate.htm","webpack://jrs-ui/./src/dataSource/model/JndiDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/JndiDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/jndiSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/model/AwsDataSourceModel.js","webpack://jrs-ui/./src/dataSource/template/awsSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/view/AwsDataSourceView.js","webpack://jrs-ui/./src/dataSource/model/AzureSqlDataSourceModel.js","webpack://jrs-ui/./src/dataSource/template/azureSqlSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/view/AzureSqlDataSourceView.js","webpack://jrs-ui/./src/dataSource/model/SubDataSourceModel.js","webpack://jrs-ui/./src/dataSource/collection/SubDataSourceCollection.js","webpack://jrs-ui/./src/dataSource/model/VirtualDataSourceModel.js","webpack://jrs-ui/./src/components/components.dependent.dialog.js","webpack://jrs-ui/./src/dataSource/view/SubDataSourceItemView.js","webpack://jrs-ui/./src/dataSource/template/subDataSourceItemTemplate.htm","webpack://jrs-ui/./src/dataSource/view/SubDataSourcesListView.js","webpack://jrs-ui/./src/dataSource/template/subDataSourcesListTemplate.htm","webpack://jrs-ui/./src/dataSource/view/VirtualDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/virtualSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/template/dialog/dependenciesTemplate.htm","webpack://jrs-ui/./src/dataSource/model/BeanDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/BeanDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/beanSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/view/MongoDbDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/mongoDbSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/enum/mongoJdbcFileSourceTypes.js","webpack://jrs-ui/./src/dataSource/model/MongoDbJdbcDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/MongoDbJdbcDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/mongoDbJdbcSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/template/mongoDbJdbcFileLocationSectionTemplate.htm","webpack://jrs-ui/./src/dataSource/view/DiagnosticCustomDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/InternalDiagnosticTemplate.htm","webpack://jrs-ui/./src/dataSource/factory/dataSourceViewFactory.js","webpack://jrs-ui/./src/dataSource/saveDialog/BaseSaveDialogView.js","webpack://jrs-ui/./src/dataSource/saveDialog/template/baseSaveDialogTemplate.htm","webpack://jrs-ui/../js-sdk/src/common/enum/javaTypeMapper.js","webpack://jrs-ui/./src/dataSource/fileDataSource/enum/javaTypes.js","webpack://jrs-ui/./src/dataSource/fileDataSource/SimpleDomainModel.js","webpack://jrs-ui/../js-sdk/src/common/templates/standardConfirm.htm","webpack://jrs-ui/./src/dataSource/saveDialog/DomainSaveDialogView.js","webpack://jrs-ui/./src/dataSource/saveDialog/template/domainSaveDialogTemplate.htm","webpack://jrs-ui/./src/dataSource/fileDataSource/template/simpleDomainDialogTemplate.htm","webpack://jrs-ui/./src/dataSource/fileDataSource/SimpleDomainView.js","webpack://jrs-ui/./src/dataSource/saveDialog/TextDataSourceSaveDialogView.js","webpack://jrs-ui/./src/dataSource/saveDialog/template/textDataSourceSaveDialogTemplate.htm","webpack://jrs-ui/./src/dataSource/factory/saveDialogViewFactory.js","webpack://jrs-ui/./src/dataSource/collection/CustomDataSourceCollection.js","webpack://jrs-ui/./src/dataSource/DataSourceController.js","webpack://jrs-ui/./src/dataSource/template/dataSourceMainTemplate.htm"],"names":["locale","configs","settings","defaultSettings","headers","showErrorPopup","errorMessage","options","indexOf","dialogs","baseErrorHandler","ajaxAgent","status","responseText","getResponseHeader","document","location","jQuery","length","body","html","JRS","window","parent","removeClass","show","errorHandler","showMessageDialog","bundle","Object","keys","reduce","acc","key","ResourceModel","defaults","_","connectionType","undefined","validation","initialize","attributes","contextPath","jrsConfigs","this","isNew","parentFolderUri","set","silent","name","uri","isEditMode","testConnection","validate","_isValid","dfr","$","loadingDialog","ajax","loadingDialogOpened","responseTimer","setTimeout","AjaxRequester","data","toJSON","Backbone","type","url","contentType","JSON","stringify","always","clearTimeout","done","resolve","fail","reject","promise","supportsTouch","navigator","msMaxTouchPoints","href","token","referrer","JSCookie","encodeURIComponent","defaultUrl","currentUrl","tokenUrl","value","decodeURIComponent","redirectToUrl","settingsStore","testConnectionInProgress","testConnectionDetailsMessage","PAGE_TITLE_NEW_MESSAGE_CODE","PAGE_TITLE_EDIT_MESSAGE_CODE","modelConstructor","BaseDataSourceModel","events","timezones","modelAttrs","dataSource","model","Validation","valid","fieldIsValid","invalid","fieldIsInvalid","forceUpdate","selector","initialization","self","render","apply","setPageTitle","msg","button","rc","$el","find","addClass","text","i18n","xhr","errMsg","getTestConnectionErrorMessage","details","showTestConnectionMessageDetails","response","parse","e","parameters","updateModelProperty","$targetEl","target","update","attr","is","val","get","_idUpdatedManually","newId","empty","renderTimezoneSection","append","templateData","renderTestConnectionSection","renderOrAddAnyBlock","container","fragmentName","first","children","modelAttributes","title","$pageTitleEl","view","$parentEl","error","validField","invalidField","toString","remove","CustomDataSourceModel","extend","repositoryResourceTypes","constructor","dataSourceName","dataSourceType","connectionTypes","arguments","result","prototype","customFields","testable","queryTypes","getCustomFieldsDefinition","requestSettings","getCustomFieldsDefinitionDone","getCustomFieldsDefinitionFail","propertyDefinitions","resetValidation","definition","validationRule","properties","memo","property","push","defaultValue","jasperserverConfig","mandatory","required","errTempl","dialogErrorMessageTemplate","message","errorCode","errorMsg","respText","parseProperties","element","customFieldsToJSON","field","isPassword","BaseDataSourceView","customFieldsTemplate","renderCustomFieldsSection","JDBC","AWS","AZURE_SQL","JNDI","VIRTUAL","CUSTOM","BEAN","MONGODB","MONGODBJDBC","item","JdbcDriverModel","idAttribute","defaultValues","jdbcDriverClass","label","available","isDefault","jdbcUrl","uploaded","mergedOptions","settingsUtility","dataSourcePatterns","DYNAMIC_URL_PART_PATTERN","dynamicUrlPartPattern","DYNAMIC_Address_PATTERN","dynamicServerAddressPattern","OAUTH_SERVICE_EMAIL_PATTERN","dynamicServiceAcctEmailPattern","OAUTH_PVTKEY_PATH_PATTERN","dynamicPvtKeyPathPattern","ACCESS_KEY","dynamicAccessKey","ARN","dynamicARN","AWS_Region","dynamicAwsRegion","S3OUTPUT_LOCATION","dynamicS3OutputLocation","SECRET_KEY","dynamicSecretKey","ROLE","dynamicRole","VIRTUAL_WAREHOUSE","dynamicWarehouse","SNOWFLAKE_DB","dynamicSnowflakeDB","VALIDATION_PATTERNS","obj","propName","XRegExp","isOtherDriver","OTHER_DRIVER","isUploadedDriver","getCustomAttributes","groups","_getRegExpFieldGroupsFromConnectionUrlTemplate","fields","group","convertUrlTemplateToRegex","placeholderPattern","patternTemplate","replace","patternTemplateMap","serverAddress","patternTemplateRegex","oAuthServiceAcctEmail","oAuthPvtKeyPath","accessKey","secretKey","arn","awsRegion","s3OutputLocation","role","warehouse","snowflakeDB","patternName","RegExp","converter","groupSet","FIELD_TEMPLATE_REGEXP","exec","models","driverUploadEnabled","getDefaultDriver","defaultDriver","driver","getDriverByClass","className","findWhere","getDriverByName","getAllPossibleCustomAttributes","fetch","Accept","_links","create","edit","jdbcDrivers","markDriverAsAvailable","driverId","driverModel","id","forbidWhitespacesPattern","BASE_VALIDATION_OBJECT","connectionUrl","fn","state","drivers","selectedDriverClass","test","JDBC_BUNDLE_PREFIX","otherDriverIsPresent","driverClass","username","password","timezone","JdbcDriverCollection","fetchDrivers","then","setCustomAttributesDefaultValues","getCustomAttributeValuesFromConnectionUrl","extendValidation","customAttributesChangeEventString","join","on","setConnectionUrlFromCustomAttributes","setCustomAttributesFromConnectionUrl","changeSelectedDriver","reset","driversModels","index","finalModelsSet","concat","add","getCurrentDriver","trigger","customAttributesHash","currentDriver","driverCustomAttributes","currentCustomAttributeValues","pick","replaceConnectionUrlTemplatePlaceholdersWithValues","getAttributeValueFromUrl","regExp","slice","call","foundParts","addMissingProperties","jdbcFields","fieldsWithValues","i","unsetCustomAttributes","unset","urlTemplate","valuesMap","getRegExpFieldGroupsFromConnectionUrlTemplate","extendedValidationObject","customDriverFields","xRegExpPattern","isModal","TITLE","PRIMARY_BUTTON_LABEL","SECONDARY_BUTTON_LABEL","el","primaryButtonLabel","secondaryButtonLabel","hide","primaryButtonOnClick","Error","secondaryButtonOnClick","parseResponse","firstDocChild","firstChild","innerText","ActiveXObject","async","loadXML","nodeName","toLowerCase","parseChildren","nextSibling","node","ob","l","childNodes","nodeValue","AjaxUploader","uploadForm","method","enctype","form","parceXmlDocToObject","submit","FormData","res","preventDefault","request","cache","processData","responseJSON","off","iframe","contentWindow","iframeUpload","template","delay","$elSpinner","$elOverlay","_timer","stopListening","BaseDialog","driverAvailable","fileIndex","_overlay","LoadingOverlay","onFileChange","$validationEl","next","match","selectedFiles","inputs","input","addFileInput","onSuccessCallback","onErrorCallback","AjaxFormSubmitter","detach","JdbcDataSourceModel","deepDefaults","awsSettings","listenTo","updateConnectionUrl","updateCustomAttributes","changeDriver","updateDriverOption","addDriverOption","$option","optionText","changeUploadDriverButtonState","$otherDriverOption","before","manuallySetDriverClass","valueObj","customAttributes","renderDriverCustomAttributeFields","$driverUploadButton","buttonManager","buttonLabel","uploadDriver","driverUploadDialog","initDriverUploadDialog","UploadJdbcDriverDialog","_onDriverUploadFinished","renderJdbcSpecificSection","otherDriverValue","awsRegions","resultingHtml","jdbcCustomFieldTemplate","hint","driverSpecificFields","FieldToTemplateMap","jdbcOptionalFieldTemplate","FieldToTitleMap","FieldToHintMap","fieldType","requiredTitle","Title","Hint","currentDriverName","changed","renderFileLocationSection","insertAfter","browseButton","resourceLocator","selectDialogTemplate","resourceInput","providerId","dialogTitle","selectLeavesOnly","onChange","jndiName","JndiDataSourceModel","renderJndiSpecificSection","AwsDataSourceModel","dbName","dbInstanceIdentifier","dbService","roleArn","region","credentialsType","computedState","isEc2Instance","suppressEc2CredentialsWarnings","EC2","changeCredentialsType","sName","getFullDbTreePath","JdbcDataSourceView","onCredentialsTypeChange","updateInput","recheckDriver","availableDriver","changedAttributes","newValue","ec2CredentialsSelected","showAwsDsTree","refreshAwsDataSourceTree","renderAwsSpecificSection","initDataSourceTree","path","isValid","awsDataSourceTree","showTreePrefetchNodes","disableAwsDefaults","hasSecurityCredentials","isEdit","treeOptions","hideLoader","bShowRoot","treeId","additionalParams","awsAccessKey","awsSecretKey","datasourceUri","dynamicTree","httpErrorHandler","alertDialog","customTitle","AlertDialog","modal","setMessage","open","observe","ev","param","extra","uriComponents","dbUri","split","connectionUrlTemplate","jdbcTemplate","dBName","dbHost","dnsAddress","dbPort","openAndSelectNode","stopObserving","subscriptionId","keyStorePassword","keyStoreUri","serverName","useMicrosoftDriver","microsoftDriverAvailable","sqlServerStandardDriver","updateDriverClass","driverName","driverClassName","AzureSqlDataSourceModel","onModelChange","updateDatabaseTree","showAzureSqlDsTree","renderAzureSqlSpecificSection","azureSqlDataSourceTree","messageCodes","messageCode","jsExceptionsMessages","jdbcDriver","selectedNode","getSelectedNode","readOnly","maxLength","startsWithLetter","containsOnlyWordCharacters","SubDataSourceModel","hasNonReadOnlyItems","some","subDataSources","arrayMinLength","subDataSourceIds","subDataSource","countMap","duplicateIds","SubDataSourceCollection","updateSubDataSourcesArray","dependentResources","forEach","dependenciesPanel","resources","actionsMap","_$title","_titleBackup","_changeMessage","_switchButtons","list","_initList","event","buttonId","closest","action","setItems","stopPropagation","topMessage","bottomMessage","dynamicList","listTemplateDomId","itemTemplateDomId","items","collect","resource","resourceItem","cssClassName","layoutModule","processTemplate","uriElement","getValue","uristring","URIString","xssUtil","buttons","$buttonElements","save","saveAs","ok","cancel","okOnly","canSave","$button","_listItem","tooltipText","updateDataSourceId","setValue","getListItem","setRootElement","setElement","_getElement","subviews","_list","dragPattern","multiSelect","selectOnMousedown","featureDetection","_itemUnselected","_itemSelected","collection","disableSelection","disableSelectionWithoutCursorStyle","enableSelection","getSubviewByListItem","resetSelected","modelsToAdd","modelsToRemove","previousModelUris","selectAfterAdd","currentModelUris","map","previousModels","SubDataSourceItemView","addItems","selectedViews","getSubviewByModel","selectItem","removeSubview","getList","getListLength","_items","getSelectedModels","getSelectedItems","listItem","removeItems","removeSubviews","listItems","hasDependedResources","VirtualDataSourceModel","_subDataSourcesHiddenNodes","showDependentResources","updateAllToLeftButtonState","chooseTreeNodes","nodes","subDataSourcesTree","selectedNodes","nodeUris","_hideAvailableSubDataSources","removeAllSubDataSources","_deselectAllNodes","_unhideAvailableSubDataSources","updateRightButtonState","removeSelectedSubDataSources","selectedModels","selectedSubDataSourcesList","newCollection","removeAttr","$btn","hasMovables","hasUnmovables","isParent","where","updateLeftButtonState","renderVirtualSpecificSection","dependentResourcesDialog","hideNodesFn","SubDataSourcesListView","multiSelectEnabled","uriItem","findLastLoadedNode","child","removeChild","resortChilds","expandTreePath","tree","treePathUri","processNodePath","rootNode","getState","handleNode","select","notLoadedHiddenNodes","hiddenNode","addChild","refreshNode","beanName","beanMethod","BeanDataSourceModel","renderBeanSpecificSection","CustomDataSourceView","renderMongoDbSpecificSection","REPOSITORY","SERVER_FILE_SYSTEM","MongoDbJdbcDataSourceModel","fileTypes","fileSourceType","timeZone","portNumber","repositoryFileName","autoSchemaDefinition","serverFileName","isLocalFileSystemAccessAllowed","adminWorkflows","_embedded","workflow","fileName","mongoJdbcFileSourceTypes","adminWorkflowsLoadingPromise","adjustFileSystemConnectButton","loadAdminWorkflows","dataType","changeFileSourceType","changeAutoSchemaDefinition","focus","validationMethodOnSaveClick","callback","dryRun","errors","fileSourceTypes","fileSourceTypeOptions","renderBlankBody","registeredViews","dataSourceResourceTypes","JndiDataSourceView","AwsDataSourceView","AzureSqlDataSourceView","VirtualDataSourceView","BeanDataSourceView","MongoDbDataSourceView","MongoDbJdbcDataSourceView","DiagnosticCustomDataSourceView","viewType","DialogWithModelInputValidation","theDialogIsOpen","autoUpdateResourceID","saveDialogTemplate","extendModel","saveButtonLabel","_getLabelForSaveButton","preSelectedFolder","skipLocation","minHeight","minWidth","setMinSizeAsSize","resizable","additionalCssClasses","content","isEmbedded","primary","_onSaveDialogSaveButtonClick","_onSaveDialogCancelButtonClick","initializeTree","_onDataSourceNameChange","$contentContainer","change","_onResourceIDInputChange","restoreModel","originalModelValidation","doesNotContainSymbols","description","foldersTree","repositoryTreeFactory","processors","treeBufferSize","types","tooltipOptions","selection","$scrollContainer","_selectTreeNode","startSaveDialog","_openDialog","bindValidation","_closeDialog","unbindValidation","clearValidationErrors","_onDialogResize","otherElementsHeight","treeBox","dialogBody","not","each","outerHeight","height","resourceId","performSave","saveFn","success","_saveSuccessCallback","_saveErrorCallback","handled","substr","columns","dataSourceUri","column","rowId","parseMetadata","dataSourceReference","metadata","queryLanguage","fetchMetadata","BaseSaveDialogView","_onOpenInAdHocDesignerChange","sourceModel","domainName","domainResourceId","doesNotContainCharacters","textId","changeButtonLabel","confirm","standardConfirmTemplate","okButtonSelector","cancelButtonSelector","hasChanges","modelIsValid","SimpleDomainModel","width","_onSaveButtonClick","_onCancelButtonClick","validationFailed","fieldId","parents","startDialog","simpleDomainDialogTemplate","javaTypes","javaTypeMapper","setContent","_center","errorRow","saveDialog","DomainSaveDialogView","SimpleDomainView","registeredDialogs","TextDataSourceSaveDialogView","CreateDomainLink","dataSourceView","historyBackToken","args","Array","initSwipeScroll","history","fetchingCustomDataSourcesDeferred","fetchingTheModelDeferred","customDataSourceCollection","CustomDataSourcesCollection","renderDataSourceContainer","resourceUri","modelToEdit","textStatus","jqXHR","dataSourceViewFactory","dataSourceClientType","productTypeIsEc2","dataSourceTypeOptions","currentCustomDataSourceType","option","display","TouchController","_render","saveParams","onDataSourceTypeChange","selectedType","_prepareSaveDialog","createDomainMode","SaveDialog","saveDialogViewFactory","_onSaveAndCreateDomainDone","_onSaveDone","_onSaveFail","onSaveClick","currentTarget","funcOnceValidationPassed","resourceModel","close","onCancelClick","cancelFn"],"mappings":"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","file":"_chunks/chunk.6871.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport defaultSettings from 'js-sdk/src/common/config/requestSettings';\nimport configs from 'js-sdk/src/jrs.configs';\n\nexport default () => {\n    const locale = configs.userLocale.replace(/_/g, '-');\n    const settings = defaultSettings();\n\n    return {\n        ...settings,\n        headers: {\n            ...settings.headers,\n            'Accept-Language': locale\n        }\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport dialogs from \"../components/components.dialogs\";\nimport {JRS} from \"../namespace/namespace\";\nimport jQuery from 'jquery';\n\nfunction showErrorPopup(errorMessage, options) {\n    if ((errorMessage && errorMessage.indexOf('sessionAttributeMissingException')) > -1) {\n        dialogs.clusterErrorPopup.show(errorMessage);\n    } else {\n        dialogs.errorPopup.show(errorMessage, false, options);\n    }\n}\nfunction baseErrorHandler(ajaxAgent) {\n    //Handling HTTP 500 - Internal server error\n    if (ajaxAgent.status == 500) {\n        showErrorPopup(ajaxAgent.responseText);\n        return true;\n    }\n    var sessionTimeout = ajaxAgent.getResponseHeader('LoginRequested');\n    if (sessionTimeout) {\n        var newloc = '.';\n        document.location = newloc;\n        return true;\n    }\n    var isErrorPage = ajaxAgent.getResponseHeader('JasperServerError');\n    if (isErrorPage) {\n        var suppressError = ajaxAgent.getResponseHeader('SuppressError');\n        if (!suppressError) {\n            // For dashboard frame we should render error message as frame content.\n            var dashboardViewFrame = jQuery('.dashboardViewFrame');\n            if (dashboardViewFrame.length == 1) {\n                jQuery(document.body).html(ajaxAgent.responseText);\n                var iFrame = jQuery('#' + JRS.fid, window.parent.document);\n                iFrame.removeClass('hidden').show();\n            } else {\n                // In other cases we render error message as popup.\n                showErrorPopup(ajaxAgent.responseText);\n            }\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction errorHandler() {}\nfunction showMessageDialog() {}\n\nexport {\n    showErrorPopup,\n    baseErrorHandler,\n    errorHandler,\n    showMessageDialog\n}","\n        import {store, MERGED_BUNDLES_NAME} from 'bundleStore';\n        \n        let bundle;\n        \n        if ('all' !== MERGED_BUNDLES_NAME) {\n            store['all'] = store['all'] || {};\n            bundle = store['all'];\n        } else {\n            bundle = Object.keys(store).reduce((acc, key) => {\n                return {\n                    ...acc,\n                    ...store[key]\n                }\n            }, {});\n        }\n                                     \n        export default bundle;\n    ","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport {ajax, AjaxRequester} from \"../../core/core.ajax\";\nimport dialogs from '../../components/components.dialogs';\n\nexport default ResourceModel.extend({\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, ResourceModel.prototype.defaults, { connectionType: undefined });\n        return defaults;\n    }(),\n    validation: {},\n    initialize: function (attributes, options) {\n        options = _.defaults(options || {}, { contextPath: jrsConfigs.contextPath });\n        this.options = options;\n        if (this.isNew()) {\n            options.parentFolderUri && this.set('parentFolderUri', options.parentFolderUri, { silent: true });\n        }\n        var parentFolderUri = options.parentFolderUri ? options.parentFolderUri : attributes.parentFolderUri;\n        if (attributes.name && parentFolderUri && !attributes.uri && options.isEditMode === true) {\n            // if resource name and parent folder URI is given, but resource URI isn't set,\n            // then let's generate it and set to the model for consistency purpose\n            // but we'll do it only in case of when we are in the editing mode\n            this.set('uri', ResourceModel.constructUri(parentFolderUri, attributes.name), { silent: true });\n        }\n        ResourceModel.prototype.initialize.call(this, attributes, options);\n    },\n    testConnection: function () {\n        this.validate();\n        if (!this._isValid)\n            return;    // launch the loading timer and create a deferred object to encapsulate this timer\n        // launch the loading timer and create a deferred object to encapsulate this timer\n        var dfr = $.Deferred(), loadingDialog = $('#' + ajax.LOADING_ID)[0], loadingDialogOpened = false, responseTimer = window.setTimeout(function () {\n            loadingDialogOpened = true;\n            dialogs.popup.show(loadingDialog, true);\n        }, AjaxRequester.prototype.MAX_WAIT_TIME);\n        var data = this.toJSON();\n        Backbone.ajax({\n            type: 'POST',\n            url: jrsConfigs.contextPath + '/rest_v2/connections',\n            contentType: data.connectionType,\n            headers: { 'Accept': 'application/json' },\n            data: JSON.stringify(data)\n        }).always(function () {\n            // remove that timer and close the dialog if it was open\n            window.clearTimeout(responseTimer);\n            loadingDialogOpened && dialogs.popup.hide(loadingDialog);\n        }).done(dfr.resolve).fail(dfr.reject);\n        return dfr.promise();\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    supportsTouch: function () {\n        return 'ontouchstart' in window || navigator.msMaxTouchPoints;\n    }()\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    redirect: function (url) {\n        window.location.href = url;\n    }\n}","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport redirectToUrl from '../util/redirectToUrlUtil';\nimport {JSCookie} from \"./utils.common\";\n\nexport default {\n    saveCurrent: function (token) {\n        new JSCookie(token, encodeURIComponent(document.location.href));\n    },\n    saveReferrer: function (token) {\n        if (document.referrer.indexOf('login.html') === -1) {\n            new JSCookie(token, encodeURIComponent(document.referrer));\n        }\n    },\n    restore: function (token, defaultUrl) {\n        var currentUrl = encodeURIComponent(document.location.href);\n        var tokenUrl = new JSCookie(token).value;\n        if (tokenUrl && tokenUrl !== currentUrl) {\n            var url = decodeURIComponent(tokenUrl);\n            if (url) {\n                redirectToUrl.redirect(url);\n                return;\n            }\n        }    // in worse scenario, we need to get to the starting point\n        // in worse scenario, we need to get to the starting point\n        defaultUrl = defaultUrl || '/';\n        redirectToUrl.redirect(jrsConfigs.contextPath + defaultUrl);\n    }\n};","\n        import settingsStore from 'settingsStore';\n        settingsStore['userTimeZones'] = settingsStore['userTimeZones'] || {};\n        export default settingsStore['userTimeZones'];\n    ","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport BaseDataSourceModel from '../model/BaseDataSourceModel';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport timezones from '../../settings/userTimeZones.settings';\nimport Backbone from 'backbone';\nimport timezoneTemplate from '../template/timezoneTemplate.htm';\nimport dialogs from '../../components/components.dialogs';\nimport testConnectionTemplate from '../template/testConnectionTemplate.htm';\nimport Validation from 'js-sdk/src/common/extension/backboneValidationExtension';\n\nvar testConnectionInProgress;\nvar testConnectionDetailsMessage;\n\nexport default Backbone.View.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: undefined,\n    PAGE_TITLE_EDIT_MESSAGE_CODE: undefined,\n\n    modelConstructor: BaseDataSourceModel,\n\n    events: {\n        \"keyup input[type='text'], input[type='password'], textarea, select\": \"updateModelProperty\",\n        \"change input[type='text'], input[type='password'], input[type='radio'], input[type='checkbox'], textarea, select\": \"updateModelProperty\",\n        \"click #testDataSource\": \"testConnection\",\n        \"click [name=testConnectionMessageDetails]\" : \"showTestConnectionMessageDetails\"\n    },\n\n    initialize: function(options) {\n        this.options = options;\n        this.isEditMode = options.isEditMode;\n        this.timezones = options.timezones ? options.timezones : timezones;\n\n        var modelAttrs = {};\n        if (options.dataSource) {\n            modelAttrs = _.extend(modelAttrs, options.dataSource);\n        }\n        this.model = new this.modelConstructor(modelAttrs, options);\n\n        Validation.bind(this, {\n            valid: this.fieldIsValid,\n            invalid: this.fieldIsInvalid,\n            forceUpdate: true,\n            selector: \"name\"\n        });\n        if (this.model.initialization) {\n            var self = this;\n            this.model.initialization.done(function() {\n                self.render.apply(self);\n            });\n        } else {\n            this.render();\n        }\n        this.setPageTitle();\n    },\n\n    testConnection: function() {\n        if (testConnectionInProgress === true) return;\n\n        var rc = this.model.testConnection(), self = this, msg, button;\n        if (!rc) return;\n\n        // set flag variable\n        testConnectionInProgress = true;\n\n        // disable the \"Test Connection\" button\n        button = self.$el.find(\"#testDataSource\");\n        button.addClass(\"disabled\");\n\n        // clear the test connection message near the button\n        msg = this.$el.find(\"[name=testConnectionMessage]\");\n\n        // next goes magic !\n        msg.removeClass(\"warning success\").addClass(\"hidden\");\n        msg.parent().addClass(\"error\"); // special class name goes to parent\n        msg.find(\"a\").addClass(\"hidden\"); // this hides the \"Show Details\" link\n\n        rc.done(function() {\n\n            msg.addClass(\"success\").find(\"span\").text(i18n[\"resource.dataSource.connectionState.passed\"]);\n\n        }).fail(function(xhr) {\n\n            // now, compose the message\n            var errMsg = self.getTestConnectionErrorMessage(xhr);\n\n            // and display it !\n            msg.addClass(\"warning\").find(\"span\").text(errMsg.text);\n            if (errMsg.details) {\n                msg.find(\"a\").removeClass(\"hidden\");\n                testConnectionDetailsMessage = errMsg.details;\n            }\n\n        }).always(function() {\n\n            testConnectionInProgress = false;\n            msg.removeClass(\"hidden\"); // this line actually shows the test connection message\n            button.removeClass(\"disabled\");\n\n        });\n    },\n\n    showTestConnectionMessageDetails: function() {\n        dialogs.errorPopup.show(testConnectionDetailsMessage);\n    },\n\n    getTestConnectionErrorMessage: function(xhr) {\n\n        //parse the response\n        var response = false, text = i18n[\"resource.dataSource.connectionState.failed\"], details = false;\n        try { response = JSON.parse(xhr.responseText) } catch(e){\n            // in this case show at least what was sent ot us\n            details = xhr.responseText;\n        }\n\n        if (response) {\n            if(response.parameters && response.parameters[2]){\n                // if 3rd parameter exist, then it's an exception message and should be shown as connection error text\n                text = response.parameters[2];\n            }\n            if(response.parameters && response.parameters[3]){\n                // if 4th parameter exist, then it's an exception stack trace, which should be shown as error details\n                details = response.parameters[3];\n            }\n        }\n\n        return {\n            text: text,\n            details: details\n        };\n    },\n\n    updateModelProperty: function(e) {\n        var $targetEl = $(e.target),\n            update = {},\n            attr = $targetEl.attr(\"name\"),\n            value = \"checkbox\" === $targetEl.attr(\"type\") ? $targetEl.is(':checked') : $.trim($targetEl.val());\n\n        update[attr] = value;\n\n        this.model.set(update);\n\n        if (!this.isEditMode) {\n            if (attr === \"name\") {\n                var generatedId = ResourceModel.generateResourceName(this.model.get(\"label\"));\n                if (value !== generatedId) {\n                    this._idUpdatedManually = true;\n                }\n            } else if (attr === \"label\" && !this._idUpdatedManually) {\n                var newId = ResourceModel.generateResourceName(value);\n                this.model.set(\"name\", newId);\n                this.$(\"input[name='name']\").val(newId);\n            }\n        }\n\n        this.model.validate(update);\n    },\n\n    render: function() {\n        this.$el.empty();\n        return this;\n    },\n\n    renderTimezoneSection: function() {\n        this.$el.append(_.template(timezoneTemplate, this.templateData()));\n    },\n\n    renderTestConnectionSection: function() {\n        this.$el.append(_.template(testConnectionTemplate, this.templateData()));\n    },\n\n    renderOrAddAnyBlock: function(container, html) {\n\n        if (_.isString(html)) {\n            try{\n                html = $(html);\n            } catch(e){\n                html = false;\n            }\n            if (!html) {\n                return false;\n            }\n        }\n\n        // check if html has already been rendered in the container\n        // (it's possible because each html fragment is covered with \"fieldset\" tag\n        var fragmentName = html.first().attr(\"name\");\n        if (!fragmentName) {\n            return false;\n        }\n\n        if (container.find(\"[name=\" + fragmentName + \"]\").length > 0) {\n            // the render has happened already, so we need to clean the container\n            // and put dom fragment inside it\n            container.find(\"[name=\" + fragmentName + \"]\").empty().append(html.children());\n        } else {\n            // the render happens first time, there is no any custom field elements and there is no custom\n            // container, so we can simply put it there\n            container.append(html);\n        }\n        return true;\n    },\n\n    templateData: function() {\n        return {\n            _: _,\n            i18n: i18n,\n            modelAttributes: _.clone(this.model.attributes),\n            timezones: this.timezones,\n            isEditMode: this.isEditMode\n        }\n    },\n\n    setPageTitle: function() {\n        var title, $pageTitleEl = $(\"#display .showingToolBar > .content > .header > .title\");\n\n        if (this.isEditMode) {\n            title = i18n[this.PAGE_TITLE_EDIT_MESSAGE_CODE] + \": \" + this.model.get(\"label\");\n        } else {\n            title = i18n[this.PAGE_TITLE_NEW_MESSAGE_CODE];\n        }\n\n        $pageTitleEl.text(title);\n    },\n\n    fieldIsValid: function(view, attr, selector) {\n        var $parentEl = view.$('[' + selector + '=\"' + attr + '\"]').parent();\n        $parentEl.removeClass(\"error\");\n        $parentEl.find(\".message.warning\").text(\"\");\n    },\n\n    fieldIsInvalid: function(view, attr, error, selector) {\n        if (error === true) {\n            // don't show anything since this type of error is used when you need to\n            // mark model as invalid and at the same time don't show any error message\n            return;\n        }\n        var $parentEl = view.$('[' + selector + '=\"' + attr + '\"]').parent();\n        $parentEl.addClass(\"error\");\n        $parentEl.find(\".message.warning\").text(error);\n    },\n\n    // simpler version of 'validField' which works always on the same\n    // context ('view' parameter is absent), and selector does not build from two parameters\n    validField: function(selector) {\n        var $parentEl = this.$(selector).parent();\n        $parentEl.removeClass(\"error\");\n        $parentEl.find(\".message.warning\").text(\"\");\n    },\n\n    // simpler version of 'fieldIsInvalid' which works always on the same\n    // context ('view' parameter is absent), and selector does not build from two parameters\n    // also, the order of parameters has changed\n    invalidField: function(selector, error) {\n        var $parentEl = this.$(selector).parent();\n        $parentEl.addClass(\"error\");\n        $parentEl.find(\".message.warning\").text(error.toString());\n    },\n\n    remove: function() {\n        // remove all resource locator DOM elements\n        // 1 and 2 are the beginning of timestamp\n        $(\"div[id^='selectFromRepository1'], div[id^='selectFromRepository2']\").remove();\n        Validation.unbind(this);\n        Backbone.View.prototype.remove.call(this);\n        return this;\n    }\n});\n","export default \"<fieldset class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <label title=\\\"{{- i18n['resource.analysisConnection.timeZone'] }}\\\" class=\\\"control select\\\">\\n        <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.timezone\\\"] }}</span>\\n        <select class=\\\"fnormal timeZone\\\" name=\\\"timezone\\\">\\n            <option {{ if (modelAttributes.timezone === \\\"\\\") { }}selected=\\\"selected\\\"{{ } }} value=\\\"\\\">{{- i18n[\\\"jsp.jdbcPropsForm.timezone.default.option\\\"] }}</option>\\n            {{ _.each(timezones, function(timezone) { }}\\n            <option value=\\\"{{- timezone.code }}\\\" {{ if (timezone.code === modelAttributes.timezone) { }}selected=\\\"selected\\\"{{ } }}>\\n                {{- i18n['timezone.option'].replace('{0}', timezone.code).replace('{1}', timezone.description) }}\\n            </option>\\n            {{ }); }}\\n        </select>\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n[\\\"resource.dataSource.hint3\\\"] }}</span>\\n    </label>\\n</fieldset>\";","export default \"<fieldset class=\\\"group\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n    <span id=\\\"testDataSource\\\" class=\\\"button action up\\\"><span class=\\\"wrap\\\">{{- i18n['button.testConnection']}}</span></span>\\n    <div class=\\\"message warning\\\" name=\\\"testConnectionMessage\\\">\\n        <span></span>\\n        <a class=\\\"details\\\" name=\\\"testConnectionMessageDetails\\\" href=\\\"#\\\">{{- i18n['button.details']}}</a>\\n    </div>\\n\\n</fieldset>\\n\\n<br/>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    AWS: 'application/repository.awsDataSource+json',\n    AZURE_SQL: 'application/repository.azureSqlDataSource+json',\n    BEAN: 'application/repository.beanDataSource+json',\n    JDBC: 'application/repository.jdbcDataSource+json',\n    JNDI: 'application/repository.jndiJdbcDataSource+json',\n    VIRTUAL: 'application/repository.virtualDataSource+json',\n    MONGODB: 'application/connections.mongodb+json',\n    HIVE: 'application/connections.hive+json',\n    TEXT_FILE: 'application/connections.txtFile+json',\n    XLS_FILE: 'application/connections.xlsFile+json',\n    CUSTOM: 'application/repository.customDataSource+json'\n};","\n        import {store, MERGED_BUNDLES_NAME} from 'bundleStore';\n        \n        let bundle;\n        \n        if ('jasperserver_config' !== MERGED_BUNDLES_NAME) {\n            store['jasperserver_config'] = store['jasperserver_config'] || {};\n            bundle = store['jasperserver_config'];\n        } else {\n            bundle = Object.keys(store).reduce((acc, key) => {\n                return {\n                    ...acc,\n                    ...store[key]\n                }\n            }, {});\n        }\n                                     \n        export default bundle;\n    ","export default \"{{- message }}\\n\\n{{\\nvar errorLbl = (typeof errorLabel !== 'undefined' ? errorLabel : 'The reason is');\\n}}\\n\\n{{ if (typeof message2 !== 'undefined') { }}\\n<br/>{{- errorLbl }}: {{- message2 }}\\n{{ } else if (errorCode) { }}\\n<br/>{{- errorLbl }}: {{- errorCode }}\\n{{ } else if (errorMsg) { }}\\n<br/>{{- errorLbl }}: {{- errorMsg }}\\n{{ } }}\\n\\n{{ var respTextLbl = (typeof respTextLabel  !== 'undefined' ? respTextLabel : 'The full response from the server is') }}\\n<br/><br/>{{- respTextLbl }}: {{- respText }}\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport requestSettings from '../../config/requestSettings';\nimport connectionTypes from '../enum/connectionTypes';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport dialogs from '../../components/components.dialogs';\nimport i18n from '../../i18n/all.properties';\nimport jasperserverConfig from '../../i18n/jasperserver_config.properties';\nimport dialogErrorMessageTemplate from 'js-sdk/src/common/templates/dialogErrorPopupTemplate.htm';\n\nvar CustomDataSourceModel = BaseDataSourceModel.extend({\n    type: repositoryResourceTypes.CUSTOM_DATA_SOURCE,\n    constructor: function (attributes, options) {\n        this.defaults = _.extend({}, this.defaults, {\n            dataSourceName: options.dataSourceType,\n            connectionType: connectionTypes.CUSTOM\n        });\n        BaseDataSourceModel.prototype.constructor.apply(this, arguments);\n    },\n    initialize: function (attributes, options) {\n        var result = BaseDataSourceModel.prototype.initialize.apply(this, arguments);    // define attributes which specific for custom model (we will fetch their values from the server)\n        // define attributes which specific for custom model (we will fetch their values from the server)\n        this.customFields = [];\n        this.testable = false;\n        this.queryTypes = null;\n        this.initialization = $.Deferred();\n        this.getCustomFieldsDefinition();\n        return result;\n    },\n    getCustomFieldsDefinition: function () {\n        var headers = {}, dfr;\n        _.extend(headers, requestSettings(), { 'Accept': 'application/json' });\n        dfr = $.ajax({\n            type: 'GET',\n            headers: headers,\n            url: jrsConfigs.contextPath + '/rest_v2/customDataSources/' + this.get('dataSourceName')\n        }).done(_.bind(this.getCustomFieldsDefinitionDone, this)).fail(_.bind(this.getCustomFieldsDefinitionFail, this));\n        return dfr;\n    },\n    getCustomFieldsDefinitionDone: function (response) {\n        var self = this;\n        if (response && response.propertyDefinitions && _.isArray(response.propertyDefinitions)) {\n            this.resetValidation();    // reset validation to initial state\n            // reset validation to initial state\n            this.testable = !!response.testable;\n            this.queryTypes = response.queryTypes ? response.queryTypes : null;\n            _.each(response.propertyDefinitions, function (definition) {\n                var validationRule = {};\n                if (definition.properties) {\n                    definition.properties = _(definition.properties).reduce(function (memo, property) {\n                        memo[property.key] = property.value;\n                        return memo;\n                    }, {});\n                }\n                self.customFields.push(definition);\n                self.defaults[definition.name] = definition.defaultValue;\n                if (!self.options.isEditMode) {\n                    self.set(definition.name, definition.defaultValue);\n                }\n                if (definition.name === 'password' && self.options.isEditMode && !self.isNew()) {\n                    self.set('password', jasperserverConfig['input.password.substitution']);\n                }    // now, extend the validation object with required fields\n                // now, extend the validation object with required fields\n                if (definition.properties && definition.properties.mandatory) {\n                    validationRule[definition.name] = {\n                        required: true,\n                        msg: i18n[self.get('dataSourceName') + '.' + definition.name + '.required'] || i18n['required.field.specify.value']\n                    };\n                    _.extend(self.validation, validationRule);\n                }\n            });\n        }\n        if (!this.options.isEditMode) {\n            this.set(this.parse(this.attributes), { silent: true });\n        }\n        this.initialization.resolve();\n    },\n    getCustomFieldsDefinitionFail: function (xhr) {\n        var response = false;\n        try {\n            response = JSON.parse(xhr.responseText);\n        } catch (e) {\n        }\n        var errTempl = _.template(dialogErrorMessageTemplate, {\n            message: 'Failed to load custom data source definition. ',\n            errorCode: response && response[0] ? response[0].errorCode : null,\n            errorMsg: response && response.message,\n            respText: xhr.responseText\n        });\n        dialogs.errorPopup.show(errTempl);\n    },\n    parse: function (response) {\n        var result = BaseDataSourceModel.prototype.parse.apply(this, arguments);\n        result = _.extend(result, this.parseProperties(response.properties));\n        delete response.properties;\n        return result;\n    },\n    parseProperties: function (properties) {\n        var result = {};\n        if (!_.isEmpty(properties)) {\n            _.each(properties, function (element) {\n                result[element.key] = 'password' === element.key ? jasperserverConfig['input.password.substitution'] : element.value;\n            });\n        }\n        return result;\n    },\n    toJSON: function () {\n        var result = BaseDataSourceModel.prototype.toJSON.apply(this, arguments);\n        return this.customFieldsToJSON(result, this.customFields);\n    },\n    customFieldsToJSON: function (data, customFields) {\n        if (!_.isEmpty(customFields)) {\n            data.properties = [];\n            _.each(customFields, function (field) {\n                var value = data[field.name], isPassword = 'password' === field.name;\n                if (!_.isUndefined(value)) {\n                    if (!isPassword || isPassword && value !== jasperserverConfig['input.password.substitution']) {\n                        data.properties.push({\n                            key: field.name,\n                            value: value\n                        });\n                        delete data[field.name];\n                    }\n                }\n            });\n        }\n        return data;\n    },\n    resetValidation: function () {\n        this.validation = _.clone(CustomDataSourceModel.prototype.validation);\n    }\n});\nexport default CustomDataSourceModel;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../../i18n/all.properties';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport customDataSourceTemplate from '../template/customDataSourceTemplate.htm';\nimport CustomDataSourceModel from '../model/CustomDataSourceModel';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.custom.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.custom.page.title.edit',\n    modelConstructor: CustomDataSourceModel,\n    // to be defined in specific view if you want to re-define it\n    customFieldsTemplate: customDataSourceTemplate,\n    // to be defined in specific view if you want to re-define it\n    render: function () {\n        this.$el.empty();\n        this.renderCustomFieldsSection();\n        if (this.model.testable) {\n            this.renderTestConnectionSection();\n        }\n        return this;\n    },\n    templateData: function () {\n        return _.extend({}, BaseDataSourceView.prototype.templateData.apply(this, arguments), {\n            i18n: i18n,\n            // this redefines the basic 'jasperserver_messages' bundle with 'all' bundle\n            customFields: this.model.customFields\n        });\n    },\n    renderCustomFieldsSection: function () {\n        var html = _.template(this.customFieldsTemplate, this.templateData()), container = this.$el.find('[name=customFieldsContainer]');\n        if (container.length > 0) {\n            // the render has happened already, so we need to clean the container\n            // and put custom field elements inside it\n            container.empty().append($(html).children());\n        } else {\n            // the render happens first time, there is no any custom field elements and there is no custom\n            // container, so we can simply put it there\n            this.$el.append(html);\n        }\n    }\n}, {});","export default \"<fieldset name=\\\"customFieldsContainer\\\" class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n\\t<legend class=\\\"offLeft\\\"><span>{{- i18n['resource.dataSource.accessProp']}}</span></legend>\\n\\n\\t{{\\n\\n\\tvar buildAttrs = function(attrs) {\\n\\t\\treturn _.map(attrs, function(v, k){\\n\\t\\t\\tv = v.toString().replace(/\\\"/g, \\\"\\\\&quot\\\\;\\\");\\n\\t\\t\\treturn k + '=\\\"' + _.xssHardEscape(v) + '\\\"';\\n\\t\\t}).join(\\\" \\\");\\n\\t};\\n\\n\\t_.each(customFields, function(field){\\n\\n\\t\\tvar\\n\\t\\t\\tattrs = {},\\n\\t\\t\\tlabel = i18n[field.label] || field.label;\\n\\n\\t\\tif (field.mandatory) {\\n\\t\\t\\tlabel = label + \\\" (\\\" + i18n[\\\"required.field\\\"] + \\\")\\\";\\n\\t\\t}\\n\\t}}\\n\\n\\t\\t<label title=\\\"{{- label }}\\\" class=\\\"control input text\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- label }}:</span>\\n\\t\\t\\t{{\\n\\n\\t\\t\\t\\tvar properties = field.properties || {};\\n                var value = modelAttributes[field.name] ? modelAttributes[field.name] : \\\"\\\";\\n                if(\\\"password\\\" === field.name && value !== \\\"\\\"){\\n                    value = i18n['input.password.substitution']\\n                }\\n\\n\\t\\t\\t\\tif (properties.type === \\\"boolean\\\") {\\n\\t\\t\\t\\t\\tattrs.name = field.name;\\n\\t\\t\\t\\t\\tattrs.type = \\\"checkbox\\\";\\n\\t\\t\\t\\t\\tif (value == 'on' || value == 'true') {\\n\\t\\t\\t\\t\\t\\tattrs.checked = \\\"true\\\";\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t<input {{ print(buildAttrs(attrs)) }} />\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t} else if (properties.displayHeight != null) {\\n\\t\\t\\t\\t\\tattrs.name = field.name;\\n\\t\\t\\t\\t\\tattrs.rows = properties.displayHeight;\\n\\t\\t\\t\\t\\tattrs.cols = properties.displayWidth != null ? properties.displayWidth : 40;\\n\\t\\t\\t\\t\\tattrs[\\\"class\\\"] = \\\"fnormal\\\";\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t<textarea {{ print(buildAttrs(attrs)) }} >{{- value }}</textarea>\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tattrs.name = field.name;\\n\\t\\t\\t\\t\\tattrs.type = field.name === \\\"password\\\" ? \\\"password\\\" : \\\"text\\\";\\n\\t\\t\\t\\t\\tattrs.size = properties.displayWidth != null ? properties.displayWidth : 40;\\n\\t\\t\\t\\t\\tattrs[\\\"class\\\"] = \\\"fnormal\\\";\\n\\t\\t\\t\\t\\tattrs.value = value;\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t<input {{ print(buildAttrs(attrs)) }} />\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t} }}\\n\\n\\t\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t</label>\\n\\n\\t{{ }); }}\\n\\n</fieldset>\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    JDBC: 'jdbcDataSource',\n    AWS: 'awsDataSource',\n    AZURE_SQL: 'azureSqlDataSource',\n    JNDI: 'jndiJdbcDataSource',\n    VIRTUAL: 'virtualDataSource',\n    CUSTOM: 'customDataSource',\n    BEAN: 'beanDataSource',\n    MONGODB: 'MongoDbDataSource',\n    MONGODBJDBC: 'mongoDbJDBCDataSource'\n};","\n        import settingsStore from 'settingsStore';\n        settingsStore['dataSourcePatterns'] = settingsStore['dataSourcePatterns'] || {};\n        export default settingsStore['dataSourcePatterns'];\n    ","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nexport default {\n    deepDefaults: function (options, defaults) {\n        return _.reduce(defaults, function (memo, item, key) {\n            memo[key] = options[key] ? _.defaults(options[key], item) : item;\n            return memo;\n        }, {});\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport XRegExp from 'xregexp';\nimport dataSourcePatterns from '../../settings/dataSourcePatterns.settings';\nimport settingsUtility from '../util/settingsUtility';\n\nvar JdbcDriverModel = Backbone.Model.extend({\n    idAttribute: 'jdbcDriverClass',\n    defaults: {\n        defaultValues: {},\n        jdbcDriverClass: '',\n        label: '',\n        available: false,\n        isDefault: false,\n        jdbcUrl: '',\n        uploaded: false\n    },\n    initialize: function (attributes, options) {\n        var mergedOptions = settingsUtility.deepDefaults(options, { dataSourcePatterns: dataSourcePatterns });\n        JdbcDriverModel.DYNAMIC_URL_PART_PATTERN = mergedOptions.dataSourcePatterns.dynamicUrlPartPattern;\n        JdbcDriverModel.DYNAMIC_Address_PATTERN = mergedOptions.dataSourcePatterns.dynamicServerAddressPattern;\n        JdbcDriverModel.OAUTH_SERVICE_EMAIL_PATTERN = mergedOptions.dataSourcePatterns.dynamicServiceAcctEmailPattern;\n        JdbcDriverModel.OAUTH_PVTKEY_PATH_PATTERN = mergedOptions.dataSourcePatterns.dynamicPvtKeyPathPattern;\n        JdbcDriverModel.ACCESS_KEY = mergedOptions.dataSourcePatterns.dynamicAccessKey;\n        JdbcDriverModel.ARN = mergedOptions.dataSourcePatterns.dynamicARN;\n        JdbcDriverModel.AWS_Region = mergedOptions.dataSourcePatterns.dynamicAwsRegion;\n        JdbcDriverModel.S3OUTPUT_LOCATION = mergedOptions.dataSourcePatterns.dynamicS3OutputLocation;\n        JdbcDriverModel.SECRET_KEY = mergedOptions.dataSourcePatterns.dynamicSecretKey;\n        JdbcDriverModel.ROLE = mergedOptions.dataSourcePatterns.dynamicRole;\n        JdbcDriverModel.VIRTUAL_WAREHOUSE = mergedOptions.dataSourcePatterns.dynamicWarehouse;\n        JdbcDriverModel.SNOWFLAKE_DB = mergedOptions.dataSourcePatterns.dynamicSnowflakeDB;\n        JdbcDriverModel.VALIDATION_PATTERNS = _.reduce(mergedOptions.dataSourcePatterns, function (obj, value, propName) {\n            obj[propName] = XRegExp(value);\n            return obj;\n        }, {});\n    },\n    isOtherDriver: function () {\n        return this.get('jdbcDriverClass') === JdbcDriverModel.OTHER_DRIVER;\n    },\n    isUploadedDriver: function () {\n        return this.get('uploaded') === true;\n    },\n    getCustomAttributes: function () {\n        if (this.isOtherDriver()) {\n            return [];\n        }\n        var groups = this._getRegExpFieldGroupsFromConnectionUrlTemplate(), fields = [];\n        _.each(groups, function (group) {\n            return fields.push(group[1]);\n        });\n        return fields;\n    },\n    // Convert url template to regexp template\n    convertUrlTemplateToRegex: function () {\n        var placeholderPattern, patternTemplate = this.get('jdbcUrl');    // escaping ? otherwise regexp will not match to url \"jdbc:sybase:Tds:localhost:5433?ServiceName=name\"\n        // escaping ? otherwise regexp will not match to url \"jdbc:sybase:Tds:localhost:5433?ServiceName=name\"\n        patternTemplate = patternTemplate.replace(/\\?/g, '\\\\?');\n        patternTemplate = patternTemplate.replace(/\\[TMPDIR\\/\\]/g, '\\\\[TMPDIR/\\\\]');    // replacing dynamic parts\n        const patternTemplateMap = {\n            serverAddress: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.DYNAMIC_Address_PATTERN),\n            oAuthServiceAcctEmail: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.OAUTH_SERVICE_EMAIL_PATTERN),\n            oAuthPvtKeyPath: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.OAUTH_PVTKEY_PATH_PATTERN),\n            accessKey: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.ACCESS_KEY),\n            secretKey: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.SECRET_KEY),\n            arn: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.ARN),\n            awsRegion: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.AWS_Region),\n            s3OutputLocation: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.S3OUTPUT_LOCATION),\n            role: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.ROLE),\n            warehouse: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.VIRTUAL_WAREHOUSE),\n            snowflakeDB: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.SNOWFLAKE_DB)\n        };\n        // replacing dynamic parts\n        for (var patternName in JdbcDriverModel.VALIDATION_PATTERNS) {\n            placeholderPattern = new RegExp('\\\\$\\\\[' + patternName + '\\\\]', 'g');\n            const converter = patternTemplateMap[patternName]\n            patternTemplate = converter ? converter(patternTemplate) : patternTemplate.replace(placeholderPattern, JdbcDriverModel.DYNAMIC_URL_PART_PATTERN);\n        }\n        return '^' + patternTemplate;\n    },\n    parse: function (response) {\n        response.isDefault = response.isDefault ? true : false;\n        if (response.defaultValues) {\n            response.defaultValues = _.reduce(response.defaultValues, function (memo, element) {\n                memo[element.key] = element.value;\n                return memo;\n            }, {});\n        }\n        return response;\n    },\n    // Evaluate regexp on urlTemplate and return all found groups.\n    _getRegExpFieldGroupsFromConnectionUrlTemplate: function () {\n        var groups = [], group;\n        var groupSet = [];\n        while (!_.isNull(group = JdbcDriverModel.FIELD_TEMPLATE_REGEXP.exec(this.get('jdbcUrl')))) {\n            if (_.isArray(group) && group.length === 2) {\n                if (groupSet.indexOf(group[0]) === -1) {\n                    groups.push(group);\n                    groupSet.push(group[0]);\n                }\n            }\n        }\n        return groups;\n    }\n}, {\n    FIELD_TEMPLATE_REGEXP: /\\$\\[([^\\]]+)\\]/g,\n    OTHER_DRIVER: 'other'\n});\nexport default JdbcDriverModel;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport JdbcDriverModel from '../model/JdbcDriverModel';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\n\nexport default Backbone.Collection.extend({\n    model: JdbcDriverModel,\n    url: jrsConfigs.contextPath + '/rest_v2/jdbcDrivers',\n    initialize: function (models, options) {\n        this.options = options;\n        this.driverUploadEnabled = false;\n    },\n    getDefaultDriver: function () {\n        var defaultDriver = this.find(function (driver) {\n            return !_.isUndefined(driver.get('isDefault')) && driver.get('isDefault') !== false;\n        });\n        return defaultDriver ? defaultDriver : this.first();\n    },\n    set: function (models, options) {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        _.extend(options, this.options);\n        return Backbone.Collection.prototype.set.call(this, models, options);\n    },\n    getDriverByClass: function (className) {\n        var driver = this.findWhere({ jdbcDriverClass: className });\n        return driver ? driver : this.findWhere({ jdbcDriverClass: JdbcDriverModel.OTHER_DRIVER });\n    },\n    getDriverByName: function (name) {\n        return this.findWhere({ name: name });\n    },\n    getAllPossibleCustomAttributes: function () {\n        return _.keys(JdbcDriverModel.VALIDATION_PATTERNS);\n    },\n    fetch: function (options) {\n        _.defaults(options || (options = {}), { headers: { Accept: 'application/hal+json' } });\n        return Backbone.Collection.prototype.fetch.call(this, options);\n    },\n    parse: function (response) {\n        var result = Backbone.Collection.prototype.parse.apply(this, arguments);\n        if (result._links && result._links.create && result._links.edit) {\n            this.driverUploadEnabled = true;\n        }\n        return result.jdbcDrivers ? result.jdbcDrivers : result;\n    },\n    markDriverAsAvailable: function (driverId) {\n        var model = this.models.find(function (driverModel) {\n            return driverModel.id === driverId;\n        });\n        model.set('available', true);\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport XRegExp from 'xregexp';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport JdbcDriverModel from './JdbcDriverModel';\nimport JdbcDriverCollection from '../collection/JdbcDriverCollection';\nimport dataSourcePatterns from '../../settings/dataSourcePatterns.settings';\nimport connectionTypes from '../enum/connectionTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport jasperserverConfig from '../../i18n/jasperserver_config.properties';\n\nvar forbidWhitespacesPattern = XRegExp(dataSourcePatterns.forbidWhitespacesPattern);\nvar oAuthServicePrivateKeyPattern=XRegExp(dataSourcePatterns.oAuthPvtKeyPath);\nvar BASE_VALIDATION_OBJECT = function () {\n    var validation = {};\n    _.extend(validation, BaseDataSourceModel.prototype.validation, {\n        connectionUrl: [\n            {\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.connectionUrl']\n            },\n            {\n                fn: function (value, attr, state) {\n                    var allowSpaces = this.drivers.getDriverByClass(state.selectedDriverClass).get('allowSpacesInDbName');\n                    if (!allowSpaces && !forbidWhitespacesPattern.test(value)) {\n                        return i18n['ReportDataSourceValidator.error.invalid.chars.reportDataSource.connectionUrl'];\n                    }\n                }\n            }\n        ]\n    });\n    return validation;\n}();\nexport default BaseDataSourceModel.extend({\n    JDBC_BUNDLE_PREFIX: 'resource.dataSource.jdbc.',\n    otherDriverIsPresent: true,\n    type: repositoryResourceTypes.JDBC_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, BaseDataSourceModel.prototype.defaults, {\n            driverClass: '',\n            // this is the value of the selected driver class. Keep in mind, what \"other\" driver has (and should have) empty driver class name (i.e. \"\")\n            selectedDriverClass: '',\n            // this is the pointer to the \"selected\" element in the <select> html tag on the page\n            username: '',\n            password: '',\n            timezone: '',\n            connectionUrl: '',\n            isOtherDriver: false,\n            connectionType: connectionTypes.JDBC\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        return _.extend({}, BASE_VALIDATION_OBJECT);\n    }(),\n    initialize: function (attributes, options) {\n        BaseDataSourceModel.prototype.initialize.apply(this, arguments);\n        this.initialization = $.Deferred();\n        this.drivers = new JdbcDriverCollection([], this.options);\n        var self = this;\n        this.fetchDrivers().then(function () {\n            if (self.isNew()) {\n                self.setCustomAttributesDefaultValues(self.drivers.getDefaultDriver());\n            } else {\n                self.set('selectedDriverClass', self.get('driverClass'));\n                self.set(self.getCustomAttributeValuesFromConnectionUrl());    // use password substitution\n                // use password substitution\n                self.set('password', jasperserverConfig['input.password.substitution']);\n                self.extendValidation();\n            }\n            var customAttributesChangeEventString = _.map(self.drivers.getAllPossibleCustomAttributes(), function (attr) {\n                return 'change:' + attr;\n            }).join(' ');\n            self.on(customAttributesChangeEventString, self.setConnectionUrlFromCustomAttributes);\n            self.on('change:connectionUrl', self.setCustomAttributesFromConnectionUrl);\n            self.on('change:selectedDriverClass', self.changeSelectedDriver);\n            self.initialization.resolve();\n        });\n    },\n    fetchDrivers: function () {\n        var self = this;\n        return this.drivers.fetch({ reset: true }).done(function () {\n            // set default driver\n            // implementing issue JRS-9120: sorting of Driver List:\n            // let's group drivers by their \"installed\" state and then sort them by alphabet\n            var driversModels = _.groupBy(self.drivers.models, function (model) {\n                return model.attributes.available;\n            });    // from now the 'driversModels' is grouped like this:\n            //      {true: Array[16], false: Array[4]}\n            // Let's sort these two groups\n            // from now the 'driversModels' is grouped like this:\n            //      {true: Array[16], false: Array[4]}\n            // Let's sort these two groups\n            _.each(driversModels, function (groupSet, index) {\n                driversModels[index] = _.sortBy(groupSet, function (model) {\n                    return model.attributes.label;\n                });\n            });\n            var finalModelsSet = [];    // first, add installed drivers\n            // first, add installed drivers\n            if (driversModels['true']) {\n                finalModelsSet = finalModelsSet.concat(driversModels['true']);\n            }    // then add not installed\n            // then add not installed\n            if (driversModels['false']) {\n                finalModelsSet = finalModelsSet.concat(driversModels['false']);\n            }    // store it back to original variable\n            // store it back to original variable\n            self.drivers.models = finalModelsSet;    // not, let's add \"other\" and item if we need it\n            // not, let's add \"other\" and item if we need it\n            if (self.drivers.driverUploadEnabled && self.otherDriverIsPresent) {\n                self.drivers.add({\n                    defaultValues: {},\n                    jdbcDriverClass: JdbcDriverModel.OTHER_DRIVER,\n                    label: i18n['resource.dataSource.jdbc.otherDriver'],\n                    available: false,\n                    'default': false,\n                    jdbcUrl: '',\n                    uploaded: false\n                });\n            }\n        });\n    },\n    getCurrentDriver: function () {\n        return this.drivers.getDriverByClass(this.get('selectedDriverClass'));\n    },\n    changeSelectedDriver: function () {\n        var driver = this.drivers.getDriverByClass(this.get('selectedDriverClass'));\n        if (driver) {\n            this.setCustomAttributesDefaultValues(driver);\n            this.setConnectionUrlFromCustomAttributes();\n            this.trigger('driverClassChange', this);\n        }\n    },\n    setCustomAttributesFromConnectionUrl: function () {\n        var customAttributesHash = this.getCustomAttributeValuesFromConnectionUrl();\n        this.set(customAttributesHash, { silent: true });    // trigger custom event in order to prevent event loop\n        // trigger custom event in order to prevent event loop\n        this.trigger('customAttributesUpdate', this);\n    },\n    setConnectionUrlFromCustomAttributes: function () {\n        var currentDriver = this.getCurrentDriver(), driverCustomAttributes = currentDriver.getCustomAttributes(), currentCustomAttributeValues = this.pick(driverCustomAttributes), connectionUrl = this.replaceConnectionUrlTemplatePlaceholdersWithValues(currentDriver.get('jdbcUrl'), currentCustomAttributeValues);\n        this.set('connectionUrl', connectionUrl, { silent: true });    // trigger custom event in order to prevent event loop\n        // trigger custom event in order to prevent event loop\n        this.trigger('connectionUrlUpdate', this);\n    },\n    // Extract jdbc field values from url accordingly to template.\n    getAttributeValueFromUrl: function (url, regExp) {\n        var groups = regExp.exec(url);\n        return [].slice.call(groups || [], 1);\n    },\n    getCustomAttributeValuesFromConnectionUrl: function () {\n        var foundParts, currentDriver = this.getCurrentDriver();\n        // the below line of code is added just for mysql old version datasource where allowPublicKeyRetrieval=true is not available '\n        if (currentDriver.get('name') === \"mysql\" && currentDriver.get('jdbcDriverClass').indexOf('mariadb') != -1) {\n            this.addMissingProperties(currentDriver, this.get('connectionUrl'));\n        }\n        var url = this.get('connectionUrl'), regExp = XRegExp(currentDriver.convertUrlTemplateToRegex()), jdbcFields = currentDriver.getCustomAttributes(), fieldsWithValues = {};\n        foundParts = this.getAttributeValueFromUrl(url, regExp);\n        _.each(foundParts, function (group, i) {\n            fieldsWithValues[jdbcFields[i]] = group;\n        });\n        return fieldsWithValues;\n    },\n    addMissingProperties: function (currentDriver, url) {\n        let isAllowPublicKey = url && url.indexOf('allowPublicKeyRetrieval') == -1 && currentDriver.get('jdbcUrl').indexOf('allowPublicKeyRetrieval') != -1;\n        if (isAllowPublicKey) {\n            this.set('connectionUrl', url + \"&allowPublicKeyRetrieval=true\")\n        }\n    },\n    setCustomAttributesDefaultValues: function (driver) {\n        this.unsetCustomAttributes();\n        var defaultValues = {};\n        if (!driver.isOtherDriver()) {\n            _.extend(defaultValues, driver.get('defaultValues'));\n            defaultValues['selectedDriverClass'] = driver.get('jdbcDriverClass');\n            defaultValues['driverClass'] = driver.get('jdbcDriverClass');\n            defaultValues['isOtherDriver'] = false;\n            defaultValues['connectionUrl'] = this.replaceConnectionUrlTemplatePlaceholdersWithValues(driver.get('jdbcUrl'), driver.get('defaultValues'));\n        } else {\n            defaultValues['selectedDriverClass'] = driver.get('jdbcDriverClass');\n            defaultValues['driverClass'] = '';\n            defaultValues['isOtherDriver'] = true;\n        }\n        this.set(defaultValues, { silent: true });\n        this.extendValidation();\n    },\n    unsetCustomAttributes: function () {\n        var self = this;\n        _.each(this.drivers.getAllPossibleCustomAttributes(), function (attr) {\n            self.unset(attr, { silent: true });\n        });\n    },\n    // Replace placeholders with values, if value is not present, set empty string.\n    replaceConnectionUrlTemplatePlaceholdersWithValues: function (urlTemplate, valuesMap) {\n        var groups = this.getRegExpFieldGroupsFromConnectionUrlTemplate(urlTemplate);\n        _.each(groups, function (group) {\n            urlTemplate = urlTemplate.replace(group[0], !_.isUndefined(valuesMap[group[1]]) ? valuesMap[group[1]] : '');\n        });\n        return urlTemplate;\n    },\n    // Evaluate regexp on urlTemplate and return all found groups.\n    getRegExpFieldGroupsFromConnectionUrlTemplate: function (urlTemplate) {\n        var groups = [], group;\n        while (!_.isNull(group = JdbcDriverModel.FIELD_TEMPLATE_REGEXP.exec(urlTemplate))) {\n            if (_.isArray(group) && group.length === 2) {\n                groups.push(group);\n            }\n        }\n        return groups;\n    },\n    extendValidation: function () {\n        var self = this, extendedValidationObject = {}, customDriverFields = this.getCurrentDriver().getCustomAttributes();\n        _.extend(extendedValidationObject, BASE_VALIDATION_OBJECT);\n        _.each(customDriverFields, function (field) {\n            extendedValidationObject[field] = [{\n                xRegExpPattern: JdbcDriverModel.VALIDATION_PATTERNS[field],\n                msg: i18n[self.JDBC_BUNDLE_PREFIX + 'invalidField'].replace('{0}', i18n[self.JDBC_BUNDLE_PREFIX + field])\n            }];\n        });\n        this.validation = extendedValidationObject;\n    },\n    toJSON: function () {\n        var data = BaseDataSourceModel.prototype.toJSON.apply(this, arguments);\n        if (this.options.isEditMode && data.password === jasperserverConfig['input.password.substitution']) {\n            data.password = null;\n        }\n        return data;\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport dialogs from '../../../components/components.dialogs';\nimport dialogTemplate from '../../template/dialog/baseDialogTemplate.htm';\n\nexport default Backbone.View.extend({\n    events: {\n        'click button.action.primary': 'primaryButtonOnClick',\n        'click button.action:not(.primary)': 'secondaryButtonOnClick'\n    },\n    isModal: true,\n    TITLE: '',\n    PRIMARY_BUTTON_LABEL: '',\n    SECONDARY_BUTTON_LABEL: '',\n    el: function () {\n        return _.template(dialogTemplate, {\n            title: this.TITLE,\n            primaryButtonLabel: this.PRIMARY_BUTTON_LABEL,\n            secondaryButtonLabel: this.SECONDARY_BUTTON_LABEL\n        });\n    },\n    initialize: function () {\n        $('body').append(this.render().$el);\n    },\n    show: function () {\n        // TODO: get rid of using \"dialogs\" module\n        dialogs.popup.show(this.el, this.isModal);\n    },\n    hide: function () {\n        // TODO: get rid of using \"dialogs\" module\n        dialogs.popup.hide(this.el);\n    },\n    render: function () {\n        return this;\n    },\n    primaryButtonOnClick: function () {\n        throw new Error('Method not implemented');\n    },\n    secondaryButtonOnClick: function () {\n        this.hide();\n    }\n});","export default \"<div id=\\\"select\\\" class=\\\"panel dialog select overlay moveable centered_horz centered_vert hidden\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"sizer diagonal\\\"></div>\\n    <div class=\\\"content hasFooter\\\">\\n        <div class=\\\"header mover\\\">\\n            <div class=\\\"title\\\">{{- title }}</div>\\n        </div>\\n        <div class=\\\"body\\\"></div>\\n        <div class=\\\"footer \\\">\\n            <button class=\\\"button action primary up\\\"><span class=\\\"wrap\\\">{{- primaryButtonLabel }}</span><span class=\\\"icon\\\"></span></button>\\n            <button class=\\\"button action up\\\"><span class=\\\"wrap\\\">{{- secondaryButtonLabel }}</span><span class=\\\"icon\\\"></span></button>\\n        </div>\\n    </div>\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: ztomchenco\n * @version: $Id: AjaxFormSubmitter.js 9178 2015-08-10 16:48:28Z ztomchen $\n */\n\n\n\nimport _ from 'underscore';\nimport request from '../transport/request';\nimport $ from 'jquery';\n\nfunction parseResponse(document) {\n    var result, firstDocChild = null;\n    if (document.firstChild.innerText && document.firstChild.innerText !== \"\") {\n        if (document.body) {\n            result = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n            result.async = false;\n            //remove injected by IE symbols\n            result.loadXML(document.firstChild.innerText.replace(\"\\r\\n-\", \"\\r\\n\"));\n        } else {\n            result = document;\n        }\n    } else {\n        result = document;\n    }\n\n    result.firstChild && (firstDocChild = result.firstChild.nodeName.toLowerCase());\n    if (!firstDocChild || firstDocChild === \"html\" || firstDocChild === \"#comment\") {\n        return {errorCode: \"unexpected.error\"}\n    }\n\n    return parseChildren((result.firstChild.nodeName.toLowerCase() === \"xml\")\n        ? result.firstChild.nextSibling : result.firstChild);\n}\n\nfunction parseChildren(node) {\n    var children, ob;\n    if (!node.children) {\n        children = [];\n        for (let i = 0, l = node.childNodes.length; i < l; i++) {\n            if (node.childNodes[i].nodeValue === null) {\n                children.push(node.childNodes[i]);\n            }\n        }\n    } else {\n        children = node.children;\n    }\n\n    if (children.length === 0 && node.childNodes.length === 1) {\n        return node.childNodes[0].nodeValue;\n    } else {\n        if (children.length > 1 && (children[0].nodeName === children[1].nodeName)) {\n            ob = [];\n            for (let i = 0, l = children.length; i < l; i++) {\n                ob[i] = parseChildren(children[i]);\n            }\n        } else {\n            ob = {};\n            for (let i = 0, l = children.length; i < l; i++) {\n                ob[children[i].nodeName] = parseChildren(children[i]);\n            }\n        }\n    }\n    return ob;\n}\n\nfunction ajaxUpload(form) {\n    var res = new $.Deferred();\n\n    form.submit(function (e) {\n        e.preventDefault();\n\n        request({\n            url: form.attr(\"action\"),\n            type: form.attr(\"method\"),\n            data: new FormData(form[0]),\n            cache: false,\n            contentType: false,\n            processData: false,\n            headers: {\n                Accept: \"application/json\"\n            }\n        }).done(function (result) {\n            res.resolve(result);\n        }).fail(function (error) {\n            error = error.responseJSON || error || {};\n\n            // default error code\n            _.defaults(error, {\n                errorCode: \"error.load.error\"\n            });\n\n            res.reject(error);\n        });\n\n        form.off(\"submit\");\n    });\n\n    form.submit();\n\n    return res;\n}\n\nfunction iframeUpload(form, name) {\n    var result = $.Deferred(),\n        iframe = $(\"<iframe style='display:none' name='\" + name + \"'></iframe>\");\n\n    form.append(iframe).attr(\"target\", name);\n\n    iframe.on(\"load\", function () {\n        try {\n            result.resolve(parseResponse(this.contentWindow.document));\n        } catch (e) {\n            result.reject({errorCode: \"error.invalid.response\"});\n        }\n\n        iframe.remove();\n    });\n\n    iframe.on(\"abort\", function () {\n        result.reject({errorCode: \"error.load.aborted\"});\n        iframe.remove();\n    });\n\n    iframe.on(\"error\", function () {\n        result.reject({errorCode: \"error.load.error\"});\n        iframe.remove();\n    });\n\n    form.submit();\n\n    return result;\n}\n\nvar AjaxUploader = function (uploadForm, url, method, enctype) {\n    this.name = _.uniqueId(\"uploadTarget\");\n    this.form = $(uploadForm);\n\n    url && this.form.attr(\"action\", url);\n    method && this.form.attr(\"method\", method);\n    enctype && this.form.attr(\"enctype\", enctype);\n\n    this.parceXmlDocToObject = parseResponse;\n};\n\nAjaxUploader.prototype.submit = function () {\n    if (window.FormData) {\n        return ajaxUpload(this.form);\n    }\n\n    return iframeUpload(this.form, this.name);\n};\n\nexport default AjaxUploader;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport overlayLayout from './template/overlayLayout.htm';\n\nexport default Backbone.View.extend({\n    template: _.template(overlayLayout),\n    initialize: function (options) {\n        this.delay = options.delay;\n        this.render();\n    },\n    render: function () {\n        this.$el.append(this.template());\n        this.$elSpinner = this.$('.jr-mSpinnerDatatable');\n        this.$elOverlay = this.$('.jr-mOverlay');\n        return this;\n    },\n    show: function (delay) {\n        var self = this, show = function () {\n            self.$elSpinner.show();\n            self.$elOverlay.show();\n        };\n        if (this.delay || delay) {\n            if (!this._timer) {\n                this._timer = setTimeout(show, this.delay || delay);\n            }\n        } else\n            show();\n    },\n    hide: function () {\n        if (this._timer) {\n            clearTimeout(this._timer);\n            this._timer = null;\n        }\n        this.$elSpinner.hide();\n        this.$elOverlay.hide();\n    },\n    remove: function () {\n        this.$elSpinner.remove();\n        this.$elOverlay.remove();\n        this.stopListening();\n        return this;\n    }\n});","export default \"<div class=\\\"jr-mSpinner jr-mSpinnerDatatable jr-isHidden jr\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n</div>\\n<div class=\\\"jr-mOverlay jr-isHidden jr\\\"></div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport BaseDialog from '../../view/dialog/BaseDialog';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport AjaxFormSubmitter from 'js-sdk/src/common/transport/AjaxFormSubmitter';\nimport LoadingOverlay from 'js-sdk/src/components/loadingOverlay/LoadingOverlay';\nimport dialogs from '../../../components/components.dialogs';\nimport i18n from '../../../i18n/jasperserver_messages.properties';\nimport uploadJdbcDriverDialogTemplate from '../../template/dialog/uploadJdbcDriverDialogTemplate.htm';\nimport fileUploadTemplate from '../../template/dialog/fileUploadTemplate.htm';\nimport '../../../util/utils.common';\n\nexport default BaseDialog.extend({\n    TITLE: i18n['resource.dataSource.jdbc.selectDriverTitle'],\n    PRIMARY_BUTTON_LABEL: i18n['button.upload'],\n    SECONDARY_BUTTON_LABEL: i18n['button.cancel'],\n    events: function () {\n        return _.extend({}, BaseDialog.prototype.events, { 'change input[type=\\'file\\']': 'onFileChange' });\n    },\n    initialize: function (options) {\n        this.driverClass = options.driverClass;\n        this.driverAvailable = options.driverAvailable;\n        this.fileIndex = 0;\n        this._overlay = new LoadingOverlay({\n            delay: 1000\n        });\n        BaseDialog.prototype.initialize.apply(this, arguments);\n        $(this.el).addClass('jr jr-uploadJdbcDriverDialog');\n    },\n    onFileChange: function (e) {\n        const $targetEl = $(e.target),\n            $validationEl = $targetEl.next('.message.warning');\n        $validationEl.parent().removeClass('error');\n        if (!$targetEl.val().match(/.jar$/)) {\n            $validationEl.text(i18n['resource.dataSource.jdbc.upload.wrongExtension']).parent().addClass('error');\n        } else if ($targetEl.is(this.$('input[type=\\'file\\']:last-of-type'))) {\n            // determine if we need to add one more input to select more files\n            let selectedFiles = 0, inputs = this.$('input[type=\\'file\\']');\n            _.each(inputs, function (input, index) {\n                selectedFiles += index + 1;\n            });\n            if (selectedFiles >= inputs.length) {\n                this.addFileInput();\n            }\n            this.$('button.primary').removeClass('disabled').attr('disabled', null);\n        }\n    },\n    render: function () {\n        this.$('.body').html(_.template(uploadJdbcDriverDialogTemplate, {\n            className: this.driverClass,\n            i18n: i18n\n        }));\n        _.defer(() => {\n            this.addFileInput();\n            if (this.driverAvailable) {\n                this.$('.warningMessageContainer').removeClass('hidden').find('.message').text(i18n['resource.dataSource.jdbc.upload.overwriteWarning']);\n            } else {\n                this.$('.warningMessageContainer').addClass('hidden').find('.message').text('');\n            }\n        });\n        this.$('button.primary').addClass('disabled').attr('disabled', 'disabled');\n        return this;\n    },\n    onSuccessCallback: function (response) {\n        this.trigger('driverUpload', response);\n        this.hide();\n        dialogs.systemConfirm.show(i18n['resource.dataSource.jdbc.upload.driverUploadSuccess']);\n        _.defer(_.bind(this.remove, this));\n    },\n    onErrorCallback: function (response) {\n        let errorMessage;\n        response = response.responseJSON ? response.responseJSON : response;\n        if ('illegal.parameter.value.error' === response.errorCode && response.parameters && response.parameters.length && 'className' === response.parameters[0]) {\n            errorMessage = i18n['resource.dataSource.jdbc.classNotFound'].replace('{0}', this.driverClass);\n        } else if (response.message) {\n            errorMessage = response.message;\n        } else {\n            errorMessage = response.errorCode;    // see some notes in JRS-8435\n            // backend responses with 400 error code and http header \"Content-Type: application/errorDescriptor+xml\"\n            // this makes all browsers crazy.\n            // Shortly, browsers don't have access to http response body...\n            // Server is considering this issue, but for now we may close the issue by adding next lines on code\n            // see some notes in JRS-8435\n            // backend responses with 400 error code and http header \"Content-Type: application/errorDescriptor+xml\"\n            // this makes all browsers crazy.\n            // Shortly, browsers don't have access to http response body...\n            // Server is considering this issue, but for now we may close the issue by adding next lines on code\n            if (errorMessage === 'error.invalid.response') {\n                errorMessage = 'The required driver class (' + this.driverClass + ') is not found in uploaded files';\n            }\n        }\n        this.$('.errorMessageContainer').addClass('error').find('.message').text(errorMessage);\n    },\n    addFileInput: function () {\n        this.$('ul').append(_.template(fileUploadTemplate, { fileIndex: this.fileIndex }));\n        this.fileIndex++;\n    },\n    primaryButtonOnClick: function () {\n        // clear the error message because we are doing new upload\n        this.$('.errorMessageContainer').removeClass('error').find('.message').text('');\n\n        // disable the primary button to block a second click\n        this.$('button.primary').addClass('disabled').attr('disabled', 'disabled');\n        // add a spinner and overlay with some delay\n        $(\"body\").append(this._overlay.$el);\n        this._overlay.show();\n\n        const form = this.$('form');\n        const submitter = (new AjaxFormSubmitter(form[0])).submit();\n        submitter.done((response) => {\n            if (response.errorCode) {\n                this.onErrorCallback(response);\n            } else {\n                this.onSuccessCallback(response);\n            }\n        }).fail((response) => {\n            this.onErrorCallback(response);\n        }).always(() => {\n            // remove overlay with spinner\n            this._overlay.hide();\n            $(\"body\").detach(this._overlay.$el);\n            // and enable the primary button back again\n            this.$('button.primary').removeClass('disabled').attr('disabled', null);\n        });\n    },\n    secondaryButtonOnClick: function () {\n\n        // since the overlay start with some delay there is a change that user clicks \"Cancel\" button\n        // and the overlay will trigger. To avoid this we need to stop the overlay as well.\n        this._overlay.hide();\n        $(\"body\").detach(this._overlay.$el);\n\n        // hide this dialog\n        this.hide();\n        _.defer(_.bind(this.remove, this));\n    }\n});\n","export default \"<form method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" action=\\\"rest_v2/jdbcDrivers\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <input name=\\\"className\\\" type=\\\"hidden\\\" value=\\\"{{- className }}\\\"/>\\n    <div class=\\\"control groupBox fillParent\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"header\\\">\\n                <div class=\\\"title\\\"></div>\\n            </div>\\n            <div class=\\\"body\\\">\\n                <ul title=\\\"Locate local file\\\"></ul>\\n                <div class=\\\"errorMessageContainer\\\">\\n                    <span class=\\\"message warning\\\"></span>\\n                </div>\\n                <div class=\\\"hidden warningMessageContainer\\\">\\n                    <span class=\\\"message textAccent\\\"></span>\\n                </div>\\n                <br/>\\n                <a class=\\\"fsection\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"http://community.jaspersoft.com/wiki/downloading-and-installing-database-drivers\\\">{{- i18n[\\\"resource.dataSource.jdbc.upload.downloading\\\"]}}</a>\\n            </div>\\n        </div>\\n    </div>\\n</form>\";","export default \"<li class=\\\"leaf\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <input type=\\\"file\\\" name=\\\"file_{{- fileIndex}}\\\" size=\\\"60\\\" accept=\\\"jar/jar\\\" />\\n    <span class=\\\"message warning\\\"></span>\\n</li>\";","export default \"<label class=\\\"control input text\\\" title=\\\"{{- title}}\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <span class=\\\"wrap\\\">{{- label}} ({{- i18n[\\\"required.field\\\"] }}):</span>\\n    <input name=\\\"{{- name}}\\\" type=\\\"{{- type}}\\\" value=\\\"{{- value }}\\\"/>\\n    <span class=\\\"message warning\\\"></span>\\n    <span class=\\\"message hint\\\">{{- hint }}</span>\\n</label>\";","export default \"<div class=\\\"panel dialog selectFromRepository overlay moveable sizeable centered_horz centered_vert hidden\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<div class=\\\"sizer diagonal\\\"></div>\\n\\t<div class=\\\"content hasFooter\\\">\\n\\t\\t<div class=\\\"header mover\\\">\\n\\t\\t\\t<div class=\\\"title\\\">\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"body\\\">\\n\\t\\t\\t<div class=\\\"control groupBox fillParent\\\">\\n\\t\\t\\t\\t<div class=\\\"content\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"body\\\">\\n\\t\\t\\t\\t\\t\\t<ul id=\\\"selectFromRepoTree\\\"></ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"footer\\\">\\n\\t\\t\\t<button id=\\\"selectFromRepoBtnSelect\\\" class=\\\"button action primary up\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"button.select\\\"] }}</span><span class=\\\"icon\\\"></span></button>\\n\\t\\t\\t<button id=\\\"selectFromRepoBtnCancel\\\" class=\\\"button action up\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"button.cancel\\\"] }}</span><span class=\\\"icon\\\"></span></button>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";","\n        import settingsStore from 'settingsStore';\n        settingsStore['awsSettings'] = settingsStore['awsSettings'] || {};\n        export default settingsStore['awsSettings'];\n    ","export default \"<label class=\\\"control input text\\\" title=\\\"{{- title}}\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <span class=\\\"wrap\\\">{{- label}}:</span>\\n    <input name=\\\"{{- name}}\\\" type=\\\"{{- type}}\\\" value=\\\"{{- value }}\\\"/>\\n    <span class=\\\"message warning\\\"></span>\\n    <span class=\\\"message hint\\\">{{- hint }}</span>\\n</label>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport JdbcDataSourceModel from '../model/JdbcDataSourceModel';\nimport JdbcDriverModel from '../model/JdbcDriverModel';\nimport UploadJdbcDriverDialog from '../view/dialog/UploadJdbcDriverDialog';\nimport jdbcSpecificTemplate from '../template/jdbcSpecificTemplate.htm';\nimport jdbcCustomFieldTemplate from '../template/jdbcCustomFieldTemplate.htm';\nimport buttonManager from '../../core/core.events.bis';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport jdbcfileLocationTemplate from \"../template/jdbcfileLocationTemplate.htm\";\nimport resourceLocator from \"../../resource/resource.locate\";\nimport selectDialogTemplate from 'js-sdk/src/common/templates/components.pickers.htm';\nimport $ from 'jquery';\nimport awsSettings from '../../settings/awsSettings.settings';\nimport settingsUtility from \"../util/settingsUtility\";\nimport jdbcAthenaAwsRegionTemplate from '../template/jdbcAthenaAwsRegionTemplate.htm';\nimport jdbcOptionalFieldTemplate from '../template/jdbcOptionalFieldTemplate.htm';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.jdbc.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.jdbc.page.title.edit',\n    modelConstructor: JdbcDataSourceModel,\n    events: function () {\n        var events = {};\n        _.extend(events, BaseDataSourceView.prototype.events, {\n            'keyup input[type=\\'text\\'][name!=\\'driverClass\\'], input[type=\\'password\\'], textarea': 'updateModelProperty',\n            'change input[type=\\'text\\'][name!=\\'driverClass\\'], input[type=\\'password\\'], textarea, select': 'updateModelProperty',\n            'keyup input[type=\\'text\\'][name=\\'driverClass\\']': 'manuallySetDriverClass',\n            'change input[type=\\'text\\'][name=\\'driverClass\\']': 'manuallySetDriverClass',\n            'click #driverUploadButton': 'uploadDriver'\n        });\n        return events;\n    }(),\n    initialize: function (options) {\n        BaseDataSourceView.prototype.initialize.apply(this, arguments);\n        this.deepDefaults = settingsUtility.deepDefaults(options, { awsSettings: awsSettings });\n        this.listenTo(this.model, 'connectionUrlUpdate', this.updateConnectionUrl);\n        this.listenTo(this.model, 'customAttributesUpdate', this.updateCustomAttributes);\n        this.listenTo(this.model, 'driverClassChange', this.changeDriver);\n        this.listenTo(this.model.drivers, 'change', this.updateDriverOption);\n        this.listenTo(this.model.drivers, 'add', this.addDriverOption);\n    },\n    updateDriverOption: function (driver) {\n        var $option = this.$('select[name=\\'selectedDriverClass\\'] option[value=\\'' + driver.get('jdbcDriverClass') + '\\']'), optionText = driver.get('label') + ' (' + driver.get('jdbcDriverClass') + ')';\n        if (!driver.get('available')) {\n            optionText = i18n['resource.dataSource.jdbc.driverMissing'] + ' ' + optionText;\n        }\n        $option.text(optionText);\n        if (this.model.getCurrentDriver() === driver) {\n            this.changeUploadDriverButtonState();\n        }\n    },\n    addDriverOption: function (driver) {\n        // ignore adding of \"other driver\" option.\n        if (driver.isOtherDriver)\n            return;    // in case of normal driver is added to the drivers collection let's add it to the drivers select as option.\n        // in case of normal driver is added to the drivers collection let's add it to the drivers select as option.\n        var $otherDriverOption = this.$('select[name=\\'selectedDriverClass\\'] option[value=\\'' + JdbcDriverModel.OTHER_DRIVER + '\\']'), optionText = driver.get('jdbcDriverClass'), self = this;\n        if (!driver.get('available')) {\n            optionText = i18n['resource.dataSource.jdbc.driverMissing'] + ' ' + optionText;\n        }\n        $otherDriverOption.before('<option value=\\'' + driver.get('jdbcDriverClass') + '\\'>' + optionText + '</option>');\n        _.defer(function () {\n            self.$('select[name=\\'selectedDriverClass\\']').val(driver.get('jdbcDriverClass'));    // manually trigger change event as set won't work here, as driverClass is already the same\n            // manually trigger change event as set won't work here, as driverClass is already the same\n            self.model.trigger('change:driverClass');\n        });\n    },\n    manuallySetDriverClass: function () {\n        var value = this.$('input[type=\\'text\\'][name=\\'driverClass\\']').val(), valueObj = { driverClass: value };\n        this.model.set(valueObj, { silent: true });\n        this.model.validate(valueObj);\n        this.changeUploadDriverButtonState();\n    },\n    updateConnectionUrl: function () {\n        this.$('input[name=\\'connectionUrl\\']').val(this.model.get('connectionUrl'));    // do not trigger validation for connectionUrl of \"other\" driver or \"uploaded\" driver as it's empty by default\n        // do not trigger validation for connectionUrl of \"other\" driver or \"uploaded\" driver as it's empty by default\n        var currentDriver = this.model.getCurrentDriver();\n        if (!currentDriver.isOtherDriver() && !currentDriver.isUploadedDriver()) {\n            this.model.validate({ connectionUrl: this.model.get('connectionUrl') });\n        }\n    },\n    updateCustomAttributes: function () {\n        var self = this, driverCustomAttributes = this.model.getCurrentDriver().getCustomAttributes();\n        _.each(driverCustomAttributes, function (attr) {\n            self.$('input[name=\\'' + attr + '\\']').val(self.model.get(attr));\n        });\n        var customAttributes = this.model.pick(driverCustomAttributes);\n        this.model.validate(customAttributes);\n    },\n    changeDriver: function () {\n        this.renderDriverCustomAttributeFields();\n        this.changeUploadDriverButtonState();\n    },\n    changeUploadDriverButtonState: function () {\n        var currentDriver = this.model.getCurrentDriver(), $driverUploadButton = this.$('#driverUploadButton');\n        buttonManager.enable($driverUploadButton[0]);\n        var buttonLabel = currentDriver.get('available') ? i18n['resource.dataSource.jdbc.upload.editDriverButton'] : i18n['resource.dataSource.jdbc.upload.addDriverButton'];\n        $driverUploadButton.find('.wrap').text(buttonLabel);\n    },\n    uploadDriver: function () {\n        if (this.model.drivers.driverUploadEnabled && this.model.get('driverClass')) {\n            this.fieldIsValid(this, 'driverClass', 'name');\n            this.driverUploadDialog && this.stopListening(this.driverUploadDialog);\n            delete this.driverUploadDialog;\n            this.initDriverUploadDialog();\n            this.driverUploadDialog.show();\n        } else {\n            this.fieldIsInvalid(this, 'driverClass', i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.driverClass'], 'name');\n        }\n    },\n    initDriverUploadDialog: function () {\n        this.driverUploadDialog = new UploadJdbcDriverDialog({\n            driverAvailable: this.model.getCurrentDriver().get('available'),\n            driverClass: this.model.get('isOtherDriver') ? this.model.get('driverClass') : this.model.getCurrentDriver().get('jdbcDriverClass')\n        });\n        this.listenTo(this.driverUploadDialog, 'driverUpload', this._onDriverUploadFinished);\n    },\n    _onDriverUploadFinished: function (driver) {\n        var self = this;\n        this.model.fetchDrivers().then(function () {\n            self.model.drivers.markDriverAsAvailable(driver.jdbcDriverClass);\n            _.defer(function () {\n                self.model.validate();\n                self.render();\n            });\n        });\n    },\n    render: function () {\n        this.$el.empty();\n        this.renderJdbcSpecificSection();\n        this.renderTimezoneSection();\n        this.renderTestConnectionSection();\n        return this;\n    },\n    templateData: function () {\n        var data = BaseDataSourceView.prototype.templateData.apply(this, arguments);\n        _.extend(data, {\n            'i18n':i18n,\n            drivers: this.model.drivers.toJSON(),\n            otherDriverValue: JdbcDriverModel.OTHER_DRIVER,\n            driverUploadEnabled: this.model.drivers.driverUploadEnabled,\n            awsRegions: this.deepDefaults.awsSettings.awsRegions\n        });\n        return data;\n    },\n    renderJdbcSpecificSection: function () {\n        this.$el.append(_.template(jdbcSpecificTemplate, this.templateData()));\n        this.renderDriverCustomAttributeFields();\n        this.changeUploadDriverButtonState();\n    },\n    renderDriverCustomAttributeFields: function () {\n        var self = this, resultingHtml = '';\n        if (this.model.get('isOtherDriver')) {\n            resultingHtml += _.template(jdbcCustomFieldTemplate, {\n                hint: i18n['resource.dataSource.jdbc.hint1'],\n                label: i18n['resource.dataSource.jdbc.driver'],\n                name: 'driverClass',\n                type: 'text',\n                title: i18n['resource.analysisConnection.driver'],\n                value: this.model.get('driverClass'),\n                i18n: i18n\n            });\n        } else {\n            var driverSpecificFields = this.model.getCurrentDriver().getCustomAttributes();\n            const FieldToTemplateMap = {\n                awsRegion: jdbcAthenaAwsRegionTemplate,\n                arn: jdbcOptionalFieldTemplate,\n                role: jdbcOptionalFieldTemplate,\n                warehouse: jdbcOptionalFieldTemplate\n            };\n            const FieldToTitleMap = {\n                accessKey: i18n['resource.dataSource.jdbc.setting.accessKey.title'],\n                secretKey: i18n['resource.dataSource.jdbc.setting.secretKey.title'],\n                arn: i18n['resource.dataSource.jdbc.setting.arn.title'],\n                role: i18n['resource.dataSource.jdbc.optional.snowFlake.role'],\n                warehouse: i18n['resource.dataSource.jdbc.optional.snowFlake.warehouse']\n            };\n            const FieldToHintMap = {\n                arn: i18n['resource.dataSource.jdbc.optional.arn']\n            };\n            _.each(driverSpecificFields, function (field) {\n                const fieldType = field === \"secretKey\" ? \"password\" : \"text\";\n                const requiredTitle = i18n['resource.dataSource.jdbc.requiredTitle'].replace('{0}', i18n['resource.dataSource.jdbc.' + field].toLowerCase());\n                const Title = FieldToTitleMap[field] ?? requiredTitle;\n                const template = FieldToTemplateMap[field] ?? jdbcCustomFieldTemplate;\n                const Hint = FieldToHintMap[field] ?? '';\n                resultingHtml += _.template(template, {\n                    hint: Hint,\n                    label: i18n['resource.dataSource.jdbc.' + field],\n                    name: field,\n                    type: fieldType,\n                    title: Title,\n                    value: self.model.get(field),\n                    i18n: i18n,\n                    awsRegions: self.deepDefaults.awsSettings.awsRegions\n                });\n            });\n        }\n        this.$('[name=jdbcSpecificFieldsContainer]').html(resultingHtml);\n\n        const currentDriverName = (this.isEditMode && !this.model.changed.selectedDriverClass) ? this.options.dataSource.driverClass : this.model.changed.selectedDriverClass;\n        if (currentDriverName && currentDriverName.indexOf(\"GoogleBigQueryDriver\") !== -1 ) {\n            this.renderFileLocationSection();\n        }\n    },\n    remove: function () {\n        this.driverUploadDialog && this.driverUploadDialog.remove();\n        BaseDataSourceView.prototype.remove.apply(this, arguments);\n    },\n    renderFileLocationSection: function () {\n        $( _.template(jdbcfileLocationTemplate,{'i18n':i18n})).insertAfter(\"[name='oAuthPvtKeyPath']\");\n        this.browseButton = resourceLocator.initialize({\n            i18n: i18n,\n            template: selectDialogTemplate,\n            resourceInput: this.$el.find('[name=oAuthPvtKeyPath]')[0],\n            browseButton: this.$el.find('[name=oathPrivateKeyBrowserButton]')[0],\n            providerId: 'fileResourceBaseTreeDataProvider',\n            dialogTitle: i18n['resource.Add.Files.Title'],\n            selectLeavesOnly: true,\n            onChange: _.bind(function (value) {\n                this.model.set('oAuthPvtKeyPath', value);\n                this.model.validate({\n                    'oAuthPvtKeyPath': value\n                });\n            }, this)\n        });\n\n    }\n});\n","export default \"<fieldset class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <legend class=\\\"offLeft\\\"><span>{{- i18n['resource.dataSource.accessProp']}}</span></legend>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.selectDriverTitle']}}\\\" class=\\\"control select\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.driver']}}:</span>\\n        <select name=\\\"selectedDriverClass\\\">\\n            {{ _.each(drivers, function(driver) { }}\\n                <option value=\\\"{{- driver.jdbcDriverClass }}\\\"\\n                {{ if (modelAttributes.selectedDriverClass === driver.jdbcDriverClass) { }}\\n                    selected=\\\"selected\\\"\\n                {{ } }}>\\n                    {{ if (!driver.available && driver.jdbcDriverClass !== otherDriverValue) { }}\\n                        {{- i18n[\\\"resource.dataSource.jdbc.driverMissing\\\"] }}\\n                    {{ } }}\\n                    {{- driver.label }}\\n                    {{ if (driver.jdbcDriverClass !== otherDriverValue && typeof (driver.label) !== \\\"undefined\\\" && driver.label !== \\\"\\\") { }}\\n                        ({{- driver.jdbcDriverClass }})\\n                    {{ } else if (driver.jdbcDriverClass !== otherDriverValue && (typeof driver.label === \\\"undefined\\\" || driver.label === \\\"\\\")) { }}\\n                        {{- driver.jdbcDriverClass }}\\n                    {{ } }}\\n                </option>\\n            {{ }); }}\\n        </select>\\n\\n        {{ if (driverUploadEnabled) { }}\\n\\t\\t<button class=\\\"button action up\\\" id=\\\"driverUploadButton\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.upload.editDriverButton']}}</span>\\n\\t\\t</button>\\n        {{ } }}\\n    </label>\\n\\n    <div name=\\\"jdbcSpecificFieldsContainer\\\"></div>\\n    <label title=\\\"{{- i18n['resource.analysisConnection.url']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.url']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.connectionUrl }}\\\" name=\\\"connectionUrl\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.jdbc.hint2']}}</span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.username']}}\\\" class=\\\"control input text \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.username']}}:</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.username }}\\\" name=\\\"username\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.password']}}\\\" class=\\\"control input password \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.password']}}:</span>\\n        <input type=\\\"password\\\" value=\\\"{{- modelAttributes.password }}\\\" name=\\\"password\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n</fieldset>\";","export default \"<label class=\\\"control input text\\\" title=\\\"{{- title}}\\\" style=\\\"display: inline-block; margin-right: 6px; margin-top: 6px; width: 350px;\\\">\\n    <js-templateNonce></js-templateNonce>\\n    <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.region']}} ({{- i18n[\\\"required.field\\\"] }}):</span>\\n    <select class=\\\"fnormal\\\" name=\\\"awsRegion\\\">\\n        {{ _.each(awsRegions, function(region) { }}\\n        <option value=\\\"{{- region }}\\\" {{ if (region === value) { }}selected=\\\"selected\\\"{{ } }} >{{- i18n[region] || region }}</option>\\n        {{ }); }}\\n    </select>\\n    <span class=\\\"message warning\\\"></span>\\n</label>\\n\";","export default \"<js-templateNonce></js-templateNonce>\\n<button class=\\\"button action up\\\" type=\\\"button\\\" name=\\\"oathPrivateKeyBrowserButton\\\">\\n    <span class=\\\"wrap\\\">{{- i18n['dialog.file.browse'] }}...</span>\\n    <span class=\\\"icon\\\"></span>\\n</button>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport connectionTypes from '../enum/connectionTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nexport default BaseDataSourceModel.extend({\n    type: repositoryResourceTypes.JNDI_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, BaseDataSourceModel.prototype.defaults, {\n            jndiName: '',\n            timezone: '',\n            connectionType: connectionTypes.JNDI\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, BaseDataSourceModel.prototype.validation, {\n            jndiName: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.jndiName']\n            }]\n        });\n        return validation;\n    }()\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport JndiDataSourceModel from '../model/JndiDataSourceModel';\nimport jndiSpecificTemplate from '../template/jndiSpecificTemplate.htm';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.jndi.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.jndi.page.title.edit',\n    modelConstructor: JndiDataSourceModel,\n    render: function () {\n        this.$el.empty();\n        this.renderJndiSpecificSection();\n        this.renderTimezoneSection();\n        this.renderTestConnectionSection();\n        return this;\n    },\n    renderJndiSpecificSection: function () {\n        this.$el.append(_.template(jndiSpecificTemplate, this.templateData()));\n    }\n});","export default \"<fieldset class=\\\"group mediumFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n    <legend class=\\\"offLeft\\\"><span>{{- i18n['resource.dataSource.accessProp']}}</span></legend>\\n\\n    <label title=\\\"{{- i18n['resource.analysisConnection.driver']}}\\\" class=\\\"control input text \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jndi.serviceName']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.jndiName }}\\\" name=\\\"jndiName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.jndi.hint1']}}</span>\\n    </label>\\n\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: Dima Gorbenko\n * @version: $Id$\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport JdbcDataSourceModel from './JdbcDataSourceModel';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport JdbcDriverCollection from '../collection/JdbcDriverCollection';\nimport dataSourcePatterns from '../../settings/dataSourcePatterns.settings';\nimport connectionTypes from '../enum/connectionTypes';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport awsSettings from '../../settings/awsSettings.settings';\nimport jasperserverConfig from '../../i18n/jasperserver_config.properties';\nimport settingsUtility from '../util/settingsUtility';\nimport XRegExp from 'xregexp';\n\nvar AwsDataSourceModel = JdbcDataSourceModel.extend({\n    otherDriverIsPresent: false,\n    type: repositoryResourceTypes.AWS_DATA_SOURCE,\n\n    defaults: (function (){\n        var defaults = {};\n\n        _.extend(defaults, JdbcDataSourceModel.prototype.defaults, {\n            dbName: \"\",\n            dbInstanceIdentifier: \"\",\n            dbService: \"\",\n            accessKey: \"\",\n            secretKey: \"\",\n            roleArn: \"\",\n            region: \"\",\n            credentialsType: \"\",\n            connectionType: connectionTypes.AWS\n        });\n\n        return defaults;\n    })(),\n\n    validation: (function() {\n        var validation = {};\n\n        _.extend(validation, {\n            connectionUrl: [\n                {\n                    required: true,\n                    msg: i18n[\"ReportDataSourceValidator.error.not.empty.reportDataSource.connectionUrl\"]\n                },\n                {\n                    xRegExpPattern: XRegExp(dataSourcePatterns.forbidWhitespacesPattern),\n                    msg: i18n[\"ReportDataSourceValidator.error.invalid.chars.reportDataSource.connectionUrl\"]\n                }\n            ],\n            username: [\n                {\n                    required: true,\n                    msg: i18n[\"ReportDataSourceValidator.error.not.empty.reportDataSource.username\"]\n                }\n            ],\n            driverClass: [\n                {\n                    required: true,\n                    msg: i18n[\"ReportDataSourceValidator.error.not.empty.reportDataSource.driverClass\"]\n                },\n                {\n                    xRegExpPattern: XRegExp(dataSourcePatterns.forbidWhitespacesPattern),\n                    msg: i18n[\"ReportDataSourceValidator.error.invalid.chars.reportDataSource.driverClass\"]\n                },\n                {\n                    fn: function(value, attr, computedState) {\n                        var contains = new RegExp(dataSourcePatterns.attributePlaceholderPattern).test(value);\n\n                        if (!contains) {\n                            var driver = this.drivers.getDriverByClass(value);\n\n                            if (!driver || !driver.get(\"available\")) {\n                                return i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.driverNotInstalled'];\n                            }\n                        }\n                    }\n                }\n            ],\n            dbName: [\n                {\n                    required: true,\n                    msg: i18n[\"ReportDataSourceValidator.error.not.empty.reportDataSource.dbNameIsEmpty\"]\n                }\n            ],\n            region: [\n                {\n                    required: true\n                }\n            ],\n            accessKey: [\n                {\n                    fn: function(value, attr, computedState) {\n                        if (computedState.credentialsType === AwsDataSourceModel.credentialsType.AWS && (_.isNull(value) || _.isUndefined(value) || (_.isString(value) && value === ''))) {\n                            return i18n[\"fillParameters.error.mandatoryField\"];\n                        }\n                    }\n                }\n            ],\n            secretKey: [\n                {\n                    fn: function(value, attr, computedState) {\n                        if (computedState.credentialsType === AwsDataSourceModel.credentialsType.AWS && (_.isNull(value) || _.isUndefined(value) || (_.isString(value) && value === ''))) {\n                            return i18n[\"fillParameters.error.mandatoryField\"];\n                        }\n                    }\n                }\n            ]\n        });\n\n        return validation;\n    })(),\n\n    initialize: function(attributes, options) {\n        BaseDataSourceModel.prototype.initialize.apply(this, arguments);\n        var deepDefaults = settingsUtility.deepDefaults(options, {\n            awsSettings: awsSettings\n        });\n        if (this.isNew()) {\n            this.set(\"region\", _.first(deepDefaults.awsSettings.awsRegions));\n        } else {\n            // use password substitution\n            this.set(\"password\", jasperserverConfig[\"input.password.substitution\"]);\n            this.set(\"secretKey\", jasperserverConfig[\"input.password.substitution\"]);\n        }\n        this.set(\"credentialsType\", !deepDefaults.awsSettings.isEc2Instance || deepDefaults.awsSettings.suppressEc2CredentialsWarnings || this.get(\"accessKey\") !== \"\"\n            ? AwsDataSourceModel.credentialsType.AWS\n            : AwsDataSourceModel.credentialsType.EC2);\n\n        this.initialization = $.Deferred();\n        this.drivers = new JdbcDriverCollection([], this.options);\n        var self = this;\n        this.drivers.fetch({reset: true}).done(function(){\n            self.initialization.resolve();\n        });\n\n        this.on(\"change:dbName change:dbPort change:dbHost change:sName change:connectionUrlTemplate\", this.updateConnectionUrl);\n        this.on(\"change:credentialsType\", this.changeCredentialsType);\n    },\n\n    updateConnectionUrl: function() {\n        if (!this.get(\"connectionUrlTemplate\")) {\n            return;\n        }\n\n        var valuesMap = this.pick([\"dbName\", \"dbPort\", \"dbHost\", \"sName\"]);\n        if(!valuesMap.sName){\n            // some JDBC URL templates use sName instead of dbName.\n            valuesMap.sName = valuesMap.dbName;\n        }\n        var connectionUrl = this.replaceConnectionUrlTemplatePlaceholdersWithValues(\n            this.get(\"connectionUrlTemplate\"), valuesMap);\n\n        this.set(\"connectionUrl\", connectionUrl);\n    },\n\n    changeCredentialsType: function() {\n        var ec2CredentialsSelected = this.get(\"credentialsType\") === AwsDataSourceModel.credentialsType.EC2;\n\n        if (ec2CredentialsSelected) {\n            this.set({\n                accessKey: \"\",\n                secretKey: \"\",\n                roleArn: \"\"\n            });\n        }\n    },\n\n    toJSON: function() {\n        var data = JdbcDataSourceModel.prototype.toJSON.apply(this, arguments);\n\n        if (this.options.isEditMode && data.secretKey === jasperserverConfig[\"input.password.substitution\"]) {\n            data.secretKey = null;\n        }\n\n        return data;\n    },\n\n    getFullDbTreePath: function() {\n        return this.get(\"dbInstanceIdentifier\") && this.get(\"dbService\")\n            ? \"/\" + this.get(\"dbService\") + \"/\" + this.get(\"dbInstanceIdentifier\")\n            : null;\n    }\n}, {\n    credentialsType: {\n        EC2: \"ec2\",\n        AWS: \"aws\"\n    }\n});\n\nexport default AwsDataSourceModel;","export default \"<fieldset class=\\\"group\\\">\\n\\n    <legend><span>{{- i18n['resource.dataSource.aws.settings.title']}}</span></legend>\\n\\n    <ul class=\\\"list inputSet\\\">\\n        <li class=\\\"leaf\\\">\\n            <div class=\\\"control radio\\\">\\n                <label title=\\\"{{- i18n['resource.dataSource.aws.option.useDefault.title']}}\\\" class=\\\"wrap\\\">\\n                    {{- i18n['resource.dataSource.aws.option.useDefault']}}\\n                </label>\\n                <input type=\\\"radio\\\" value=\\\"{{- credentialsType.EC2 }}\\\" name=\\\"credentialsType\\\" {{ if(modelAttributes.credentialsType === credentialsType.EC2 && !disableAwsDefaults) { }}checked{{ } }} {{ if (disableAwsDefaults) { }}disabled=\\\"disabled\\\"{{ } }}>\\n            </div>\\n        </li>\\n        <li class=\\\"leaf\\\">\\n            <div class=\\\"control radio\\\">\\n                <label title=\\\"{{- i18n['resource.dataSource.aws.option.userDefined.title']}}\\\" class=\\\"wrap\\\">\\n                   {{= i18n['resource.dataSource.aws.option.userDefined'].replace('{0}',i18n['resource.dataSource.aws.option.url']) }}\\n                </label>\\n                <input type=\\\"radio\\\" value=\\\"{{- credentialsType.AWS }}\\\" name=\\\"credentialsType\\\" {{ if(modelAttributes.credentialsType === credentialsType.AWS ) { }}checked{{ } }}>\\n            </div>\\n        </li>\\n    </ul>\\n\\n    <fieldset class=\\\"group shortFields\\\" id=\\\"aws_settings\\\" {{ if (modelAttributes.credentialsType === credentialsType.EC2 && !disableAwsDefaults) { }}style=\\\"display: none;\\\"{{ } }}>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.aws.setting.accessKey.title']}}\\\" class=\\\"control input text \\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.accessKey']}}:</span>\\n            <input type=\\\"text\\\" value=\\\"{{- modelAttributes.accessKey }}\\\" name=\\\"accessKey\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\"></span>\\n        </label>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.aws.setting.secretKey.title']}}\\\" class=\\\"control input password \\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.secretKey']}}:</span>\\n            <input type=\\\"password\\\" autocomplete=\\\"off\\\" value=\\\"{{- modelAttributes.secretKey }}\\\" name=\\\"secretKey\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\"></span>\\n        </label>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.aws.setting.arn.title']}}\\\" class=\\\"control input text \\\">\\n            <span disabled=\\\"disabled\\\" class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.arn']}}:</span>\\n            <input type=\\\"text\\\" value=\\\"{{- modelAttributes.roleArn }}\\\" name=\\\"roleArn\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.aws.optional.arn']}}</span>\\n        </label>\\n\\n    </fieldset>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group\\\">\\n\\n    <legend><span>{{- i18n['resource.dataSource.aws.tree']}}</span></legend>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.aws.setting.region.title']}}\\\" class=\\\"control select \\\" style=\\\"display: inline-block; margin-right: 6px; margin-top: 6px; width: 350px;\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.region']}}:</span>\\n        <select class=\\\"fnormal\\\" name=\\\"region\\\">\\n            {{ _.each(awsRegions, function(region) { }}\\n            <option value=\\\"{{- region }}\\\" {{ if (region === modelAttributes.region) { }}selected=\\\"selected\\\"{{ } }}>{{- i18n[region] || region }}</option>\\n            {{ }); }}\\n        </select>\\n        <span class=\\\"message warning\\\"></span>\\n    </label>\\n\\n    <button class=\\\"button action up\\\" id=\\\"findAwsDataSources\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.updateTree']}}<span class=\\\"icon\\\"></span></span>\\n    </button>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group\\\">\\n\\n    <div class=\\\"control groupBox\\\" style=\\\"height: 150px; margin: 0; width: 538px;\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"header\\\">\\n                <div class=\\\"title\\\"></div>\\n            </div>\\n            <div class=\\\"body\\\" style=\\\"height: 137px; overflow: auto; padding: 6px;\\\">\\n                <ul class=\\\"list collapsible folders hideRoot\\\" id=\\\"awsDataSourceTree\\\" style=\\\"position: relative; height: 137px; overflow: auto; padding: 6px;\\\"></ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group shortFields\\\">\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.username']}}\\\" class=\\\"control input text \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.username']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.username }}\\\" name=\\\"username\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.password']}}\\\" class=\\\"control input password \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.password']}}:</span>\\n        <input type=\\\"password\\\" value=\\\"{{- modelAttributes.password }}\\\" name=\\\"password\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.aws.database.name.title']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.database.name']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.dbName }}\\\" name=\\\"dbName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group mediumFields\\\">\\n\\n    <label title=\\\"{{- i18n['resource.analysisConnection.driver']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.driver']}} ({{- i18n['required.field']}}):</span>\\n        <input class=\\\"control inline\\\" type=\\\"text\\\" value=\\\"{{- modelAttributes.driverClass }}\\\" name=\\\"driverClass\\\">\\n        {{ if (driverUploadEnabled) { }}\\n        <button class=\\\"button action up\\\" id=\\\"driverUploadButton\\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.upload.addDriverButton']}}</span>\\n        </button>\\n        {{ } }}\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.jdbc.hint1']}}</span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.analysisConnection.requiredURL']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.url']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.connectionUrl }}\\\" name=\\\"connectionUrl\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.jdbc.hint2']}}</span>\\n    </label>\\n\\n</fieldset>\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport AlertDialog from 'js-sdk/src/common/component/dialog/AlertDialog';\nimport JdbcDataSourceView from '../view/JdbcDataSourceView';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport AwsDataSourceModel from '../model/AwsDataSourceModel';\nimport UploadJdbcDriverDialog from '../view/dialog/UploadJdbcDriverDialog';\nimport dynamicTree from '../../dynamicTree/dynamicTree.utils';\nimport buttonManager from '../../core/core.events.bis';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport awsSpecificTemplate from '../template/awsSpecificTemplate.htm';\nimport awsSettings from '../../settings/awsSettings.settings';\nimport settingsUtility from '../util/settingsUtility';\n\nexport default JdbcDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.aws.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.aws.page.title.edit',\n    modelConstructor: AwsDataSourceModel,\n    events: function () {\n        var events = {};\n        _.extend(events, JdbcDataSourceView.prototype.events);\n        events['change input[name=\\'credentialsType\\']'] = 'changeCredentialsType';\n        events['click #findAwsDataSources'] = 'refreshAwsDataSourceTree';\n        return events;\n    },\n    initialize: function (options) {\n        BaseDataSourceView.prototype.initialize.apply(this, arguments);\n        this.deepDefaults = settingsUtility.deepDefaults(options, { awsSettings: awsSettings });\n        this.listenTo(this.model, 'change:credentialsType', this.onCredentialsTypeChange);\n        this.listenTo(this.model, 'change:driverClass', this.changeUploadDriverButtonState);\n        this.listenTo(this.model, 'change', this.updateInput);\n        this.listenTo(this.model.drivers, 'change add', this.recheckDriver);\n    },\n    changeCredentialsType: function () {\n        var value = this.$('input[name=\\'credentialsType\\']:checked').val();\n        this.model.set('credentialsType', value);\n    },\n    recheckDriver: function () {\n        this.model.validate({ driverClass: this.model.get('driverClass') });\n        this.changeUploadDriverButtonState();\n    },\n    changeUploadDriverButtonState: function () {\n        var $driverUploadButton = this.$('#driverUploadButton');\n        if (this.model.get('driverClass') === '') {\n            buttonManager.disable($driverUploadButton[0]);\n        } else {\n            buttonManager.enable($driverUploadButton[0]);\n            var driver = this.model.drivers.getDriverByClass(this.model.get('driverClass'));\n            $driverUploadButton.find('.wrap').text(i18n[!driver || !driver.get('available') ? 'resource.dataSource.jdbc.upload.addDriverButton' : 'resource.dataSource.jdbc.upload.editDriverButton']);\n        }\n    },\n    initDriverUploadDialog: function () {\n        var self = this, driver = this.model.drivers.getDriverByClass(this.model.get('driverClass'));\n        this.driverUploadDialog = new UploadJdbcDriverDialog({\n            driverAvailable: !(!driver || !driver.get('available')),\n            driverClass: this.model.get('driverClass')\n        });\n        this.driverUploadDialog.on('driverUpload', function (availableDriver) {\n            self.model.drivers.markDriverAsAvailable(availableDriver.jdbcDriverClass);\n            _.defer(_.bind(self.model.validate, self.model));\n        });\n    },\n    updateInput: function () {\n        var changedAttributes = _.keys(this.model.changedAttributes()), inputsToUpdate = [\n                'accessKey',\n                'secretKey',\n                'roleArn',\n                'connectionUrl',\n                'driverClass',\n                'dbName'\n            ], self = this;\n        _.each(_.intersection(changedAttributes, inputsToUpdate), function (attr) {\n            var newValue = self.model.get(attr), currValue = self.$('[name=\\'' + attr + '\\']').val();\n            if (currValue !== newValue) {\n                self.$('[name=\\'' + attr + '\\']').val(newValue);\n            }\n        });\n    },\n    onCredentialsTypeChange: function () {\n        var ec2CredentialsSelected = this.model.get('credentialsType') === AwsDataSourceModel.credentialsType.EC2;\n        this.$('#aws_settings')[ec2CredentialsSelected ? 'hide' : 'show']();\n        if (ec2CredentialsSelected) {\n            this.showAwsDsTree(this.model.getFullDbTreePath());\n        }\n    },\n    refreshAwsDataSourceTree: function (e) {\n        e.preventDefault();\n        this.showAwsDsTree('/');\n    },\n    render: function () {\n        this.$el.empty();\n        this.renderTimezoneSection();\n        this.renderAwsSpecificSection();\n        this.renderTestConnectionSection();\n        this.initDataSourceTree();    // Do not try to load AWS Tree if we are creating DS in non-AWS environment without properly set credentials\n        // Do not try to load AWS Tree if we are creating DS in non-AWS environment without properly set credentials\n        if (this.options.isEditMode || this.model.get('credentialsType') === AwsDataSourceModel.credentialsType.EC2) {\n            this.showAwsDsTree(this.model.getFullDbTreePath());\n        }\n        return this;\n    },\n    showAwsDsTree: function (path) {\n        this.model.validate({\n            accessKey: this.model.get('accessKey'),\n            secretKey: this.model.get('secretKey')\n        });\n        if (this.model.isValid('secretKey') && this.model.isValid('accessKey')) {\n            this.awsDataSourceTree.showTreePrefetchNodes(path || '/');\n        }\n    },\n    templateData: function () {\n        var data = JdbcDataSourceView.prototype.templateData.apply(this, arguments);\n        _.extend(data, {\n            credentialsType: AwsDataSourceModel.credentialsType,\n            awsRegions: this.deepDefaults.awsSettings.awsRegions,\n            disableAwsDefaults: !(this.deepDefaults.awsSettings.isEc2Instance && this.deepDefaults.awsSettings.hasSecurityCredentials) || this.deepDefaults.awsSettings.suppressEc2CredentialsWarnings\n        });\n        return data;\n    },\n    renderAwsSpecificSection: function () {\n        this.$el.append(_.template(awsSpecificTemplate, this.templateData()));\n        this.changeUploadDriverButtonState();\n    },\n    initDataSourceTree: function () {\n        var isEdit = this.options.isEditMode, self = this, treeOptions = {\n            hideLoader: true,\n            bShowRoot: false,\n            treeId: 'awsDataSourceTree',\n            providerId: 'awsDataSourceTreeDataProvider',\n            selectLeavesOnly: true,\n            additionalParams: function () {\n                return {\n                    arn: self.model.get('roleArn'),\n                    awsAccessKey: self.model.get('accessKey'),\n                    awsSecretKey: self.model.get('secretKey'),\n                    region: self.model.get('region'),\n                    datasourceUri: self.model.get('uri')\n                };\n            }\n        };\n        this.awsDataSourceTree = dynamicTree.createRepositoryTree('awsDataSourceTree', treeOptions);\n        this.awsDataSourceTree.httpErrorHandler = function (ajaxAgent) {\n            // some requests came with 500 error code, some with 200, so let's just check error test\n            var alertDialog, error = false, customTitle=false;\n            if (ajaxAgent.responseText.indexOf('AWS Access Key is invalid') !== -1 || ajaxAgent.responseText.indexOf('The security token included in the request is invalid') !== -1) {\n                error = i18n['error.aws.key.is.invalid'];\n            }\n            if (error === false && (ajaxAgent.responseText.indexOf('AWS Secret Key is invalid') !== -1 || ajaxAgent.responseText.indexOf('The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method') !== -1)) {\n                error = i18n['error.aws.secret.key.is.invalid'];\n            }\n            if (error === false && ajaxAgent.responseText.indexOf('is not authorized to perform') !== -1) {\n                error = i18n['error.aws.arn.is.invalid'];\n            }\n            if (error === false && ajaxAgent.responseText.indexOf('The security token included in the request is invalid') !== -1) {\n                error = i18n['error.security.token.is.invalid'];\n            }\n\n            if (error === false && ajaxAgent.responseText.indexOf('action execution attributes') !== -1) {\n                error = i18n['error.aws.ec2.credentials.unavailable'];\n                customTitle=true;\n            }\n\n            if (error) {\n                if(customTitle){\n                    alertDialog = new AlertDialog({\n                        modal: true,\n                        title: i18n['error.aws.ec2.title']\n                    });\n                } else {\n                    alertDialog = new AlertDialog({\n                        modal: true\n                    });\n                }\n                alertDialog.setMessage(error);\n                alertDialog.open(); // return 'true' means don't let the parent's handler to handle this error\n                // return 'true' means don't let the parent's handler to handle this error\n                return true;\n            }\n            return false;\n        };    // Initialize tree events: auto-fill connection setting from tree leaf\n        // Initialize tree events: auto-fill connection setting from tree leaf\n        this.awsDataSourceTree.observe('leaf:selected', function (ev) {\n            var node = ev.memo.node.param;\n            if (node.type === 'awsDb' && !isEdit) {\n                var extra = node.extra, uriComponents = extra.dbUri.split('/');\n                self.model.set({\n                    connectionUrlTemplate: extra.jdbcTemplate,\n                    driverClass: extra.jdbcDriverClass,\n                    dbName: extra.dBName,\n                    dbHost: extra.dnsAddress,\n                    dbPort: extra.dbPort,\n                    sName: extra.dBName,\n                    dbService: uriComponents[1],\n                    dbInstanceIdentifier: uriComponents[2]\n                });\n                self.model.validate({ driverClass: self.model.get('driverClass') });\n            }\n        });\n        this.awsDataSourceTree.observe('tree:loaded', function () {\n            if (self.model.getFullDbTreePath()) {\n                self.awsDataSourceTree.openAndSelectNode(self.model.getFullDbTreePath(), function () {\n                    isEdit = false;\n                });\n            }\n        });\n    },\n    remove: function () {\n        this.awsDataSourceTree && this.awsDataSourceTree.stopObserving();\n        JdbcDataSourceView.prototype.remove.apply(this, arguments);\n    }\n});\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport JdbcDataSourceModel from './JdbcDataSourceModel';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport JdbcDriverCollection from '../collection/JdbcDriverCollection';\nimport connectionTypes from '../enum/connectionTypes';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport jasperserverConfig from '../../i18n/jasperserver_config.properties';\n\nvar AzureSqlDataSourceModel = JdbcDataSourceModel.extend({\n    otherDriverIsPresent: false,\n    type: repositoryResourceTypes.AZURE_SQL_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, JdbcDataSourceModel.prototype.defaults, {\n            subscriptionId: '',\n            keyStorePassword: '',\n            keyStoreUri: '',\n            serverName: '',\n            dbName: '',\n            selectedDriverClass: '',\n            useMicrosoftDriver: false,\n            microsoftDriverAvailable: false,\n            connectionType: connectionTypes.AZURE_SQL\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, JdbcDataSourceModel.prototype.validation, {\n            subscriptionId: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.azureSqlDataSource.subscriptionId']\n            }],\n            keyStorePassword: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.azureSqlDataSource.keyStorePassword']\n            }],\n            keyStoreUri: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.azureSqlDataSource.keyStoreUri']\n            }],\n            serverName: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.azureSqlDataSource.serverName']\n            }],\n            dbName: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.dbNameIsEmpty']\n            }],\n            username: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.username']\n            }]\n        });\n        return validation;\n    }(),\n    initialize: function (attributes, options) {\n        BaseDataSourceModel.prototype.initialize.apply(this, arguments);\n        if (!this.isNew()) {\n            // use password substitution\n            this.set('password', jasperserverConfig['input.password.substitution']);\n            this.set('keyStorePassword', jasperserverConfig['input.password.substitution']);\n        }\n        this.initialization = $.Deferred();\n        this.drivers = new JdbcDriverCollection([], this.options);\n        var self = this;\n        this.drivers.fetch({ reset: true }).done(function () {\n            if (self.isNew()) {\n                // by default use sqlserver driver (tibco/progress driver)\n                self.set('selectedDriverClass', self.drivers.getDriverByName('sqlserver').get('jdbcDriverClass'));\n            } else {\n                self.set('selectedDriverClass', self.get('driverClass'));\n            }\n            var sqlServerStandardDriver = self.drivers.getDriverByName('sqlserver_standard');\n            if (sqlServerStandardDriver != null) {\n                self.set('microsoftDriverAvailable', sqlServerStandardDriver.get('available'));\n                self.set('useMicrosoftDriver', self.get('selectedDriverClass') === sqlServerStandardDriver.get('jdbcDriverClass'));\n            }\n            self.initialization.resolve();\n        });\n        this.on('change:dbName change:serverName change:connectionUrlTemplate change:useMicrosoftDriver', this.updateConnectionUrl);\n        this.on('change:useMicrosoftDriver', this.updateDriverClass);\n    },\n    updateConnectionUrl: function () {\n        if (!this.get('connectionUrlTemplate')) {\n            return;\n        }\n        var valuesMap = this.pick([\n            'dbName',\n            'serverName',\n            'dbPort'\n        ]);\n        valuesMap['dbPort'] = 1433;\n        var sqlServerStandardDriver = this.drivers.getDriverByName('sqlserver_standard');\n        var template = this.get('connectionUrlTemplate');\n        if (this.get('useMicrosoftDriver') && sqlServerStandardDriver != null) {\n            valuesMap['serverName'] += '.database.windows.net';\n            template = sqlServerStandardDriver.get('jdbcUrl');\n        }    // dbHost is a synonym for serverName\n        // dbHost is a synonym for serverName\n        valuesMap['dbHost'] = valuesMap['serverName'];\n        var connectionUrl = this.replaceConnectionUrlTemplatePlaceholdersWithValues(template, valuesMap);\n        this.set('connectionUrl', connectionUrl);\n    },\n    updateDriverClass: function () {\n        var sqlServerStandardDriver = this.drivers.getDriverByName('sqlserver_standard');\n        var driverName = this.get('useMicrosoftDriver') && sqlServerStandardDriver != null ? 'sqlserver_standard' : 'sqlserver';\n        var driverClassName = this.drivers.getDriverByName(driverName).get('jdbcDriverClass');\n        this.set('selectedDriverClass', driverClassName);\n        this.set('driverClass', driverClassName);\n    },\n    toJSON: function () {\n        var data = JdbcDataSourceModel.prototype.toJSON.apply(this, arguments);\n        if (this.options.isEditMode && data.keyStorePassword === jasperserverConfig['input.password.substitution']) {\n            data.keyStorePassword = null;\n        }\n        return data;\n    },\n    getFullDbTreePath: function () {\n        return this.get('serverName') && this.get('dbName') ? '/' + this.get('serverName') + '/' + this.get('dbName') : null;\n    }\n});\nexport default AzureSqlDataSourceModel;","export default \"<fieldset class=\\\"group\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n    <legend><span>{{- i18n['resource.dataSource.azureSql.settings.title']}}</span></legend>\\n\\n    <fieldset class=\\\"group shortFields\\\" id=\\\"aws_settings\\\">\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.azureSql.setting.subscriptionId.title']}}\\\" class=\\\"control input text \\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.setting.subscriptionId']}} ({{- i18n['required.field']}}):</span>\\n            <input type=\\\"text\\\" value=\\\"{{- modelAttributes.subscriptionId }}\\\" name=\\\"subscriptionId\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\"></span>\\n        </label>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.azureSql.setting.keyStoreUri.title']}}\\\" class=\\\"control input text\\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.setting.keyStoreUri']}} ({{- i18n['required.field']}}):</span>\\n            <input type=\\\"text\\\" value=\\\"{{- modelAttributes.keyStoreUri }}\\\" name=\\\"keyStoreUri\\\">\\n            <button class=\\\"button action up\\\" type=\\\"button\\\" name=\\\"repositoryBrowserButton\\\">\\n                <span class=\\\"wrap\\\">{{- i18n['dialog.file.browse'] }}...<span class=\\\"icon\\\"></span></span>\\n            </button>\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.azureSql.optional.keyStoreUri']}}</span>\\n        </label>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.azureSql.setting.keyStorePassword.title']}}\\\" class=\\\"control input password \\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.setting.keyStorePassword']}} ({{- i18n['required.field']}}):</span>\\n            <input type=\\\"password\\\" autocomplete=\\\"off\\\" value=\\\"{{- modelAttributes.keyStorePassword }}\\\" name=\\\"keyStorePassword\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\"></span>\\n        </label>\\n\\n    </fieldset>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group\\\">\\n\\n    <legend><span>{{- i18n['resource.dataSource.azureSql.tree']}}</span></legend>\\n\\n    <button class=\\\"button action up\\\" id=\\\"updateDatabaseTree\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.updateTree']}}<span class=\\\"icon\\\"></span></span>\\n    </button>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group\\\">\\n\\n    <div class=\\\"control groupBox\\\" style=\\\"height: 150px; margin: 0; width: 538px;\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"header\\\">\\n                <div class=\\\"title\\\"></div>\\n            </div>\\n            <div class=\\\"body\\\" style=\\\"height: 137px; overflow: auto; padding: 6px;\\\">\\n                <ul class=\\\"list collapsible folders hideRoot\\\" id=\\\"azureSqlDataSourceTree\\\" style=\\\"position: relative; height: 137px; overflow: auto; padding: 6px;\\\"></ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group shortFields\\\">\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.azureSql.server.name.title']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.server.name']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.serverName }}\\\" name=\\\"serverName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.azureSql.database.name.title']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.database.name']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.dbName }}\\\" name=\\\"dbName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.username']}}\\\" class=\\\"control input text \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.username']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.username }}\\\" name=\\\"username\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.azureSql.database.username.hint']}}</span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.password']}}\\\" class=\\\"control input password \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.password']}}:</span>\\n        <input type=\\\"password\\\" value=\\\"{{- modelAttributes.password }}\\\" name=\\\"password\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.azureSql.useMicrosoftDriver']}}\\\" class=\\\"control input checkBox\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.useMicrosoftDriver']}}\\n            {{ if (!modelAttributes.microsoftDriverAvailable) { }}\\n                ({{- i18n[\\\"resource.dataSource.azureSql.microsoftDriverMissing\\\"] }})\\n            {{ } }}\\n            </span>\\n        <input type=\\\"checkbox\\\" name=\\\"useMicrosoftDriver\\\" value=\\\"{{- modelAttributes.useMicrosoftDriver }}\\\"\\n            {{ if (modelAttributes.useMicrosoftDriver) { }}checked=\\\"checked\\\"{{ } }} \\n            {{ if (!modelAttributes.microsoftDriverAvailable) { }}disabled=\\\"disabled\\\"{{ } }}>\\n    </label>\\n\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group mediumFields\\\">\\n\\n    <label title=\\\"{{- i18n['resource.analysisConnection.requiredURL']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.url']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.connectionUrl }}\\\" name=\\\"connectionUrl\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.azureSql.connectionUrl.hint']}}</span>\\n    </label>\\n\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport AlertDialog from 'js-sdk/src/common/component/dialog/AlertDialog';\nimport JdbcDataSourceView from '../view/JdbcDataSourceView';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport AzureSqlDataSourceModel from '../model/AzureSqlDataSourceModel';\nimport dynamicTree from '../../dynamicTree/dynamicTree.utils';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport jsExceptionsMessages from '../../i18n/jsexceptions_messages.properties';\nimport azureSqlSpecificTemplate from '../template/azureSqlSpecificTemplate.htm';\nimport selectDialogTemplate from 'js-sdk/src/common/templates/components.pickers.htm';\nimport resourceLocator from '../../resource/resource.locate';\n\nexport default JdbcDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.aws.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.aws.page.title.edit',\n    modelConstructor: AzureSqlDataSourceModel,\n    events: function () {\n        var events = {};\n        _.extend(events, JdbcDataSourceView.prototype.events);\n        events['click #updateDatabaseTree'] = 'updateDatabaseTree';\n        return events;\n    },\n    initialize: function (options) {\n        JdbcDataSourceView.prototype.initialize.apply(this, arguments);\n        this.listenTo(this.model, 'change', this.onModelChange);\n    },\n    onModelChange: function () {\n        var changedAttributes = _.keys(this.model.changedAttributes()), inputsToUpdate = [\n                'serverName',\n                'dbName',\n                'connectionUrl'\n            ], self = this;\n        _.each(_.intersection(changedAttributes, inputsToUpdate), function (attr) {\n            self.$('[name=\\'' + attr + '\\']').val(self.model.get(attr));\n        });\n    },\n    updateDatabaseTree: function (e) {\n        e.preventDefault();\n        this.showAzureSqlDsTree('/');\n    },\n    render: function () {\n        this.$el.empty();\n        this.renderTimezoneSection();\n        this.renderAzureSqlSpecificSection();\n        this.renderTestConnectionSection();\n        this.initDataSourceTree();    // Do not try to load Azure SQL DB Tree if we are creating a new DS\n        // Do not try to load Azure SQL DB Tree if we are creating a new DS\n        if (this.options.isEditMode) {\n            this.showAzureSqlDsTree(this.model.getFullDbTreePath());\n        }\n        return this;\n    },\n    showAzureSqlDsTree: function (path) {\n        this.model.validate({\n            subscriptionId: this.model.get('subscriptionId'),\n            keyStorePassword: this.model.get('keyStorePassword'),\n            keyStoreUri: this.model.get('keyStoreUri')\n        });\n        if (this.model.isValid('keyStorePassword') && this.model.isValid('subscriptionId')) {\n            this.azureSqlDataSourceTree.showTreePrefetchNodes(path || '/');\n        }\n    },\n    renderAzureSqlSpecificSection: function () {\n        this.$el.append(_.template(azureSqlSpecificTemplate, this.templateData()));\n        this.browseButton = resourceLocator.initialize({\n            i18n: i18n,\n            template: selectDialogTemplate,\n            resourceInput: this.$el.find('[name=keyStoreUri]')[0],\n            browseButton: this.$el.find('[name=repositoryBrowserButton]')[0],\n            providerId: 'fileResourceBaseTreeDataProvider',\n            dialogTitle: i18n['resource.Add.Files.Title'],\n            selectLeavesOnly: true,\n            onChange: _.bind(function (value) {\n                this.model.set('keyStoreUri', value);\n                this.model.validate({ 'keyStoreUri': value });\n            }, this)\n        });\n    },\n    initDataSourceTree: function () {\n        var isEdit = this.options.isEditMode, self = this, treeOptions = {\n            hideLoader: true,\n            bShowRoot: false,\n            treeId: 'azureSqlDataSourceTree',\n            providerId: 'azureSqlDataSourceTreeDataProvider',\n            selectLeavesOnly: true,\n            additionalParams: function () {\n                return {\n                    subscriptionId: self.model.get('subscriptionId'),\n                    keyStorePassword: self.model.get('keyStorePassword'),\n                    keyStoreUri: self.model.get('keyStoreUri'),\n                    datasourceUri: self.model.get('uri')\n                };\n            }\n        };\n        this.azureSqlDataSourceTree = dynamicTree.createRepositoryTree('azureSqlDataSourceTree', treeOptions);\n        this.azureSqlDataSourceTree.httpErrorHandler = function (ajaxAgent) {\n            // some requests came with 500 error code, some with 200, so let's just check error test\n            var alertDialog, error = false;\n            var messageCodes = [\n                'azure.exception.datasource.recovery.public.ip.not.provided',\n                'azure.exception.datasource.recovery.firewall.rule.name.not.provided',\n                'azure.exception.datasource.recovery.server.name.not.provided',\n                'azure.exception.datasource.recovery.subscription.id.not.provided',\n                'azure.exception.datasource.recovery.key.store.file.not.provided',\n                'azure.exception.datasource.recovery.key.store.type.not.provided',\n                'azure.exception.datasource.key.error',\n                'azure.exception.datasource.auth.error',\n                'azure.exception.datasource.cannot.retrieve.database.list',\n                'azure.exception.datasource.cannot.ensure.firewall.rule',\n                'azure.exception.datasource.cannot.recover.datasource'\n            ];\n            var i;\n            for (i = 0; i < messageCodes.length; i++) {\n                var messageCode = messageCodes[i];\n                if (ajaxAgent.responseText.indexOf(messageCode) !== -1) {\n                    error = jsExceptionsMessages[messageCode];\n                    break;\n                }\n            }\n            if (error) {\n                alertDialog = new AlertDialog({ modal: true });\n                alertDialog.setMessage(error);\n                alertDialog.open();    // return 'true' means don't let the parent's handler to handle this error\n                // return 'true' means don't let the parent's handler to handle this error\n                return true;\n            }\n            return false;\n        };    // Initialize tree events: auto-fill connection setting from tree leaf\n        // Initialize tree events: auto-fill connection setting from tree leaf\n        this.azureSqlDataSourceTree.observe('leaf:selected', function (ev) {\n            var node = ev.memo.node.param;\n            if (node.type === 'leaf' && !isEdit) {\n                var extra = node.extra;\n                self.model.set({\n                    serverName: extra.serverName,\n                    dbName: extra.dBName,\n                    connectionUrlTemplate: extra.jdbcTemplate,\n                    driverClass: extra.jdbcDriver\n                });\n            }\n        });\n        this.azureSqlDataSourceTree.observe('tree:loaded', function () {\n            if (self.model.getFullDbTreePath()) {\n                self.azureSqlDataSourceTree.openAndSelectNode(self.model.getFullDbTreePath(), function () {\n                    isEdit = false;\n                    var selectedNode = self.azureSqlDataSourceTree.getSelectedNode();\n                    if (selectedNode && selectedNode.param && selectedNode.param.extra) {\n                        // add required fields to a model from selected node.\n                        // it's required for JDBC URL auto update\n                        self.model.set({\n                            connectionUrlTemplate: selectedNode.param.extra.jdbcTemplate,\n                            dbHost: selectedNode.param.extra.dnsAddress,\n                            dbPort: selectedNode.param.extra.dbPort\n                        });\n                    }\n                });\n            }\n        });\n    },\n    remove: function () {\n        this.azureSqlDataSourceTree && this.azureSqlDataSourceTree.stopObserving();\n        JdbcDataSourceView.prototype.remove.apply(this, arguments);\n    }\n});\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nexport default Backbone.Model.extend({\n    defaults: {\n        id: undefined,\n        uri: '',\n        name: '',\n        readOnly: false\n    },\n    idAttribute: 'uri',\n    validation: {\n        id: [\n            {\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.name']\n            },\n            {\n                maxLength: ResourceModel.settings.NAME_MAX_LENGTH,\n                msg: i18n['ReportDataSourceValidator.error.too.long.reportDataSource.name']\n            },\n            {\n                startsWithLetter: true,\n                msg: i18n['ReportDataSourceValidator.error.invalid.chars.shouldStartWithLetter']\n            },\n            {\n                containsOnlyWordCharacters: true,\n                msg: i18n['ReportDataSourceValidator.error.invalid.chars.wordCharsOnly']\n            }\n        ]\n    },\n    initialize: function (attributes) {\n        this.set('name', /.*\\/(.+)$/.exec(attributes.uri)[1]);\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport SubDataSourceModel from '../model/SubDataSourceModel';\n\nexport default Backbone.Collection.extend({\n    model: SubDataSourceModel,\n    hasNonReadOnlyItems: function () {\n        return this.some(function (model) {\n            return !model.get('readOnly');\n        });\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport SubDataSourceCollection from '../collection/SubDataSourceCollection';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nexport default BaseDataSourceModel.extend({\n    type: repositoryResourceTypes.VIRTUAL_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, BaseDataSourceModel.prototype.defaults, { subDataSources: [] });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, BaseDataSourceModel.prototype.validation, {\n            subDataSources: [\n                {\n                    arrayMinLength: 1,\n                    msg: i18n['ReportDataSourceValidator.error.sub.datasources.needed']\n                },\n                {\n                    fn: function (value, attr, computedState) {\n                        var subDataSourceIds = _.map(value, function (subDataSource) {\n                                return subDataSource.id.toLowerCase();\n                            }), countMap = {}, duplicateIds = [];\n                        _.each(subDataSourceIds, function (id) {\n                            if (id in countMap) {\n                                countMap[id]++;\n                            } else {\n                                countMap[id] = 1;\n                            }\n                        });\n                        for (var id in countMap) {\n                            if (countMap[id] > 1) {\n                                duplicateIds.push(id);\n                            }\n                        }\n                        if (duplicateIds.length > 0) {\n                            return i18n['ReportDataSourceValidator.error.sub.datasources.id.duplicates'].replace('{0}', duplicateIds.join(', '));\n                        }\n                    }\n                },\n                {\n                    fn: function () {\n                        var res = null;\n                        for (var i = 0; i < this.subDataSources.models.length; i++) {\n                            if (!this.subDataSources.models[i].isValid(true)) {\n                                res = true;\n                            }\n                        }\n                        return res;\n                    }\n                }\n            ]\n        });\n        return validation;\n    }(),\n    initialize: function (attributes, options) {\n        BaseDataSourceModel.prototype.initialize.apply(this, arguments);\n        this.subDataSources = new SubDataSourceCollection(this.get('subDataSources'));\n        this.listenTo(this.subDataSources, 'change reset', this.updateSubDataSourcesArray);\n        if (options.dependentResources && options.dependentResources.length > 0) {\n            this.subDataSources.forEach(function (model) {\n                model.set('readOnly', true);\n            });\n        }\n    },\n    updateSubDataSourcesArray: function () {\n        this.set('subDataSources', this.subDataSources.toJSON());\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @version: $Id$\n */\nimport dialogs from './components.dialogs';\nimport _ from 'underscore';\nimport layoutModule from '../core/core.layout';\nimport {dynamicList} from './list.base';\nimport xssUtil from 'js-sdk/src/common/util/xssUtil';\nimport jQuery from 'jquery';\n\ndialogs.dependentResources = {\n    dependenciesPanel: null,\n\n    show: function(resources, actionsMap, options) {\n        this.dependenciesPanel = jQuery(\"#dependencies\");\n        this._$title = this.dependenciesPanel.find(\".content .header .title\");\n        if(options.dialogTitle) {\n            this._titleBackup = this._$title.html();\n            this._$title.html(options.dialogTitle);\n        }\n        dialogs.popup.show(this.dependenciesPanel[0]);\n\n        this._changeMessage(options);\n        this._switchButtons(options);\n        var list =\n            this._initList(resources);\n\n        ///////////////////////////////////////////////////////////\n        // Observe buttons\n        //////////////////////////////////////////////////////////\n        this.dependenciesPanel.on(\"click\", function(event){\n            var buttonId = jQuery(event.target).closest('button').attr('id');\n            var action = actionsMap && actionsMap[buttonId];\n            if (_.include([\"dependenciesBtnSave\", \"dependenciesBtnSaveAs\", \"dependenciesBtnOk\", \"dependenciesBtnCancel\"], buttonId)) {\n                dialogs.dependentResources.hide();\n                list.setItems([]);\n\n                event.stopPropagation();\n\n                action && action();\n            }\n        });\n        //        designerBase.enableSelection();\n    },\n\n    hide: function () {\n        if (this.dependenciesPanel) {\n            this.dependenciesPanel.off(\"click\");\n            dialogs.popup.hide(this.dependenciesPanel[0]);\n            this.dependenciesPanel = null;\n        }\n        if (this._titleBackup && this._$title) {\n            this._$title.html(this._titleBackup);\n            this._titleBackup = null;\n        }\n    },\n\n    /**\n     * Show message\n     *\n     * @param canSave\n     * @private\n     */\n    _changeMessage: function(options) {\n        jQuery(\"#topMessage\").html(options.topMessage);\n        jQuery(\"#bottomMessage\").html(options.bottomMessage);\n    },\n\n    _initList: function(resources) {\n        var list = new dynamicList.List(\"dependenciesList\", {\n            listTemplateDomId: \"tabular_oneColumn\",\n            itemTemplateDomId: \"tabular_oneColumn:leaf\"\n        });\n\n        var items = [];\n        if(resources) {\n            items = resources.collect(function(resource) {\n                var resourceItem = new dynamicList.ListItem({\n                    cssClassName: layoutModule.LEAF_CLASS,\n                    value: resource\n                });\n\n                resourceItem.processTemplate = function(element) {\n                    var uriElement = jQuery(element).find(\".uri\");\n                    var uri;\n                    if(typeof this.getValue() == \"string\") {\n                        uri = this.getValue();\n                    } else if(this.getValue().uristring) {\n                        uri = this.getValue().uristring;\n                    } else {\n                        uri = this.getValue().URIString;\n                    }\n\n                    uriElement.html(xssUtil.hardEscape(uri));\n                    return element;\n                };\n                return resourceItem;\n            });\n        }\n\n        list.setItems(items);\n        list.show();\n\n        return list;\n    },\n\n    _switchButtons: function(options) {\n        var $buttonElements = {\n            save:  jQuery(\"#dependenciesBtnSave\"),\n            saveAs: jQuery(\"#dependenciesBtnSaveAs\"),\n            ok: jQuery(\"#dependenciesBtnOk\"),\n            cancel: jQuery(\"#dependenciesBtnCancel\")\n        };\n\n        var buttons;\n        if(options.buttons) {\n            buttons = options.buttons;\n        } else {\n            if(options.okOnly) {\n                buttons = [\"ok\"];\n            } else if (options.canSave) {\n                buttons = [\"save\", \"saveAs\", \"cancel\"];\n            } else {\n                buttons = [\"ok\", \"cancel\"];\n            }\n        }\n\n        _.each($buttonElements, function($button, key) {\n            if(buttons.indexOf(key) < 0 ) {\n                $button.addClass(\"hidden\");\n            } else {\n                $button.removeClass(\"hidden\");\n            }\n        });\n\n    }\n};\n\nexport default dialogs.dependentResources;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport $ from 'jquery';\nimport layoutModule from '../../core/core.layout';\nimport {dynamicList} from '../../components/list.base';\nimport subDataSourceItemTemplate from '../template/subDataSourceItemTemplate.htm';\nimport Validation from 'js-sdk/src/common/extension/backboneValidationExtension';\n\nexport default Backbone.View.extend({\n    events: {\n        'keyup input[type=\\'text\\']': 'updateDataSourceId',\n        'change input[type=\\'text\\']': 'updateDataSourceId'\n    },\n    initialize: function (options) {\n        var templateData = this.model.toJSON();\n        this._listItem = new dynamicList.UnderscoreTemplatedListItem({\n            template: subDataSourceItemTemplate,\n            cssClassName: layoutModule.LEAF_CLASS,\n            value: templateData,\n            tooltipText: this.model.get('uri')\n        });\n        Validation.bind(this, {\n            valid: this.fieldIsValid,\n            invalid: this.fieldIsInvalid,\n            forceUpdate: true\n        });\n    },\n    updateDataSourceId: function (e) {\n        var $targetEl = this.$('input[type=\\'text\\']'), valueObj = {};\n        valueObj['id'] = $.trim($targetEl.val());\n        this.model.set(valueObj);\n        this.model.validate(valueObj);\n        this._listItem.setValue(this.model.toJSON());\n    },\n    getListItem: function () {\n        return this._listItem;\n    },\n    setRootElement: function () {\n        this.setElement(this._listItem._getElement());\n    },\n    fieldIsValid: function (view, attr, selector) {\n        var $parentEl = view.$('input[type=\\'text\\']').parent();\n        $parentEl.removeClass('error');\n        $parentEl.find('.validatorMessageContainer').removeClass('error');\n        $parentEl.find('.message.warning').text('');\n    },\n    fieldIsInvalid: function (view, attr, error, selector) {\n        var $parentEl = view.$('input[type=\\'text\\']').parent();\n        $parentEl.addClass('error');\n        $parentEl.find('.validatorMessageContainer').addClass('error');\n        $parentEl.find('.message.warning').text(error);\n    }\n});","export default \"<li class=\\\"leaf\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"wrap button {{ if (readOnly) { }}disabled{{ } }}\\\">\\n        <div class=\\\"column one\\\">\\n            <p class=\\\"dataSourceName\\\">{{- name }}</p>\\n        </div>\\n        <div class=\\\"column two\\\">\\n            <input type=\\\"text\\\" size=\\\"30\\\" class=\\\"dataSourceID\\\" value=\\\"{{- id }}\\\" {{ if (readOnly) { }}readonly=\\\"true\\\"{{ } }}>\\n            <div class=\\\"wrap validatorMessageContainer\\\">\\n                <span class=\\\"message warning\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n</li>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport {dynamicList} from '../../components/list.base';\nimport SubDataSourceItemView from '../view/SubDataSourceItemView';\nimport featureDetection from 'js-sdk/src/common/util/featureDetection';\nimport subDataSourcesListTemplate from '../template/subDataSourcesListTemplate.htm';\nimport {disableSelectionWithoutCursorStyle, enableSelection} from '../../util/utils.common';\n\nexport default Backbone.View.extend({\n    events: {\n        'blur input.dataSourceID': 'disableSelection',\n        'focus input.dataSourceID': 'enableSelection'\n    },\n    initialize: function (options) {\n        this.options = options;\n        this.subviews = [];\n        this._list = new dynamicList.UnderscoreTemplatedList('selectedSubDataSourcesList', {\n            template: subDataSourcesListTemplate,\n            dragPattern: '',\n            multiSelect: true,\n            selectOnMousedown: !featureDetection.supportsTouch\n        });\n        this._list.observe('item:unselected', _.bind(this._itemUnselected, this));\n        this._list.observe('item:selected', _.bind(this._itemSelected, this));\n        this.setElement('#selectedSubDataSourcesList', false);\n        this.listenTo(this.collection, 'reset', this.render);\n    },\n    disableSelection: function () {\n        disableSelectionWithoutCursorStyle(this._list._getElement());\n    },\n    enableSelection: function () {\n        enableSelection(this._list._getElement());\n    },\n    _itemUnselected: function (e) {\n        var view = this.getSubviewByListItem(e.memo.item), model = view ? view.model : null;\n        this.trigger('item:unselected', model);\n    },\n    _itemSelected: function (e) {\n        var view = this.getSubviewByListItem(e.memo.item), model = view ? view.model : null;\n        this.trigger('item:selected', model);\n    },\n    render: function (collection, options) {\n        this._list.resetSelected();\n        var modelsToAdd = [], modelsToRemove = [], previousModelUris = [], selectAfterAdd = false, currentModelUris = this.collection.map(function (model) {\n                return model.get('uri');\n            }), self = this;\n        if (options && options.previousModels) {\n            previousModelUris = _.map(options.previousModels, function (model) {\n                return model.get('uri');\n            });\n            _.each(options.previousModels, function (model) {\n                if (!_.include(currentModelUris, model.get('uri'))) {\n                    modelsToRemove.push(model);\n                }\n            });\n            selectAfterAdd = true;\n        }\n        this.collection.forEach(function (model) {\n            if (!_.include(previousModelUris, model.get('uri'))) {\n                modelsToAdd.push(model);\n            }\n        });\n        if (modelsToAdd.length) {\n            _.each(modelsToAdd, function (model) {\n                var view = new SubDataSourceItemView({ model: model });\n                self.subviews.push(view);\n                self._list.addItems([view.getListItem()]);\n                self._list.show();\n            });\n            this._list.show();\n            if (selectAfterAdd) {\n                var selectedViews = _.compact(_.map(modelsToAdd, _.bind(self.getSubviewByModel, self)));\n                _.each(selectedViews, function (view) {\n                    self._list.selectItem(view.getListItem(), true);\n                });\n            }\n            _.each(this.subviews, function (view) {\n                // ListItem._getElement() is pointing to correct element only after we added it to the List\n                // so here we wait for DOM of List to be updated and then set root el for subview\n                _.defer(_.bind(view.setRootElement, view));\n            });\n        }\n        if (modelsToRemove.length) {\n            _.each(modelsToRemove, function (model) {\n                self.removeSubview(model);\n            });\n            this._list.show();\n        }\n        return this;\n    },\n    getSubviewByModel: function (model) {\n        return _.find(this.subviews, function (view) {\n            return view.model === model;\n        });\n    },\n    getList: function () {\n        return this._list;\n    },\n    getListLength: function () {\n        return this._list._items.length;\n    },\n    getSelectedModels: function () {\n        var items = this._list.getSelectedItems(), subviews = _.compact(_.map(items, _.bind(this.getSubviewByListItem, this)));\n        return _.map(subviews, function (view) {\n            return view.model;\n        });\n    },\n    getSubviewByListItem: function (listItem) {\n        return _.find(this.subviews, function (view) {\n            return view.getListItem() === listItem;\n        });\n    },\n    removeSubview: function (model) {\n        var view = this.getSubviewByModel(model);\n        if (view) {\n            this._list.removeItems([view.getListItem()]);\n            view.remove();\n            this._list.show();\n        }\n    },\n    removeSubviews: function () {\n        var listItems = _.map(this.subviews, function (view) {\n            return view.getListItem();\n        });\n        this._list.removeItems(listItems);\n        _.invoke(this.subviews, 'remove');\n    },\n    remove: function () {\n        this.removeSubviews();\n        Backbone.View.prototype.remove.apply(this, arguments);\n    }\n});","export default \"<ul id=\\\"selectedDataSourcesTemplate\\\" class=\\\"list tabular twoColumn\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n</ul>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport VirtualDataSourceModel from '../model/VirtualDataSourceModel';\nimport SubDataSourceModel from '../model/SubDataSourceModel';\nimport dynamicTree from '../../dynamicTree/dynamicTree.utils';\nimport dependentResourcesDialog from '../../components/components.dependent.dialog';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport virtualSpecificTemplate from '../template/virtualSpecificTemplate.htm';\nimport dependenciesTemplate from '../template/dialog/dependenciesTemplate.htm';\nimport SubDataSourcesListView from '../view/SubDataSourcesListView';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.virtual.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.virtual.page.title.edit',\n    hasDependedResources: false,\n    // does this data source has depended resources, or not ?\n    modelConstructor: VirtualDataSourceModel,\n    events: {\n        'keyup input[type=\\'text\\'][class!=\\'dataSourceID\\'], textarea': 'updateModelProperty',\n        'change input[type=\\'text\\'][class!=\\'dataSourceID\\'], textarea, select': 'updateModelProperty',\n        'click [name=toRight]': 'chooseTreeNodes',\n        'click [name=toLeft]': 'removeSelectedSubDataSources',\n        'click [name=allToLeft]': 'removeAllSubDataSources'\n    },\n    initialize: function (options) {\n        this.dependentResources = options.dependentResources;\n        this._subDataSourcesHiddenNodes = {};\n        if (this.dependentResources && this.dependentResources.length > 0) {\n            this.hasDependedResources = true;\n        }\n        BaseDataSourceView.prototype.initialize.apply(this, arguments);\n        this.showDependentResources();\n        this.listenTo(this.model.subDataSources, 'reset', this.updateAllToLeftButtonState);\n    },\n    chooseTreeNodes: function (e) {\n        e.preventDefault();\n        this.$('[name=toRight]').attr('disabled', 'disabled').removeClass('over');\n        var nodes = this.subDataSourcesTree.selectedNodes, models = _.compact(_.map(nodes, function (node) {\n            return !node ? null : new SubDataSourceModel({\n                name: node.name,\n                id: node.param.id,\n                uri: node.param.uri,\n                readOnly: false\n            });\n        }));    // resetting the whole collection there instead of add, because we need a single \"reset\" event, signalizing\n        // that all models were added to collection instead of several \"add\" events for each new model\n        // resetting the whole collection there instead of add, because we need a single \"reset\" event, signalizing\n        // that all models were added to collection instead of several \"add\" events for each new model\n        this.model.subDataSources.reset(this.model.subDataSources.models.concat(models));\n        var nodeUris = _.map(nodes, function (node) {\n            return node.param.uri;\n        });\n        this._hideAvailableSubDataSources(nodeUris);\n    },\n    removeAllSubDataSources: function (e) {\n        e.preventDefault();\n        if (this.hasDependedResources) {\n            return;\n        }\n        this.subDataSourcesTree._deselectAllNodes();\n        var self = this;\n        this.model.subDataSources.forEach(function (model) {\n            self._unhideAvailableSubDataSources(model.get('uri'));\n        });\n        this.model.subDataSources.reset([]);\n        this.updateRightButtonState();\n    },\n    removeSelectedSubDataSources: function (e) {\n        e.preventDefault();\n        this.subDataSourcesTree._deselectAllNodes();\n        var selectedModels = this.selectedSubDataSourcesList.getSelectedModels(), self = this, newCollection = [];\n        _.each(selectedModels, function (model) {\n            self._unhideAvailableSubDataSources(model.get('uri'));\n        });\n        this.model.subDataSources.forEach(function (model) {\n            if (!_.include(selectedModels, model)) {\n                newCollection.push(model);\n            }\n        });\n        this.model.subDataSources.reset(newCollection);\n        this.updateRightButtonState();\n    },\n    updateAllToLeftButtonState: function () {\n        if (this.hasDependedResources || this.selectedSubDataSourcesList.getListLength() === 0) {\n            this.$('[name=allToLeft]').attr('disabled', 'disabled').removeClass('over');\n        } else {\n            this.$('[name=allToLeft]').removeAttr('disabled');\n        }\n    },\n    updateRightButtonState: function () {\n        var $btn = this.$('[name=toRight]'), nodes = this.subDataSourcesTree.selectedNodes, hasMovables = false, hasUnmovables = false;\n        for (var i = 0; i < nodes.length; i++) {\n            if (nodes[i].isParent() || this.model.subDataSources.where({ 'uri': nodes[i].param.uri }).length) {\n                hasUnmovables = true;\n                break;\n            } else {\n                hasMovables = true;\n            }\n        }\n        if (hasMovables && !hasUnmovables) {\n            $btn.removeAttr('disabled');\n        } else {\n            $btn.attr('disabled', 'disabled').removeClass('over');\n        }\n    },\n    updateLeftButtonState: function () {\n        var models = this.selectedSubDataSourcesList.getSelectedModels(), $btn = this.$('[name=toLeft]');\n        if (models.length > 0) {\n            $btn.removeAttr('disabled');\n        } else {\n            $btn.attr('disabled', 'disabled').removeClass('over');\n        }\n    },\n    render: function () {\n        this.$el.empty();\n        this.renderVirtualSpecificSection();\n        this.updateAllToLeftButtonState();\n        return this;\n    },\n    showDependentResources: function () {\n        if (!this.hasDependedResources) {\n            return;\n        }\n        dependentResourcesDialog.show(this.dependentResources, {}, //no actions, just inform user\n            {\n                canSave: false,\n                okOnly: true,\n                topMessage: i18n['resource.dataSource.virtual.dependencies.top.message'],\n                bottomMessage: i18n['resource.dataSource.virtual.dependencies.bottom.message']\n            });\n    },\n    renderVirtualSpecificSection: function () {\n        var self = this, hideNodesFn = function () {\n            self._hideAvailableSubDataSources(self.model.subDataSources.map(function (subDataSource) {\n                return subDataSource.get('uri');\n            }));\n        };\n        this.$el.append(_.template(virtualSpecificTemplate, this.templateData()));\n        this.$el.append(_.template(dependenciesTemplate, this.templateData()));\n        this.selectedSubDataSourcesList = new SubDataSourcesListView({ collection: this.model.subDataSources });\n        this.listenTo(this.selectedSubDataSourcesList, 'item:unselected item:selected', _.bind(this.updateLeftButtonState, this));\n        this.selectedSubDataSourcesList.render();\n        this.subDataSourcesTree = dynamicTree.createRepositoryTree('subDataSourcesTree', {\n            treeId: 'subDataSourcesTree',\n            providerId: 'joinableDsTreeDataProvider',\n            selectLeavesOnly: true,\n            multiSelectEnabled: true\n        });\n        this.subDataSourcesTree.observe('leaf:dblclick', _.bind(this.chooseTreeNodes, this));\n        this.subDataSourcesTree.observe('node:selected', _.bind(this.updateRightButtonState, this));\n        this.subDataSourcesTree.observe('node:unselected', _.bind(this.updateRightButtonState, this));\n        this.subDataSourcesTree.observe('leaf:selected', _.bind(this.updateRightButtonState, this));\n        this.subDataSourcesTree.observe('leaf:unselected', _.bind(this.updateRightButtonState, this));\n        this.subDataSourcesTree.observe('children:loaded', hideNodesFn);\n        this.subDataSourcesTree.showTreePrefetchNodes(this.model.subDataSources.map(function (subDataSource) {\n            return subDataSource.get('uri');\n        }).join(','), hideNodesFn);\n    },\n    _hideAvailableSubDataSources: function (uri) {\n        var self = this;\n        if (_.isArray(uri)) {\n            _.each(uri, function (uriItem) {\n                self._hideAvailableSubDataSources(uriItem);\n            });\n        } else {\n            var node = this.subDataSourcesTree.findLastLoadedNode(uri);\n            if (node && node.param.uri === uri) {\n                // keep removed node for the case if user unselects it\n                this._subDataSourcesHiddenNodes[uri] = {\n                    parent: node.parent,\n                    child: node\n                };\n                var parent = node.parent;\n                parent.removeChild(node);\n                parent.resortChilds();\n            }\n        }\n    },\n    _unhideAvailableSubDataSources: function (uri) {\n        function expandTreePath(tree, treePathUri) {\n            tree.processNodePath(treePathUri, function (node) {\n                if (node.parent) {\n                    if (tree.rootNode != node.parent && tree.getState(node.parent.id) == dynamicTree.TreeNode.State.CLOSED) {\n                        node.parent.handleNode();\n                    }\n                    if (node.param.uri === treePathUri) {\n                        node.select();\n                    }\n                }\n            });\n        }\n        var self = this, notLoadedHiddenNodes = [];\n        _.each(_.isArray(uri) ? uri : [uri], function (uriItem) {\n            var hiddenNode = self._subDataSourcesHiddenNodes[uriItem];\n            if (hiddenNode) {\n                hiddenNode.parent.addChild(hiddenNode.child);\n                hiddenNode.parent.resortChilds();\n                hiddenNode.parent.refreshNode();\n                expandTreePath(self.subDataSourcesTree, uriItem);\n            } else {\n                notLoadedHiddenNodes.push(uriItem);\n            }\n        });\n        if (notLoadedHiddenNodes.length) {\n            this.subDataSourcesTree.showTreePrefetchNodes(notLoadedHiddenNodes.join(','), function () {\n                _.each(notLoadedHiddenNodes, _.bind(expandTreePath, this, self.subDataSourcesTree));\n            });\n        }\n    },\n    remove: function () {\n        this.selectedSubDataSourcesList && this.selectedSubDataSourcesList.remove();\n        BaseDataSourceView.prototype.remove.apply(this, arguments);\n    }\n});","export default \"<fieldset class=\\\"group\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <input type=\\\"hidden\\\" name=\\\"subDataSources\\\" value=\\\"\\\"/>\\n    <span class=\\\"message warning\\\"></span>\\n</fieldset>\\n<fieldset class=\\\"group\\\">\\n    <div style=\\\"position:relative\\\" class=\\\"content\\\" id=\\\"dataSourcesSelector\\\">\\n        <div class=\\\"body twoColumn_equal pickWells\\\" id=\\\"subDsSelectionContainer\\\">\\n            <div class=\\\"moveButtons\\\" id=\\\"moveButtons\\\">\\n                <button title=\\\"{{- i18n['resource.moveRight'] }}\\\" class=\\\"button action square move right up\\\"\\n                        disabled=\\\"disabled\\\" name=\\\"toRight\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"resource.moveRight\\\"] }}<span\\n                        class=\\\"icon\\\"></span></span></button>\\n                <button title=\\\"{{- i18n['resource.moveLeft'] }}\\\" class=\\\"button action square move left up\\\"\\n                        disabled=\\\"disabled\\\" name=\\\"toLeft\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"resource.moveLeft\\\"] }}<span\\n                        class=\\\"icon\\\"></span></span></button>\\n                <button title=\\\"{{- i18n['resource.moveAllLeft'] }}\\\" class=\\\"button action square move toLeft up\\\"\\n                        disabled=\\\"disabled\\\" name=\\\"allToLeft\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"resource.moveAllLeft\\\"] }}<span\\n                        class=\\\"icon\\\"></span></span></button>\\n            </div>\\n\\n            <div class=\\\"column secondary\\\" id=\\\"availableDataSources\\\">\\n                <label for=\\\"subDataSourcesTree\\\" class=\\\"control\\\">\\n                    <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.virtual.availableDataSources\\\"] }}</span>\\n                    <br>\\n\\n                    <div class=\\\"control groupBox\\\">\\n                        <div class=\\\"content \\\">\\n                            <div class=\\\"header \\\">\\n                                <div class=\\\"title\\\"></div>\\n                            </div>\\n                            <div class=\\\"body  \\\">\\n                                <ul class=\\\"list collapsible folders\\\" id=\\\"subDataSourcesTree\\\"></ul>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </label>\\n            </div>\\n\\n            <div class=\\\"column primary\\\" id=\\\"selectedDataSources\\\">\\n                <label for=\\\"selectedSubDataSourcesList\\\" class=\\\"control\\\">\\n                    <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.virtual.selectedDataSources\\\"] }}</span>\\n                    <br>\\n\\n                    <div class=\\\"content\\\">\\n                        <ul class=\\\"list tabular twoColumn header\\\" id=\\\"selectedDataSourcesHeader\\\">\\n                            <li>\\n                                <div class=\\\"wrap\\\">\\n                                    <div class=\\\"column one\\\">\\n                                        <p class=\\\"dataSourceName\\\">{{- i18n[\\\"resource.dataSource.name\\\"] }}</p>\\n                                    </div>\\n                                    <div class=\\\"column two\\\">\\n                                        <p class=\\\"dataSourceID\\\">{{- i18n[\\\"resource.dataSource.virtual.subDsId\\\"] }}</p>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                        </ul>\\n                        <div id=\\\"selectedSubDataSourcesListContainer\\\">\\n                            <ol class=\\\"list tabular twoColumn\\\" id=\\\"selectedSubDataSourcesList\\\"></ol>\\n                        </div>\\n                    </div>\\n                </label>\\n            </div>\\n        </div>\\n    </div>\\n</fieldset>\";","export default \"<div id=\\\"dependencies\\\" class=\\\"panel dialog overlay dependencies sizeable moveable hidden centered_vert centered_horz\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"sizer diagonal\\\"></div>\\n    <div class=\\\"content hasFooter \\\">\\n        <div class=\\\"header mover\\\">\\n            <div class=\\\"title\\\">{{- i18n[\\\"dialog.dependencies.title\\\"] }}</div>\\n        </div>\\n        <div class=\\\"body\\\">\\n            <p id=\\\"topMessage\\\"></p>\\n\\n            <div class=\\\"control groupBox\\\">\\n                <ul id=\\\"dependenciesList\\\"></ul>\\n            </div>\\n            <p id=\\\"bottomMessage\\\" class=\\\"saveMessage\\\"></p>\\n        </div>\\n        <div class=\\\"footer \\\">\\n            <button id=\\\"dependenciesBtnSave\\\" class=\\\"button action primary up\\\">\\n                <span class=\\\"wrap\\\">{{- i18n[\\\"button.save\\\"] }}</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button id=\\\"dependenciesBtnSaveAs\\\" class=\\\"button action primary up\\\">\\n                <span class=\\\"wrap\\\">{{- i18n[\\\"button.saveAs\\\"] }}</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button id=\\\"dependenciesBtnOk\\\" class=\\\"button action primary up\\\">\\n                <span class=\\\"wrap\\\">{{- i18n[\\\"button.ok\\\"] }}</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button id=\\\"dependenciesBtnCancel\\\" class=\\\"button action up\\\">\\n                <span class=\\\"wrap\\\">{{- i18n[\\\"button.cancel\\\"] }}</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n        </div>\\n    </div>\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport connectionTypes from '../enum/connectionTypes';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nexport default BaseDataSourceModel.extend({\n    type: repositoryResourceTypes.BEAN_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, BaseDataSourceModel.prototype.defaults, {\n            beanName: '',\n            beanMethod: '',\n            connectionType: connectionTypes.BEAN\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, BaseDataSourceModel.prototype.validation, {\n            beanName: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.beanName']\n            }],\n            beanMethod: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.beanMethod']\n            }]\n        });\n        return validation;\n    }()\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport BeanDataSourceModel from '../model/BeanDataSourceModel';\nimport beanSpecificTemplate from '../template/beanSpecificTemplate.htm';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.bean.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.bean.page.title.edit',\n    modelConstructor: BeanDataSourceModel,\n    render: function () {\n        this.$el.empty();\n        this.renderBeanSpecificSection();\n        this.renderTestConnectionSection();\n        return this;\n    },\n    renderBeanSpecificSection: function () {\n        this.$el.append(_.template(beanSpecificTemplate, this.templateData()));\n    }\n});","export default \"<fieldset class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n    <legend class=\\\"offLeft\\\"><span></span></legend>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.bean.name'] }}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.bean.name\\\"]}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.beanName }}\\\" name=\\\"beanName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n[\\\"resource.dataSource.bean.hint1\\\"]}}</span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.bean.method'] }}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.bean.method\\\"]}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.beanMethod }}\\\" name=\\\"beanMethod\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n[\\\"resource.dataSource.bean.hint2\\\"]}}</span>\\n    </label>\\n\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport CustomDataSourceView from '../view/CustomDataSourceView';\nimport mongoDbSpecificTemplate from '../template/mongoDbSpecificTemplate.htm';\n\nexport default CustomDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.mongo.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.mongo.page.title.edit',\n    render: function () {\n        this.$el.empty();\n        this.renderMongoDbSpecificSection();\n        this.renderTestConnectionSection();\n        return this;\n    },\n    renderMongoDbSpecificSection: function () {\n        this.$el.append(_.template(mongoDbSpecificTemplate, this.templateData()));\n    }\n});","export default \"<fieldset name=\\\"customFieldsContainer\\\" class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n\\t<legend class=\\\"offLeft\\\"><span>Access Properties</span></legend>\\n\\n\\n\\n\\n\\t<label title=\\\"MongoDB URI (required)\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n['MongoDbDataSource.properties.mongoURI'] }} ({{- i18n['required.field']}}):</span>\\n\\t\\t<input name=\\\"mongoURI\\\" type=\\\"text\\\" size=\\\"40\\\" class=\\\"fnormal\\\" value=\\\"{{- modelAttributes.mongoURI }}\\\">\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t</label>\\n\\n\\n\\t<label title=\\\"User Name (optional)\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n['MongoDbDataSource.properties.username'] }} ({{- i18n['optional.field']}}):</span>\\n\\t\\t<input name=\\\"username\\\" type=\\\"text\\\" size=\\\"40\\\" class=\\\"fnormal\\\" value=\\\"{{- modelAttributes.username }}\\\">\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"Password (optional)\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n['MongoDbDataSource.properties.password'] }} ({{- i18n['optional.field']}}):</span>\\n\\t\\t<input name=\\\"password\\\" type=\\\"password\\\" size=\\\"40\\\" class=\\\"fnormal\\\" value=\\\"{{- modelAttributes.password }}\\\">\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t</label>\\n\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    REPOSITORY: {\n        name: 'repository',\n        label: 'resource.datasource.text.fileLocation.options.repository'\n    },\n    SERVER_FILE_SYSTEM: {\n        name: 'serverFileSystem',\n        label: 'resource.datasource.text.fileLocation.options.serverFileSystem'\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport CustomDataSourceModel from './CustomDataSourceModel';\nimport mongoJdbcFileSourceTypes from '../enum/mongoJdbcFileSourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nvar MongoDbJdbcDataSourceModel = CustomDataSourceModel.extend({\n    fileTypes: [\n        'pdf',\n        'config'\n    ],\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, CustomDataSourceModel.prototype.defaults, {\n            dataSourceName: 'mongoDbJDBCDataSource',\n            fileSourceType: 'repository',\n            timeZone: ''\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, CustomDataSourceModel.prototype.validation, {\n            serverAddress: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.host']\n            }],\n            portNumber: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.server.port']\n            }],\n            repositoryFileName: [\n                {\n                    fn: function (value, attr, computedState) {\n                        if (!computedState.autoSchemaDefinition && computedState.fileSourceType === 'repository' && (_.isNull(value) || _.isUndefined(value) || _.isString(value) && value === '')) {\n                            return i18n['fillParameters.error.mandatoryField'];\n                        }\n                        return null;\n                    }\n                },\n                {\n                    fn: function (value, attr, computedState) {\n                        if (!computedState.autoSchemaDefinition && computedState.fileSourceType === 'repository' && !(_.isString(value) && value !== '' && value.indexOf('/') === 0)) {\n                            return i18n['resource.file.invalid.path'];\n                        }\n                        return null;\n                    }\n                }\n            ],\n            serverFileName: [{\n                fn: function (value, attr, computedState) {\n                    if (!computedState.autoSchemaDefinition && computedState.fileSourceType === 'serverFileSystem' && (_.isNull(value) || _.isUndefined(value) || _.isString(value) && value === '')) {\n                        return i18n['fillParameters.error.mandatoryField'];\n                    }\n                    return null;\n                }\n            }]\n        });\n        return validation;\n    }(),\n    isLocalFileSystemAccessAllowed: function (adminWorkflows) {\n        return adminWorkflows && adminWorkflows._embedded && adminWorkflows._embedded.workflow && _.find(adminWorkflows._embedded.workflow, function (item) {\n            return item.name === 'serverSettings';\n        });\n    },\n    parse: function () {\n        var model = CustomDataSourceModel.prototype.parse.apply(this, arguments);\n        if (_.isString(model.fileName)) {\n            if (model.fileName.indexOf('repo:') !== -1) {\n                var path = model.fileName.split(':');\n                model.fileSourceType = mongoJdbcFileSourceTypes.REPOSITORY.name;\n                model.repositoryFileName = path[1];\n            } else {\n                model.fileSourceType = mongoJdbcFileSourceTypes.SERVER_FILE_SYSTEM.name;\n                model.serverFileName = model.fileName;\n            }\n            delete model.fileName;\n            model.autoSchemaDefinition = false;\n        } else {\n            model.autoSchemaDefinition = true;\n        }    // fix for timeZone: server side expects timezone to be passed in custom fields by name \"timeZone\"\n        // while the section on UI renders it with name='timezone' which creates variable 'timeZone'\n        // What we need is to rename field from 'timeZone' to 'timezone'\n        // fix for timeZone: server side expects timezone to be passed in custom fields by name \"timeZone\"\n        // while the section on UI renders it with name='timezone' which creates variable 'timeZone'\n        // What we need is to rename field from 'timeZone' to 'timezone'\n        model.timezone = model.timeZone;\n        delete model.timeZone;\n        return model;\n    },\n    toJSON: function () {\n        var data = CustomDataSourceModel.prototype.toJSON.apply(this, arguments);\n        data.fileName = data.serverFileName;\n        return data;\n    },\n    customFieldsToJSON: function (data, customFields) {\n        // converting file location section\n        if (data.fileSourceType === mongoJdbcFileSourceTypes.REPOSITORY.name) {\n            data.fileName = 'repo:' + data.repositoryFileName;\n        } else if (data.fileSourceType === mongoJdbcFileSourceTypes.SERVER_FILE_SYSTEM.name) {\n            data.fileName = data.serverFileName;\n        }\n        delete data.repositoryFileName;\n        delete data.serverFileName;\n        if (data.autoSchemaDefinition) {\n            // null or empty string in \"fileName\" is indication what schema must be auto-generated\n            delete data.fileName;\n            delete data.fileSourceType;\n        }\n        delete data.autoSchemaDefinition;    // fix for timeZone: server side expects timezone to be passed in custom fields by name \"timeZone\"\n        // while the section on UI renders it with name='timezone' which creates variable 'timeZone'\n        // What we need is to rename field from 'timezone' to 'timeZone'\n        // fix for timeZone: server side expects timezone to be passed in custom fields by name \"timeZone\"\n        // while the section on UI renders it with name='timezone' which creates variable 'timeZone'\n        // What we need is to rename field from 'timezone' to 'timeZone'\n        data.timeZone = data.timezone;\n        delete data.timezone;\n        data = CustomDataSourceModel.prototype.customFieldsToJSON.call(this, data, customFields);\n        return data;\n    },\n    resetValidation: function () {\n        this.validation = _.clone(MongoDbJdbcDataSourceModel.prototype.validation);\n    }\n});\nexport default MongoDbJdbcDataSourceModel;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../../i18n/all.properties';\nimport resourceLocator from '../../resource/resource.locate';\nimport mongoJdbcFileSourceTypes from '../enum/mongoJdbcFileSourceTypes';\nimport CustomDataSourceView from '../view/CustomDataSourceView';\nimport MongoDbJdbcDataSourceModel from '../model/MongoDbJdbcDataSourceModel';\nimport MongoDbJdbcSpecificTemplate from '../template/mongoDbJdbcSpecificTemplate.htm';\nimport MongoDbJdbcFileLocationSectionTemplate from '../template/mongoDbJdbcFileLocationSectionTemplate.htm';\nimport selectDialogTemplate from 'js-sdk/src/common/templates/components.pickers.htm';\nimport jrsConfigs from \"js-sdk/src/jrs.configs\";\nimport request from 'js-sdk/src/common/transport/request';\n\nlet adminWorkflowsLoadingPromise = null;\nlet adminWorkflows = null;\n\nexport default CustomDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.mongoJdbc.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.mongoJdbc.page.title.edit',\n    modelConstructor: MongoDbJdbcDataSourceModel,\n    browseButton: false,\n    events: function () {\n        var events = _.extend({}, CustomDataSourceView.prototype.events);\n        events['change [name=fileSourceType]'] = 'changeFileSourceType';\n        events['change [name=autoSchemaDefinition]'] = 'changeAutoSchemaDefinition';\n        return events;\n    },\n    initialize: function (options) {\n        CustomDataSourceView.prototype.initialize.apply(this, arguments);\n        this.listenTo(this.model, 'change:serverFileName', this.adjustFileSystemConnectButton);\n        this.loadAdminWorkflows();\n    },\n    loadAdminWorkflows: function () {\n        if (!adminWorkflowsLoadingPromise) {\n            adminWorkflowsLoadingPromise = request({\n                type: \"GET\",\n                dataType: \"json\",\n                url: jrsConfigs.contextPath + \"/rest_v2/hypermedia/workflows?parentName=admin\"\n            }).then((result) => {\n                adminWorkflows = result;\n            });\n        }\n\n        return adminWorkflowsLoadingPromise;\n    },\n    changeFileSourceType: function () {\n        _.defer(_.bind(function () {\n            this.renderFileLocationSection();\n        }, this));\n    },\n    changeAutoSchemaDefinition: function () {\n        _.defer(_.bind(function () {\n            this.renderFileLocationSection();\n        }, this));\n    },\n    render: function () {\n        this.loadAdminWorkflows().then(() => {\n            this.$el.empty();\n            this.renderMongoDbSpecificSection();\n            this.renderFileLocationSection();\n            this.renderTimezoneSection();\n            this.renderTestConnectionSection();\n            this.$el.find('[name=serverAddress]').focus();\n        })\n\n        return this;\n    },\n    validationMethodOnSaveClick: function (callback) {\n        !this.model.get('parentFolderUri') && this.model.set('parentFolderUri', '/');\n        !this.model.get('label') && this.model.set('label', $('[name=dataSourceType] option:selected').text());\n        var self = this;\n        this.model.save({}, { dryRun: true }).fail(function (xhr) {\n            var response = false;\n            try {\n                response = JSON.parse(xhr.responseText);\n            } catch (e) {\n            }\n            var errors = _.isArray(response) ? response : [response];\n            _.each(errors, function (error) {\n                if (error && error.errorCode && error.parameters) {\n                    if (error.errorCode === 'illegal.parameter.value.error' && error.parameters[0] === 'resourceReference.uri') {\n                        self.fieldIsInvalid(self, 'repositoryFileName', i18n['resource.file.invalid.path'], 'name');\n                    } else if (error.errorCode === 'invalid.server.file.system.path' && error.parameters[0] === 'textDataSource.propertyMap[fileName]') {\n                        self.fieldIsInvalid(self, 'serverFileName', i18n['resource.file.invalid.path'], 'name');\n                    }\n                }\n            });\n        }).done(callback);\n    },\n    templateData: function () {\n        var fileSourceTypes = _.extend({}, mongoJdbcFileSourceTypes);\n        if (!this.model.isLocalFileSystemAccessAllowed(adminWorkflows)) {\n            delete fileSourceTypes['SERVER_FILE_SYSTEM'];\n        }\n        return _.extend(CustomDataSourceView.prototype.templateData.apply(this, arguments), { fileSourceTypeOptions: fileSourceTypes });\n    },\n    renderMongoDbSpecificSection: function () {\n        this.$el.append(_.template(MongoDbJdbcSpecificTemplate, this.templateData()));\n    },\n    renderFileLocationSection: function () {\n        // we are going to re-render the file location section, and\n        // we need to remove everything which was there, and draw it again\n        this.renderOrAddAnyBlock(this.$el.find('[name=fileLocationContainer]'), _.template(MongoDbJdbcFileLocationSectionTemplate, this.templateData()));    // browse button is a special component, and\n        // if we render this section second time and we have this\n        // component on the page we need to remove it\n        // browse button is a special component, and\n        // if we render this section second time and we have this\n        // component on the page we need to remove it\n        if (this.browseButton) {\n            this.browseButton.remove();\n            this.browseButton = false;\n        }    // and now, under certain condition, we may create this button again\n        // and now, under certain condition, we may create this button again\n        if (this.model.get('fileSourceType') === 'repository' && !this.model.get('autoSchemaDefinition')) {\n            this.browseButton = resourceLocator.initialize({\n                i18n: i18n,\n                template: selectDialogTemplate,\n                resourceInput: this.$el.find('[name=repositoryFileName]')[0],\n                browseButton: this.$el.find('[name=repositoryBrowserButton]')[0],\n                providerId: 'fileResourceBaseTreeDataProvider',\n                dialogTitle: i18n['resource.Add.Files.Title'],\n                selectLeavesOnly: true,\n                onChange: _.bind(function (value) {\n                    this.model.set('repositoryFileName', value);\n                    this.model.validate({ 'repositoryFileName': value });\n                }, this)\n            });\n        }\n    }\n});","export default \"<fieldset class=\\\"group shortFields mongoDbJdbcSpecificFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n\\t<legend class=\\\"offLeft\\\"><span></span></legend>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.host'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.host\\\"]}} ({{- i18n['required.field']}}):</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.serverAddress }}\\\" name=\\\"serverAddress\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.port.number'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.port.number\\\"]}} ({{- i18n['required.field']}}):</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.portNumber }}\\\" name=\\\"portNumber\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.database.name'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.database.name\\\"]}}:</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.database }}\\\" name=\\\"database\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.user.name'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.user.name\\\"]}}:</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.username }}\\\" name=\\\"username\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.password'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.password\\\"]}}:</span>\\n\\t\\t<input type=\\\"password\\\" value=\\\"{{- modelAttributes.password }}\\\" name=\\\"password\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.connection.options'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.connection.options\\\"]}}:</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.connectionOptions }}\\\" name=\\\"connectionOptions\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<div class=\\\"control checkBox\\\">\\n\\t\\t<label for=\\\"__jrs_autoSchemaDefinitionCheckbox\\\" title=\\\"{{- i18n['resource.datasource.mongoJdbc.schema.auto.generate']}}\\\" class=\\\"wrap\\\">\\n\\t\\t\\t{{- i18n['resource.datasource.mongoJdbc.schema.auto.generate']}}\\n\\t\\t</label>\\n\\t\\t<input type=\\\"checkbox\\\" id=\\\"__jrs_autoSchemaDefinitionCheckbox\\\" name=\\\"autoSchemaDefinition\\\" {{ if (modelAttributes.autoSchemaDefinition) { }}checked{{ } }} {{- isEditMode ? 'disabled=disabled' : ''}} >\\n\\t</div>\\n\\n\\t<div name=\\\"fileLocationContainer\\\" class=\\\"section\\\"></div>\\n</fieldset>\";","export default \"<div name=\\\"fileLocationContainer\\\" class=\\\"\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n\\t{{ if (_.keys(fileSourceTypeOptions).length > 1) { }}\\n\\t<div class=\\\"\\\">\\n\\t\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.fileLocation.source'] }}\\\" class=\\\"control select\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.mongoJdbc.fileLocation.source'] }}:</span>\\n\\t\\t\\t<select id=\\\"fileSourceSelect\\\" name=\\\"fileSourceType\\\" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? 'disabled=disabled' : ''}}>\\n\\t\\t\\t{{ _.each(fileSourceTypeOptions, function(item) { }}\\n\\t\\t\\t\\t<option value=\\\"{{- item.name }}\\\" {{- (item.name == modelAttributes.fileSourceType) ? \\\"selected=selected\\\" : \\\"\\\" }} > {{- i18n[item.label] }}</option>\\n\\t\\t\\t{{ }); }}\\n\\t\\t\\t</select>\\n\\t\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t</label>\\n\\t</div>\\n    {{ } }}\\n\\n\\t{{ if (modelAttributes.fileSourceType === \\\"repository\\\") { }}\\n\\n\\t<div id=\\\"repositoryInput\\\" class=\\\"\\\">\\n\\t\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.fileLocation.repository.fileLocation']}}\\\" class=\\\"control input text\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.mongoJdbc.fileLocation.repository.fileLocation']}}{{ if (!modelAttributes.autoSchemaDefinition) { }} ({{- i18n['required.field']}}){{ } }}:</span>\\n\\t\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.repositoryFileName }}\\\" name=\\\"repositoryFileName\\\" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? 'disabled=disabled' : ''}}>\\n\\t\\t\\t<button class=\\\"button action up\\\" type=\\\"button\\\" name=\\\"repositoryBrowserButton\\\"  {{- isEditMode || modelAttributes.autoSchemaDefinition ? 'disabled=disabled' : ''}}>\\n\\t\\t\\t       <span class=\\\"wrap\\\">{{- i18n['dialog.file.browse'] }}...<span class=\\\"icon\\\"></span></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t{{ } else { }}\\n\\n\\t<div id=\\\"serverInput\\\" class=\\\"\\\">\\n\\t\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.fileLocation.serverFileSystem.fileLocation']}}\\\" class=\\\"control browser\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.mongoJdbc.fileLocation.serverFileSystem.fileLocation']}}{{ if (!modelAttributes.autoSchemaDefinition) { }} ({{- i18n['required.field']}}){{ } }}:</span>\\n\\t\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.serverFileName }}\\\" name=\\\"serverFileName\\\" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? 'disabled=disabled' : ''}}>\\n\\t\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t{{ } }}\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport _ from 'underscore';\nimport i18n from '../../i18n/all.properties';\nimport CustomDataSourceModel from '../model/CustomDataSourceModel';\nimport InternalDiagnosticTemplate from '../template/InternalDiagnosticTemplate.htm';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.jndi.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.jndi.page.title.edit',\n    modelConstructor: CustomDataSourceModel,\n    render: function () {\n        this.$el.empty();\n        this.renderBlankBody();\n        return this;\n    },\n    renderBlankBody: function () {\n        this.$el.append(_.template(InternalDiagnosticTemplate, { i18n: i18n }));\n    }\n});","export default \"<fieldset name=\\\"customFieldsContainer\\\" class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t{{- i18n[\\\"resource.datasource.internalDiagnostic.line1\\\"] }}\\n\\t<br/>\\n\\t{{- i18n[\\\"resource.datasource.internalDiagnostic.line2\\\"] }}\\n\\t<br/>\\n\\t{{- i18n[\\\"resource.datasource.internalDiagnostic.line3\\\"] }}\\n\\t<br/>\\n\\t<br/>\\n\\t<strong>{{- i18n[\\\"resource.datasource.internalDiagnostic.line4\\\"] }}</strong>\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport CustomDataSourceView from '../view/CustomDataSourceView';\nimport dataSourceResourceTypes from '../enum/dataSourceResourceTypes';\nimport customDataSourceTypes from '../enum/customDataSourceTypes';\nimport JdbcDataSourceView from '../view/JdbcDataSourceView';\nimport JndiDataSourceView from '../view/JndiDataSourceView';\nimport AwsDataSourceView from '../view/AwsDataSourceView';\nimport AzureSqlDataSourceView from '../view/AzureSqlDataSourceView';\nimport VirtualDataSourceView from '../view/VirtualDataSourceView';\nimport BeanDataSourceView from '../view/BeanDataSourceView';\nimport MongoDbDataSourceView from '../view/MongoDbDataSourceView';\nimport MongoDbJdbcDataSourceView from '../view/MongoDbJdbcDataSourceView';\nimport DiagnosticCustomDataSourceView from '../view/DiagnosticCustomDataSourceView';\n\nvar registeredViews = {};\nregisteredViews[dataSourceResourceTypes.JDBC.toLowerCase()] = JdbcDataSourceView;\nregisteredViews[dataSourceResourceTypes.JNDI.toLowerCase()] = JndiDataSourceView;\nregisteredViews[dataSourceResourceTypes.AWS.toLowerCase()] = AwsDataSourceView;\nregisteredViews[dataSourceResourceTypes.AZURE_SQL.toLowerCase()] = AzureSqlDataSourceView;\nregisteredViews[dataSourceResourceTypes.VIRTUAL.toLowerCase()] = VirtualDataSourceView;\nregisteredViews[dataSourceResourceTypes.BEAN.toLowerCase()] = BeanDataSourceView;\nregisteredViews[dataSourceResourceTypes.MONGODB] = MongoDbDataSourceView;\nregisteredViews[dataSourceResourceTypes.MONGODBJDBC] = MongoDbJdbcDataSourceView;    // next, we pre-define the custom views for some of the custom data sources\n// you also can define your own views here\n// next, we pre-define the custom views for some of the custom data sources\n// you also can define your own views here\nregisteredViews[customDataSourceTypes.DIAGNOSTIC] = DiagnosticCustomDataSourceView;    // disable file data sources for now\n//registeredViews[customDataSourceTypes.TEXT_FILE] = TextDataSourceView;\n// disable file data sources for now\n//registeredViews[customDataSourceTypes.TEXT_FILE] = TextDataSourceView;\nexport default {\n    getView: function (options) {\n        var constructor;\n        if (options.dataSourceType) {\n            constructor = registeredViews[options.dataSourceType];\n            if (!constructor) {\n                constructor = CustomDataSourceView;\n            }\n        } else {\n            // by default\n            constructor = JdbcDataSourceView;\n        }\n        return new constructor(options);\n    },\n    getViewType: function (contentType, dataSource) {\n        var result = /application\\/repository\\.([^+]+)\\+json/.exec(contentType);\n        var viewType = result && result[1] ? result[1].toLowerCase() : contentType.toLowerCase();    // if this is custom data source, then view type is a dataSourceName attribute of data source entity\n        // if this is custom data source, then view type is a dataSourceName attribute of data source entity\n        if (dataSourceResourceTypes.CUSTOM.toLowerCase() === viewType) {\n            viewType = dataSource.dataSourceName;\n        }\n        return viewType;\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport i18n from '../../i18n/all.properties';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport DialogWithModelInputValidation from 'js-sdk/src/common/component/dialog/DialogWithModelInputValidation';\nimport baseSaveDialogTemplate from './template/baseSaveDialogTemplate.htm';\nimport settings from '../../settings/treeComponent.settings';\nimport repositoryTreeFactory from 'bi-repository/src/bi/repository/factory/repositoryTreeFactory';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\n\nexport default DialogWithModelInputValidation.extend({\n    theDialogIsOpen: false,\n    autoUpdateResourceID: true,\n    saveDialogTemplate: baseSaveDialogTemplate,\n    constructor: function (options) {\n        options || (options = {});\n        this.options = options;\n        var model = this.extendModel(this.options.model);\n        var saveButtonLabel = this._getLabelForSaveButton(model);\n        var cancelButtonLabel = 'resource.datasource.saveDialog.cancel';\n        this.autoUpdateResourceID = !this.options.isEditMode;\n        this.preSelectedFolder = options.parentFolderUri;\n        DialogWithModelInputValidation.prototype.constructor.call(this, {\n            skipLocation: !!options.skipLocation,\n            modal: true,\n            model: model,\n            minHeight: 500,\n            minWidth: 440,\n            setMinSizeAsSize: true,\n            resizable: !options.skipLocation,\n            additionalCssClasses: 'dataSourceSaveDialog' + (options.skipLocation ? ' no-minheight' : ''),\n            title: i18n['resource.datasource.saveDialog.save'],\n            content: _.template(this.saveDialogTemplate, {\n                i18n: i18n,\n                model: _.extend({}, model.attributes),\n                skipLocation: !!this.options.skipLocation,\n                isEmbedded: this.options.isEmbedded,\n                isEditMode: this.options.isEditMode\n            }),\n            buttons: [\n                {\n                    label: i18n[saveButtonLabel],\n                    action: 'save',\n                    primary: true\n                },\n                {\n                    label: i18n[cancelButtonLabel],\n                    action: 'cancel',\n                    primary: false\n                }\n            ]\n        });\n        this.on('button:save', _.bind(this._onSaveDialogSaveButtonClick, this));\n        this.on('button:cancel', _.bind(this._onSaveDialogCancelButtonClick, this));\n    },\n    initialize: function (options) {\n        DialogWithModelInputValidation.prototype.initialize.apply(this, arguments);    // check if this variables has been re-defined by inherited class\n        // check if this variables has been re-defined by inherited class\n        if (_.isUndefined(this.preSelectedFolder) || !this.preSelectedFolder) {\n            this.preSelectedFolder = '/';\n        }\n        if (!options.skipLocation) {\n            this.initializeTree();\n        }\n        this.listenTo(this.model, 'change:label', this._onDataSourceNameChange);\n        this.$contentContainer.find('[name=name]').change(_.bind(this._onResourceIDInputChange, this));\n    },\n    restoreModel: function () {\n        if (this.originalModelValidation) {\n            this.model.validation = this.originalModelValidation;\n        }\n    },\n    extendModel: function (model) {\n        this.originalModelValidation = model.validation;\n        model.validation = _.extend({}, ResourceModel.prototype.validation, {\n            label: [\n                {\n                    required: true,\n                    msg: i18n['resource.datasource.saveDialog.validation.not.empty.label']\n                },\n                {\n                    maxLength: ResourceModel.settings.LABEL_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDialog.validation.too.long.label']\n                }\n            ],\n            name: [\n                {\n                    required: true,\n                    msg: i18n['resource.datasource.saveDialog.validation.not.empty.name']\n                },\n                {\n                    maxLength: ResourceModel.settings.NAME_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDialog.validation.too.long.name']\n                },\n                {\n                    doesNotContainSymbols: ResourceModel.settings.NAME_NOT_SUPPORTED_SYMBOLS,\n                    msg: i18n['resource.datasource.saveDialog.validation.invalid.chars.name']\n                }\n            ],\n            description: [\n                { required: false },\n                {\n                    maxLength: ResourceModel.settings.DESCRIPTION_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDialog.validation.too.long.description']\n                }\n            ],\n            parentFolderUri: [{\n                fn: function (value) {\n                    if (!this.options.skipLocation) {\n                        if (_.isNull(value) || _.isUndefined(value) || _.isString(value) && value === '') {\n                            return i18n['resource.datasource.saveDialog.validation.not.empty.parentFolderIsEmpty'];\n                        }\n                        if (value.slice(0, 1) !== '/') {\n                            return i18n['resource.datasource.saveDialog.validation.folder.not.found'].replace('{0}', value);\n                        }\n                    }\n                }\n            }]\n        });\n        return model;\n    },\n    initializeTree: function () {\n        this.foldersTree = repositoryTreeFactory({\n            processors: [\n                'folderTreeProcessor',\n                'treeNodeProcessor',\n                'i18nItemProcessor',\n                'filterPublicFolderProcessor',\n                'cssClassItemProcessor',\n                'fakeUriProcessor'\n            ],\n            treeBufferSize: settings.treeLevelLimit,\n            types: [repositoryResourceTypes.FOLDER],\n            tooltipOptions: {}\n        });\n        this.listenTo(this.foldersTree, 'selection:change', function (selection) {\n            var parentFolderUri;\n            if (selection && _.isArray(selection) && selection[0] && selection[0].uri) {\n                parentFolderUri = selection[0].uri;\n            }\n            if (!parentFolderUri) {\n                return;\n            }\n            this.model.set('parentFolderUri', parentFolderUri);\n        });\n        this.$el.find('.treeBox .folders').append(this.foldersTree.render().el);\n        var $scrollContainer = this.foldersTree.$el.parent().parent().parent();\n        this.foldersTree._selectTreeNode(this.preSelectedFolder, $scrollContainer);\n    },\n    startSaveDialog: function () {\n        this._openDialog();\n    },\n    _openDialog: function () {\n        if (this.theDialogIsOpen) {\n            return;\n        }\n        this.bindValidation();\n        DialogWithModelInputValidation.prototype.open.apply(this, arguments);\n        this.$contentContainer.find('[name=label]').focus();\n        this.theDialogIsOpen = true;\n    },\n    _closeDialog: function () {\n        if (!this.theDialogIsOpen) {\n            return;\n        }\n        this.unbindValidation();\n        this.clearValidationErrors();\n        DialogWithModelInputValidation.prototype.close.apply(this, arguments);\n        this.theDialogIsOpen = false;\n    },\n    _getLabelForSaveButton: function () {\n        return 'resource.datasource.saveDialog.save';\n    },\n    _onDialogResize: function () {\n        var self = this;\n        var heightReservation = 40;\n        var otherElementsHeight = 0;\n        var treeBox = this.$contentContainer.find('.control.groupBox.treeBox');\n        var dialogBody = this.$contentContainer.closest('.jr-mDialog > .jr-mDialog-body');\n        this.$contentContainer.children().not(treeBox).each(function () {\n            otherElementsHeight += self.$(this).outerHeight(true);\n        });\n        treeBox.height(dialogBody.outerHeight(true) - otherElementsHeight - heightReservation);\n    },\n    _onDataSourceNameChange: function () {\n        if (this.autoUpdateResourceID) {\n            var resourceId = ResourceModel.generateResourceName(this.model.get('label'));\n            this.model.set('name', resourceId);\n            this.$('input[name=\\'name\\']').val(resourceId);\n        }\n    },\n    _onResourceIDInputChange: function () {\n        this.autoUpdateResourceID = false;\n    },\n    _onSaveDialogCancelButtonClick: function () {\n        this.restoreModel();\n        this._closeDialog();\n    },\n    _onSaveDialogSaveButtonClick: function () {\n        if (!this.model.isValid(true)) {\n            return;\n        }\n        this.performSave();\n    },\n    performSave: function () {\n        if (this.options.saveFn) {\n            this.options.saveFn(this.model.attributes, this.model);\n            return;\n        }\n        this.model.save({}, {\n            success: _.bind(this._saveSuccessCallback, this),\n            error: _.bind(this._saveErrorCallback, this)\n        });\n    },\n    _saveSuccessCallback: function (model) {\n        this._closeDialog();\n        if (_.isFunction(this.options.success)) {\n            this.options.success(model);\n        }\n    },\n    _saveErrorCallback: function (model, xhr, options) {\n        var self = this, errors = false;\n        var handled = false;\n        try {\n            errors = JSON.parse(xhr.responseText);\n        } catch (e) {\n        }\n        if (!_.isArray(errors)) {\n            errors = [errors];\n        }\n        _.each(errors, function (error) {\n            var field = false, msg = false;\n            if (!error) {\n                return;\n            }    // in case of opened dialog, we can highlight some fields with error\n            // in case of opened dialog, we can highlight some fields with error\n            if (self.theDialogIsOpen) {\n                // check if we faced Conflict issue, it's when we are trying to save DS under existing resourceID\n                if (error.errorCode === 'version.not.match') {\n                    field = 'name';\n                    msg = i18n['resource.dataSource.resource.alreadyInUse'];\n                } else if (error.errorCode === 'mandatory.parameter.error') {\n                    if (error.parameters && error.parameters[0]) {\n                        msg = i18n['resource.datasource.saveDialog.parameterIsMissing'];\n                        field = error.parameters[0].substr(error.parameters[0].indexOf('.') + 1);\n                    }\n                } else if (error.errorCode === 'illegal.parameter.value.error') {\n                    if (error.parameters && error.parameters[0]) {\n                        field = error.parameters[0].substr(error.parameters[0].indexOf('.') + 1);\n                        msg = i18n['resource.datasource.saveDialog.parameterIsWrong'];\n                    }\n                } else if (error.errorCode === 'folder.not.found') {\n                    field = 'parentFolderUri';\n                    msg = i18n['ReportDataSourceValidator.error.folder.not.found'].replace('{0}', error.parameters[0]);\n                } else if (error.errorCode === 'access.denied') {\n                    field = 'parentFolderUri';\n                    msg = i18n['jsp.accessDenied.errorMsg'];\n                }\n            }\n            if (msg && field && [\n                'label',\n                'name',\n                'description',\n                'parentFolderUri'\n            ].indexOf(field) !== -1) {\n                self.invalidField('[name=' + field + ']', msg);\n                handled = true;\n            }\n        });    // otherwise, pass this error to DataSourceController\n        // otherwise, pass this error to DataSourceController\n        if (handled === false) {\n            if (_.isFunction(this.options.error)) {\n                this.options.error(model, xhr, options);\n            }\n        }\n    }\n});","export default \"<label title=\\\"{{- i18n['resource.datasource.saveDialog.dataSourceNameTitle']}}\\\" class=\\\"control input text \\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.dataSourceName']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" value=\\\"{{- model.label }}\\\" name=\\\"label\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDialog.resourceIDTitle']}}\\\" class=\\\"control input text \\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.resourceID']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" {{ if (isEditMode) { }}readonly=\\\"readonly\\\"{{ } }} value=\\\"{{- model.name }}\\\" name=\\\"name\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDialog.descriptionTitle']}}\\\" class=\\\"control textArea\\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.description']}}</span>\\n\\t<textarea type=\\\"text\\\" name=\\\"description\\\">{{- model.description }}</textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n{{ if (skipLocation === false) { }}\\n<div class=\\\"control groupBox treeBox\\\">\\n\\t<div class=\\\"content\\\">\\n\\t\\t<div class=\\\"header \\\">\\n\\t\\t\\t<div class=\\\"title\\\"></div>\\n\\t\\t</div>\\n        <ul class=\\\"list collapsible folders\\\"></ul>\\n\\t</div>\\n</div>\\n\\n<label class=\\\"control textArea\\\">\\n\\t<textarea type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"parentFolderUri\\\"></textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n{{ } }}\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    'java.lang.Date': 'javaTypes.java.lang.Date',\n    'java.lang.String': 'javaTypes.java.lang.String',\n    'java.lang.Integer': 'javaTypes.java.lang.Integer',\n    'java.lang.Boolean': 'javaTypes.java.lang.Boolean',\n    'java.lang.Double': 'javaTypes.java.lang.Double',\n    'java.sql.Timestamp': 'javaTypes.java.sql.Timestamp',\n    'java.lang.Short': 'javaTypes.java.lang.Short',\n    'java.math.BigDecimal': 'javaTypes.java.math.BigDecimal',\n    'java.lang.Long': 'javaTypes.java.lang.Long',\n    'java.sql.Time': 'javaTypes.java.sql.Time'\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default [\n    'java.lang.Date',\n    'java.lang.String',\n    'java.lang.Integer',\n    'java.lang.Boolean',\n    'java.lang.Double',\n    'java.sql.Timestamp',\n    'java.lang.Short',\n    'java.math.BigDecimal',\n    'java.lang.Long',\n    'java.sql.Time'\n];","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport request from 'js-sdk/src/common/transport/request';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\n\nexport default ResourceModel.extend({\n    defaults: {\n        uri: undefined,\n        label: undefined,\n        columns: [],\n        dataSourceUri: undefined\n    },\n    validation: {\n        columns: function (columns) {\n            var errors = [];\n            _.each(columns, function (column, rowId) {\n                if (!column.label) {\n                    errors.push({\n                        rowId: rowId,\n                        name: 'label'\n                    });\n                }\n            });\n            if (errors.length !== 0) {\n                this.trigger('validationFailed', errors);\n            } else {\n                this.trigger('validationPassed');\n            }\n            return null;\n        }\n    },\n    type: 'simpleDomain',\n    url: function () {\n        return jrsConfigs.contextPath + '/rest_v2/domains';\n    },\n    // isNew == true to force POST method\n    isNew: function () {\n        return true;\n    },\n    constructor: function (attributes, options) {\n        ResourceModel.prototype.constructor.apply(this, arguments);\n        this.dataSource = options.dataSource;\n        if (options.dataSource && options.dataSource.uri) {\n            this.set('dataSourceUri', options.dataSource.uri);\n        }\n    },\n    save: function (attributes, options) {\n        _.defaults(options || (options = {}), {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/simpleDomain+json; charset=UTF-8'\n            }\n        });\n        return ResourceModel.prototype.save.call(this, attributes, options);\n    },\n    parseMetadata: function (data) {\n        _.each(data.columns, function (column) {\n            column.show = true;\n        });\n        return data;\n    },\n    parse: function (input) {\n        var data = ResourceModel.prototype.parse.apply(this, arguments);\n        if (data.dataSource) {\n            data.dataSourceUri = data.dataSource.dataSourceReference;\n            delete data.dataSource;\n        }\n        if (data.metadata) {\n            data.columns = data.metadata.columns;\n            delete data.metadata;\n        }\n        return data;\n    },\n    toJSON: function () {\n        var data = ResourceModel.prototype.toJSON.apply(this, arguments);\n        data.dataSource = { dataSourceReference: data.dataSourceUri };\n        data.metadata = {\n            columns: _.reduce(data.columns, function (memo, column) {\n                if (column.show) {\n                    // add only columns to show\n                    memo.push(column);\n                }\n                return memo;\n            }, []),\n            queryLanguage: 'csv'\n        };\n        delete data.dataSourceUri;\n        delete data.columns;\n        return data;\n    },\n    fetchMetadata: function () {\n        var self = this, dfr = $.Deferred();\n        request({\n            type: 'POST',\n            url: jrsConfigs.contextPath + '/rest_v2/connections',\n            dataType: 'json',\n            data: JSON.stringify(this.dataSource),\n            headers: {\n                'Content-Type': 'application/repository.customDataSource+json',\n                'Accept': 'application/table.metadata+json'\n            }\n        }).done(function (response) {\n            response = self.parseMetadata(response);\n            self.set('columns', response.columns);\n            dfr.resolve(response);\n        }).fail(function (xhr) {\n            dfr.reject(xhr);\n        });\n        return dfr;\n    }\n});","export default \"<div class=\\\"panel dialog overlay standardConfirm moveable centered_horz centered_vert\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"content hasFooter \\\">\\n        <div class=\\\"header mover\\\">\\n            <h2 class=\\\"title\\\">\\n                Confirm\\n            </h2>\\n        </div>\\n\\n        <div class=\\\"body  \\\">\\n        </div>\\n\\n        <div class=\\\"footer \\\">\\n\\n            <button class=\\\"button action primary up ok\\\" name=\\\"buttonOK\\\">\\n                <span class=\\\"wrap\\\">OK</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button class=\\\"button action up ignore hidden\\\" name=\\\"buttonIgnore\\\">\\n                <span class=\\\"wrap\\\">Ignore</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button class=\\\"button action up cancel\\\" name=\\\"buttonCancel\\\">\\n                <span class=\\\"wrap\\\">Cancel</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n        </div>\\n\\n    </div>\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../../i18n/all.properties';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport BaseSaveDialogView from './BaseSaveDialogView';\nimport standardConfirmTemplate from 'js-sdk/src/common/templates/standardConfirm.htm';\nimport domainSaveDialogTemplate from './template/domainSaveDialogTemplate.htm';\nimport dialogs from '../../components/components.dialogs';\n\nexport default BaseSaveDialogView.extend({\n    saveDialogTemplate: domainSaveDialogTemplate,\n    constructor: function (options) {\n        options || (options = {});\n        this.options = options;\n        BaseSaveDialogView.prototype.constructor.call(this, options);\n    },\n    initialize: function () {\n        this.preSelectedFolder = ResourceModel.getParentFolderFromUri(this.options.dataSource.uri) || '/';\n        BaseSaveDialogView.prototype.initialize.apply(this, arguments);\n        this.listenTo(this.model, 'change:openInAdHocDesigner', this._onOpenInAdHocDesignerChange);\n    },\n    extendModel: function (sourceModel) {\n        var model = BaseSaveDialogView.prototype.extendModel.call(this, sourceModel), self = this, dataSourceName, domainName, domainResourceId;\n        model.set('openInAdHocDesigner', false);    // We need to pre-generate the domain name based on the data source name.\n        // And because we haven't set listeners for model's changes (we'll do this later)\n        // we have to generate resourceID ourselves\n        // We need to pre-generate the domain name based on the data source name.\n        // And because we haven't set listeners for model's changes (we'll do this later)\n        // we have to generate resourceID ourselves\n        dataSourceName = sourceModel.dataSource.label;\n        domainName = dataSourceName + ' Domain';\n        domainResourceId = ResourceModel.generateResourceName(domainName);\n        model.set('label', domainName);\n        model.set('name', domainResourceId);\n        model.validation = _.extend({}, ResourceModel.prototype.validation, {\n            label: [\n                {\n                    required: true,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.not.empty.label']\n                },\n                {\n                    maxLength: ResourceModel.settings.LABEL_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.too.long.label']\n                }\n            ],\n            name: [\n                {\n                    required: true,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.not.empty.name']\n                },\n                {\n                    maxLength: ResourceModel.settings.NAME_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.too.long.name']\n                },\n                {\n                    doesNotContainCharacters: ResourceModel.settings.NAME_NOT_SUPPORTED_SYMBOLS,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.invalid.chars.name']\n                }\n            ],\n            description: [\n                { required: false },\n                {\n                    maxLength: ResourceModel.settings.DESCRIPTION_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.too.long.description']\n                }\n            ],\n            parentFolderUri: [{\n                fn: function (value) {\n                    if (!self.options.skipLocation) {\n                        if (_.isNull(value) || _.isUndefined(value) || _.isString(value) && value === '') {\n                            return i18n['resource.datasource.saveDomainDialog.validation.not.empty.parentFolderIsEmpty'];\n                        }\n                        if (value.slice(0, 1) !== '/') {\n                            return i18n['resource.datasource.saveDomainDialog.validation.folder.not.found'].replace('{0}', value);\n                        }\n                    }\n                }\n            }]\n        });\n        return model;\n    },\n    _onOpenInAdHocDesignerChange: function () {\n        var textId = this._getLabelForSaveButton();\n        this.changeButtonLabel('save', i18n[textId]);\n    },\n    _getLabelForSaveButton: function (model) {\n        // this dialog can be called with any model\n        model = model || this.model;\n        var saveButtonLabel = 'resource.datasource.saveDialog.save';\n        if (!!model.get('openInAdHocDesigner')) {\n            saveButtonLabel = 'resource.datasource.saveDomainDialog.saveAndOpenDesigner';\n        }\n        return saveButtonLabel;\n    },\n    _onSaveDialogCancelButtonClick: function () {\n        var self = this, msg = 'You are about to cancel the creation of a new domain.<br/>If You wish to create a domain in the future,<br/>You will need to go through the regular Domain Designer.<br/>The data source, however, has successfully been saved.', confirm = $(standardConfirmTemplate);\n        confirm.find('.body').html(msg);\n        dialogs.popupConfirm.show(confirm.get(0), true, {\n            okButtonSelector: '[name=buttonOK]',\n            cancelButtonSelector: '[name=buttonCancel]'\n        }).done(function () {\n            self._closeDialog();\n            if (_.isFunction(self.options.success)) {\n                self.options.success();\n            }\n        });\n    },\n    performSave: function () {\n        var self = this;\n        this.model.save().done(function () {\n            self._closeDialog();\n            if (_.isFunction(self.options.success)) {\n                self.options.success();\n            }\n        });\n    }\n});","export default \"<label title=\\\"{{- i18n['resource.datasource.saveDomainDialog.domainNameTitle']}}\\\" class=\\\"control input text \\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDomainDialog.domainName']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" value=\\\"{{- model.label }}\\\" name=\\\"label\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDomainDialog.resourceIDTitle']}}\\\" class=\\\"control input text \\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDomainDialog.resourceID']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" {{ if (model.isEditMode) { }}readonly=\\\"readonly\\\"{{ } }} value=\\\"{{- model.name }}\\\" name=\\\"name\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDomainDialog.descriptionTitle']}}\\\" class=\\\"control textArea\\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDomainDialog.description']}}</span>\\n\\t<textarea type=\\\"text\\\" name=\\\"description\\\">{{- model.description }}</textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n{{ if (skipLocation === false) { }}\\n<div class=\\\"control groupBox treeBox\\\">\\n\\t<div class=\\\"content\\\">\\n\\t\\t<div class=\\\"header \\\">\\n\\t\\t\\t<div class=\\\"title\\\"></div>\\n\\t\\t</div>\\n        <ul class=\\\"list collapsible folders\\\"></ul>\\n\\t</div>\\n</div>\\n\\n<label class=\\\"control textArea\\\">\\n\\t<textarea type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"parentFolderUri\\\"></textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n{{ } }}\\n\\n<!--\\n<div class=\\\"control checkBox toggle\\\">\\n    <label for=\\\"__jrs_openInAdHocDesigner\\\" class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDomainDialog.openInAdhoc']}}</label>\\n    <input type=\\\"checkbox\\\" name=\\\"openInAdHocDesigner\\\" id=\\\"__jrs_openInAdHocDesigner\\\" {{ if (model.openInAdHocDesigner) { }}checked=\\\"checked\\\"{{ } }} />\\n</div>\\n-->\";","export default \"<div class=\\\"usageTooltip\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    {{- i18n['resource.datasource.createDomain.useTooltip']}}.</div>\\n\\n<div class=\\\"tableHolder\\\">\\n    <table class=\\\"table\\\" unselectable=\\\"on\\\" onselectstart=\\\"return false\\\">\\n        <tbody>\\n\\n        <tr class=\\\"header\\\">\\n            <td class=\\\"jrs-grid-cell\\\"><div class=\\\"jrs-grid-cell-content\\\">{{- i18n['resource.datasource.createDomain.table.fields.show']}}</div></td>\\n            <td class=\\\"jrs-grid-cell\\\"><div class=\\\"jrs-grid-cell-content\\\">{{- i18n['resource.datasource.createDomain.table.fields.fieldName']}}</div></td>\\n            <td class=\\\"jrs-grid-cell\\\"><div class=\\\"jrs-grid-cell-content\\\">{{- i18n['resource.datasource.createDomain.table.fields.displayLabel']}}</div></td>\\n            <td class=\\\"jrs-grid-cell\\\"><div class=\\\"jrs-grid-cell-content\\\">{{- i18n['resource.datasource.createDomain.table.fields.type']}}</div></td>\\n        </tr>\\n\\n        {{_.each(columns, function(field, y) { }}\\n        <tr class=\\\"bodyCell\\\" data-fieldId=\\\"{{- y }}\\\">\\n            <td class=\\\"jrs-grid-cell cell_1\\\">\\n                <div class=\\\"jrs-grid-cell-content\\\">\\n                    <input type=\\\"checkbox\\\" name=\\\"show\\\" {{- field.show ? \\\"checked\\\" : \\\"\\\" }} />\\n                </div>\\n            </td>\\n            <td class=\\\"jrs-grid-cell cell_2\\\">\\n                <div class=\\\"jrs-grid-cell-content\\\">\\n                    {{- field.name }}\\n                </div>\\n            </td>\\n            <td class=\\\"jrs-grid-cell cell_3\\\">\\n                <div class=\\\"jrs-grid-cell-content\\\">\\n                    <input type=\\\"text\\\" name=\\\"label\\\" value=\\\"{{- field.label }}\\\" />\\n                    <span class=\\\"message warning\\\"></span>\\n                </div>\\n            </td>\\n            <td class=\\\"jrs-grid-cell cell_4\\\">\\n                <div class=\\\"jrs-grid-cell-content\\\">\\n                    <select name=\\\"javaType\\\">\\n                    {{ _.each(javaTypes, function(javaType) { }}\\n                        <option value=\\\"{{- javaType }}\\\" {{- javaType === field.javaType ? \\\"selected\\\" : \\\"\\\"}}>{{- i18n[javaTypeMapper[javaType]]}}</option>\\n                    {{ }); }}\\n                    </select>\\n                </div>\\n            </td>\\n        </tr>\\n        {{ }); }}\\n        </tbody>\\n    </table>\\n</div>\\n\\n<div class=\\\"usageDescription\\\">{{- i18n['resource.datasource.createDomain.useTooptip.firstPart']}}.</div>\\n\\n<div class=\\\"usageDescription2\\\">{{- i18n['resource.datasource.createDomain.useTooptip.secondPart']}}.</div>\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport i18n from '../../i18n/all.properties';\nimport javaTypeMapper from 'js-sdk/src/common/enum/javaTypeMapper';\nimport javaTypes from './enum/javaTypes';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport SimpleDomainModel from './SimpleDomainModel';\nimport DialogWithModelInputValidation from 'js-sdk/src/common/component/dialog/DialogWithModelInputValidation';\nimport DomainSaveDialogView from '../saveDialog/DomainSaveDialogView';\nimport standardConfirmTemplate from 'js-sdk/src/common/templates/standardConfirm.htm';\nimport simpleDomainDialogTemplate from './template/simpleDomainDialogTemplate.htm';\nimport dialogs from '../../components/components.dialogs';\nimport {redirectToUrl} from \"../../util/utils.common\";\n\nexport default DialogWithModelInputValidation.extend({\n    hasChanges: false,\n    modelIsValid: true,\n    theDialogIsOpen: false,\n    constructor: function (options) {\n        options || (options = {});\n        this.options = options;\n        this.dataSource = options.dataSource ? options.dataSource : {};\n        var saveButtonLabel = 'resource.datasource.createDomain.save';\n        var cancelButtonLabel = 'resource.datasource.createDomain.cancel';\n        this.model = new SimpleDomainModel({}, options);\n        DialogWithModelInputValidation.prototype.constructor.call(this, {\n            modal: true,\n            model: this.model,\n            width: 400,\n            additionalCssClasses: 'dataSourceCreateNewDomainDialog',\n            title: i18n['resource.datasource.createDomain.dialogTitle'],\n            content: '',\n            buttons: [\n                {\n                    label: i18n[saveButtonLabel],\n                    action: 'save',\n                    primary: true\n                },\n                {\n                    label: i18n[cancelButtonLabel],\n                    action: 'cancel',\n                    primary: false\n                }\n            ]\n        });\n        this.on('button:save', _.bind(this._onSaveButtonClick, this));\n        this.on('button:cancel', _.bind(this._onCancelButtonClick, this));\n        this.model.on('validationPassed', _.bind(this.clearValidationErrors, this));\n        this.model.on('validationFailed', _.bind(this.validationFailed, this));\n    },\n    initialize: function (options) {\n        DialogWithModelInputValidation.prototype.initialize.apply(this, arguments);\n    },\n    updateModelProperty: function (e) {\n        var target = $(e.target), type = target.attr('type'), name = target.attr('name'), fieldId = target.parents('tr').attr('data-fieldId'), columns, value;\n        if (type === 'checkbox' || type === 'radio') {\n            value = target.is(':checked');\n        } else {\n            value = $.trim(target.val());\n        }\n        columns = this.model.get('columns');\n        columns[fieldId][name] = value;\n        this.model.set('columns', columns);\n        this.model.validate('columns');\n        if (this.hasChanges === false) {\n            this.changeButtonLabel('save', i18n['resource.datasource.createDomain.applyAndSave']);\n        }\n        this.hasChanges = true;\n    },\n    startDialog: function () {\n        var self = this;\n        if (this.theDialogIsOpen) {\n            return;\n        }\n        this.bindValidation();\n        this.model.fetchMetadata(this.dataSource).done(function () {\n            DialogWithModelInputValidation.prototype.open.apply(self, arguments);\n            var content = _.template(simpleDomainDialogTemplate, {\n                i18n: i18n,\n                javaTypes: javaTypes,\n                columns: self.model.get('columns'),\n                javaTypeMapper: javaTypeMapper\n            });\n            self.setContent(content);\n            self._center();\n        });\n        this.theDialogIsOpen = true;\n    },\n    // block default validation handlers\n    fieldIsValid: function () {\n    },\n    fieldIsInvalid: function (error) {\n    },\n    clearValidationErrors: function () {\n        this.$el.find('.error').removeClass('error');\n        this.modelIsValid = true;\n    },\n    validationFailed: function (errors) {\n        var self = this;\n        this.clearValidationErrors();\n        this.modelIsValid = false;\n        _.each(errors, function (error) {\n            var errorRow = $(self.$el.find('table tr').get(error.rowId + 1));\n            errorRow.find('[name=' + error.name + ']').parent().addClass('error');\n            errorRow.find('.message').text(i18n['resource.datasource.createDomain.validation.missing.label']);\n        });\n    },\n    _closeDialog: function () {\n        if (!this.theDialogIsOpen) {\n            return;\n        }\n        this.unbindValidation();\n        this.clearValidationErrors();\n        DialogWithModelInputValidation.prototype.close.apply(this, arguments);\n        this.theDialogIsOpen = false;\n    },\n    _onCancelButtonClick: function () {\n        var self = this, msg = i18n['resource.datasource.createDomain.cancelMessage'], confirm = $(standardConfirmTemplate);\n        confirm.find('.body').html(msg);\n        dialogs.popupConfirm.show(confirm.get(0), true, {\n            okButtonSelector: '[name=buttonOK]',\n            cancelButtonSelector: '[name=buttonCancel]'\n        }).done(function () {\n            self._closeDialog();\n            if (self.options.cancel) {\n                self.options.cancel();\n            }\n        });\n    },\n    _onSaveButtonClick: function () {\n        if (!this.modelIsValid) {\n            return;\n        }\n        this._closeDialog();\n        this.saveDialog = new DomainSaveDialogView(_.extend({}, this.options, {\n            model: this.model,\n            success: function () {\n                redirectToUrl(jrsConfigs.contextPath + '/flow.html?_flowId=repositoryConfirmFlow&resourceType=dataSource&resourceType=domain');\n            }\n        }));\n        this.saveDialog.startSaveDialog();\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport i18n from '../../i18n/all.properties';\nimport SimpleDomainView from '../fileDataSource/SimpleDomainView';\nimport BaseSaveDialogView from './BaseSaveDialogView';\nimport textDataSourceSaveDialogTemplate from './template/textDataSourceSaveDialogTemplate.htm';\n\nexport default BaseSaveDialogView.extend({\n    saveDialogTemplate: textDataSourceSaveDialogTemplate,\n    constructor: function (options) {\n        options || (options = {});\n        this.options = _.extend({}, options);\n        this.options.isEmbedded = !!this.options.saveFn;\n        BaseSaveDialogView.prototype.constructor.call(this, options);\n    },\n    initialize: function () {\n        this.preSelectedFolder = this.options.model.options.parentFolderUri;\n        BaseSaveDialogView.prototype.initialize.apply(this, arguments);\n    },\n    extendModel: function (sourceModel) {\n        var model = BaseSaveDialogView.prototype.extendModel.call(this, sourceModel);\n        model.set('prepareDataForReporting', !(this.options.isEmbedded || this.options.isEditMode));\n        return model;\n    },\n    _getLabelForSaveButton: function (model) {\n        return \"resource.datasource.saveDialog.save\";\n    },\n    _saveSuccessCallback: function (model, data) {\n        if (!!this.model.get('prepareDataForReporting')) {\n            var simpleDomainView = new SimpleDomainView({\n                cancel: this.options.success,\n                dataSource: this.model.toJSON()\n            });\n            simpleDomainView.startDialog();\n        } else {\n            if (_.isFunction(this.options.success)) {\n                this.options.success();\n            }\n        }\n        this._closeDialog();\n    }\n});","export default \"<label title=\\\"{{- i18n['resource.datasource.saveDialog.dataSourceNameTitle']}}\\\" class=\\\"control input text \\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.dataSourceName']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" value=\\\"{{- model.label }}\\\" name=\\\"label\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDialog.resourceIDTitle']}}\\\" class=\\\"control input text \\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.resourceID']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" {{ if (isEditMode) { }}readonly=\\\"readonly\\\"{{ } }} value=\\\"{{- model.name }}\\\" name=\\\"name\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDialog.descriptionTitle']}}\\\" class=\\\"control textArea\\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.description']}}</span>\\n\\t<textarea type=\\\"text\\\" name=\\\"description\\\">{{- model.description }}</textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n{{ if (skipLocation === false) { }}\\n<div class=\\\"control groupBox treeBox\\\">\\n\\t<div class=\\\"content\\\">\\n\\t\\t<div class=\\\"header \\\">\\n\\t\\t\\t<div class=\\\"title\\\"></div>\\n\\t\\t</div>\\n        <ul class=\\\"list collapsible folders\\\"></ul>\\n\\t</div>\\n</div>\\n\\n<label class=\\\"control textArea\\\">\\n\\t<textarea type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"parentFolderUri\\\"></textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n{{ } }}\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport BaseSaveDialogView from '../saveDialog/BaseSaveDialogView';\nimport TextDataSourceSaveDialogView from '../saveDialog/TextDataSourceSaveDialogView';\nimport DomainSaveDialogView from '../saveDialog/DomainSaveDialogView';\n\nvar registeredDialogs = {};\n\nregisteredDialogs['textDataSource'] = TextDataSourceSaveDialogView;\nregisteredDialogs['domain'] = DomainSaveDialogView;\n\nexport default {\n    getView: function (dataSourceType) {\n        var constructor;    // by default\n        // by default\n        constructor = BaseSaveDialogView;\n        if (registeredDialogs[dataSourceType]) {\n            constructor = registeredDialogs[dataSourceType];\n        }\n        return constructor;\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\n\nexport default Backbone.Collection.extend({\n    url: jrsConfigs.contextPath + '/rest_v2/customDataSources',\n    parse: function (response) {\n        var result = [];\n        if (response.definition) {\n            _.each(response.definition, function (type) {\n                result.push({ id: type });\n            });\n        }\n        return result;\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../i18n/all.properties';\nimport BaseDataSourceModel from './model/BaseDataSourceModel';\nimport TouchController from '../util/touch.controller';\nimport featureDetection from 'js-sdk/src/common/util/featureDetection';\nimport history from '../util/historyHelper';\nimport dataSourceViewFactory from './factory/dataSourceViewFactory';\nimport dataSourceResourceTypes from './enum/dataSourceResourceTypes';\nimport saveDialogViewFactory from './factory/saveDialogViewFactory';\nimport dataSourceMainTemplate from './template/dataSourceMainTemplate.htm';\nimport dialogErrorMessageTemplate from 'js-sdk/src/common/templates/dialogErrorPopupTemplate.htm';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport CustomDataSourcesCollection from './collection/CustomDataSourceCollection';\nimport awsSettings from '../settings/awsSettings.settings';\nimport settingsUtility from './util/settingsUtility';\nimport redirectToUrl from '../util/redirectToUrlUtil';\nimport dialogs from '../components/components.dialogs';\n\nvar CreateDomainLink = _.template(jrsConfigs.contextPath + '/domaindesigner.html?dataSource={{-resourceUri}}');\n\nexport default Backbone.View.extend({\n    dataSourceType: false,\n    dataSourceView: false,\n    saveDialog: false,\n    events: {\n        'change select[name=\\'dataSourceType\\']': 'onDataSourceTypeChange',\n        'click #saveBtn, #createDomainBtn': 'onSaveClick',\n        'click #cancelBtn': 'onCancelClick'\n    },\n    historyBackToken: 'DataSourceControllerHistory',\n    constructor: function (options) {\n        let args = Array.prototype.slice.call(arguments, 0);\n\n        // since the options object will be changed, we need to make the copy of it\n        options = $.extend(true, {}, options);\n        args[0] = options;\n        this.isEditMode = options.isEditMode;\n        Backbone.View.apply(this, args);\n    },\n    initialize: function (options) {\n        this.options = options;\n        this.dataSourceType = undefined;\n        featureDetection.supportsTouch && this.initSwipeScroll();\n        history.saveReferrer(this.historyBackToken);\n\n        // Starting the game !\n        // from the early beginning we need to have answers to 2 questions:\n        // a) what custom data sources are defined in XML files on the server ?\n        // b) are we in the editing mode ? if yes, then we need to get that model from the server\n        //\n        // As you will see below, these questions need async requests to server, and because of\n        // this we are creating two deferred objects\n        // allows us to wait till we get 'custom data sources' from xml files\n        // Starting the game !\n        // from the early beginning we need to have answers to 2 questions:\n        // a) what custom data sources are defined in XML files on the server ?\n        // b) are we in the editing mode ? if yes, then we need to get that model from the server\n        //\n        // As you will see below, these questions need async requests to server, and because of\n        // this we are creating two deferred objects\n        // allows us to wait till we get 'custom data sources' from xml files\n        this.fetchingCustomDataSourcesDeferred = $.Deferred();    // allows us to wait till we fetch the model\n        // allows us to wait till we fetch the model\n        this.fetchingTheModelDeferred = $.Deferred();    // So, fetching 'custom data sources' from the server\n        // (these 'custom data sources' defined in XML files)\n        // So, fetching 'custom data sources' from the server\n        // (these 'custom data sources' defined in XML files)\n        this.customDataSourceCollection = new CustomDataSourcesCollection();\n        this.customDataSourceCollection.fetch().done(_.bind(function () {\n            this.renderDataSourceContainer();\n        }, this));\n        var deepDefaults = settingsUtility.deepDefaults(options, { awsSettings: awsSettings });    // Also, deciding if we are in the editing mode, and if we are, then we need to fetch the model\n        // If we aren't, then we can just resolve the deferred object\n        // Also, deciding if we are in the editing mode, and if we are, then we need to fetch the model\n        // If we aren't, then we can just resolve the deferred object\n        if (this.options.resourceUri) {\n            // we are in the editing an existing DS mode, so we need to fetch it from the server\n            var self = this, modelToEdit = new BaseDataSourceModel({ uri: this.options.resourceUri });\n            modelToEdit.fetch().then(function (data, textStatus, jqXHR) {\n                self.dataSource = modelToEdit.attributes;\n                self.dataSourceType = dataSourceViewFactory.getViewType(jqXHR.getResponseHeader('Content-Type'), self.dataSource);\n                self.fetchingTheModelDeferred.resolve();\n            });\n        } else if (this.options.dataSource && this.options.dataSourceClientType) {\n            // data source and it's client type are available. So, it's edit mode and no fetching is required.\n            this.dataSource = this.options.dataSource;\n            this.dataSourceType = dataSourceViewFactory.getViewType(this.options.dataSourceClientType, this.options.dataSource);\n            this.fetchingTheModelDeferred.resolve();\n        } else {\n            // if this product working on AWS - by default we create AWS Data Source\n            if (deepDefaults.awsSettings.productTypeIsEc2) {\n                this.dataSourceType = dataSourceViewFactory.getViewType(dataSourceResourceTypes.AWS, null);\n            }\n            this.fetchingTheModelDeferred.resolve();\n        }\n    },\n    renderDataSourceContainer: function () {\n        // key in dataSourceLabelSuffixes should be equal to corresponding key in dataSourceResourceTypes\n        var dataSourceLabelSuffixes = {\n            AZURE_SQL: 'AzureSql',\n            AWS: 'Aws',\n            BEAN: 'Bean',\n            JDBC: 'JDBC',\n            JNDI: 'JNDI',\n            VIRTUAL: 'Virtual'\n        };    // fill in the pre-existent data sources\n        // fill in the pre-existent data sources\n        var dataSourceTypeOptions = _.chain(dataSourceLabelSuffixes).map(function (value, key) {\n            return {\n                value: dataSourceResourceTypes[key].toLowerCase(),\n                label: i18n['resource.dataSource.dstype' + value]\n            };\n        }).value();    // now, add custom data sources which are defined in XML files on the server\n        // now, add custom data sources which are defined in XML files on the server\n        this.customDataSourceCollection.forEach(function (element) {\n            var currentCustomDataSourceType = element.get('id');    // disable file data sources for now\n            //        if (currentCustomDataSourceType in {\"xlsDataSource\": 1, \"xlsxDataSource\": 1, \"textDataSource\":1}) {\n            //            return;\n            //        }\n            // disable file data sources for now\n            //        if (currentCustomDataSourceType in {\"xlsDataSource\": 1, \"xlsxDataSource\": 1, \"textDataSource\":1}) {\n            //            return;\n            //        }\n            dataSourceTypeOptions.push({\n                value: currentCustomDataSourceType,\n                label: i18n[currentCustomDataSourceType + '.name'] ? i18n[currentCustomDataSourceType + '.name'] : currentCustomDataSourceType\n            });\n        });    // sort them\n        // sort them\n        dataSourceTypeOptions = _.sortBy(dataSourceTypeOptions, function (option) {\n            return option.label.toLowerCase();\n        });    // and display the interface header and select of data source type\n        // and display the interface header and select of data source type\n        this.$el.append(_.template(dataSourceMainTemplate, {\n            dataSourceTypeOptions: dataSourceTypeOptions,\n            i18n: i18n,\n            supportsTouch: featureDetection.supportsTouch,\n            isEditMode: this.isEditMode\n        }));    // resolve deferred object\n        // resolve deferred object\n        this.fetchingCustomDataSourcesDeferred.resolve();\n    },\n    initSwipeScroll: function () {\n        var display = this.$('#stepDisplay');\n        display.length && new TouchController(display.parent()[0], display.parent().parent()[0], {});\n    },\n    render: function () {\n        $.when(this.fetchingCustomDataSourcesDeferred, this.fetchingTheModelDeferred).done(_.bind(function () {\n            this._render();\n        }, this));\n    },\n    _render: function () {\n        var saveParams = {};\n        if (this.dataSourceView) {\n            saveParams = {\n                label: this.dataSourceView.model.get('label'),\n                name: this.dataSourceView.model.get('name'),\n                description: this.dataSourceView.model.get('description')\n            };\n        }\n        this.dataSourceView && this.dataSourceView.remove();\n        delete this.dataSourceView;    // if we already removed view, \"body\" element was also removed, so we need to recreate it for new view manually\n        // if we already removed view, \"body\" element was also removed, so we need to recreate it for new view manually\n        if (this.$('.row.inputs .body:eq(0)').length === 0) {\n            this.$('.row.inputs > .column > .content').append('<div class=\\'body dataSourceBody\\'></div>');\n        }\n        if (!this.dataSourceType) {\n            this.dataSourceType = dataSourceResourceTypes.JDBC.toLowerCase();    // Use it for development reasons: you can pre-select any DS type\n            //this.dataSourceType = \"MongoDbDataSource\";\n        }\n        this.dataSourceView = dataSourceViewFactory.getView(_.extend(this.options, {\n            dataSourceType: this.dataSourceType,\n            dataSource: _.extend({}, this.dataSource, saveParams),\n            el: this.$('.row.inputs .body:eq(0)')\n        }));    // set specific class to help customize specific page with css styles\n        // set specific class to help customize specific page with css styles\n        this.$('.dataSourceBody').attr('dstype', this.dataSourceType.toLowerCase());\n        this.$('select[name=\\'dataSourceType\\']').val(this.dataSourceType);\n        if (this.dataSource && this.dataSource.label) {\n            this.$('.pageHeader .pageHeader-title-text').text(this.dataSource.label);\n        }\n        return this;\n    },\n    onDataSourceTypeChange: function (e) {\n        var selectedType = $(e.target).val();\n        if (this.dataSourceType != selectedType) {\n            this.dataSourceType = selectedType;\n            this.render();\n        }\n    },\n    _prepareSaveDialog: function (createDomainMode) {\n        this.saveDialog && this.saveDialog.remove();\n        var SaveDialog = saveDialogViewFactory.getView(this.dataSourceType);\n        this.saveDialog = new SaveDialog(_.extend({}, this.options, {\n            model: this.dataSourceView.model,\n            saveFn: this.options.saveFn,\n            success: _.bind(createDomainMode ? this._onSaveAndCreateDomainDone : this._onSaveDone, this),\n            error: _.bind(this._onSaveFail, this)\n        }));\n    },\n    onSaveClick: function (e) {\n        if (!this.dataSourceView.model.isValid(true)) {\n            return;\n        }\n        var self = this, createDomainMode = e && e.currentTarget.id == 'createDomainBtn', funcOnceValidationPassed = function () {\n            self._prepareSaveDialog(createDomainMode);\n            self.saveDialog.startSaveDialog();\n        };    // validationMethodOnSaveClick is moved to view in text-data-source branch,\n        // but let's have them both (in model and in a view) here till merged\n        // validationMethodOnSaveClick is moved to view in text-data-source branch,\n        // but let's have them both (in model and in a view) here till merged\n        if (!_.isUndefined(this.dataSourceView.model.validationMethodOnSaveClick)) {\n            this.dataSourceView.model.validationMethodOnSaveClick(funcOnceValidationPassed);\n            return;\n        } else if (!_.isUndefined(this.dataSourceView.validationMethodOnSaveClick)) {\n            this.dataSourceView.validationMethodOnSaveClick(funcOnceValidationPassed);\n            return;\n        }\n        funcOnceValidationPassed();\n    },\n    _onSaveDone: function () {\n        redirectToUrl.redirect(jrsConfigs.contextPath + '/flow.html?_flowId=repositoryConfirmFlow&resourceType=dataSource');\n    },\n    _onSaveAndCreateDomainDone: function (resourceModel) {\n        redirectToUrl.redirect(CreateDomainLink({ resourceUri: resourceModel.get('uri') }));\n    },\n    _onSaveFail: function (model, xhr) {\n        if (this.saveDialog) {\n            this.saveDialog.close();\n            this.saveDialog.remove();\n        }\n        var self = this, errors = false;\n        var handled = false;\n        try {\n            errors = JSON.parse(xhr.responseText);\n        } catch (e) {\n        }\n        if (!_.isArray(errors)) {\n            errors = [errors];\n        }\n        _.each(errors, function (error) {\n            var field = false, msg = false;\n            if (!error) {\n                return;\n            }\n            if (error.errorCode === 'mandatory.parameter.error') {\n                if (error.parameters && error.parameters[0]) {\n                    msg = i18n['resource.datasource.saveDialog.parameterIsMissing'];\n                    field = error.parameters[0].substr(error.parameters[0].indexOf('.') + 1);\n                }\n            } else if (error.errorCode === 'illegal.parameter.value.error') {\n                if (error.parameters && error.parameters[0]) {\n                    field = error.parameters[0].substr(error.parameters[0].indexOf('.') + 1);\n                    msg = i18n['resource.datasource.saveDialog.parameterIsWrong'];\n                }\n            }    // converting field names\n            // converting field names\n            if (field === 'ConnectionUrl') {\n                field = 'connectionUrl';\n            }\n            if (msg && field) {\n                self.dataSourceView.invalidField('[name=' + field + ']', msg);\n                handled = true;\n            }\n        });\n        if (handled === false) {\n            // otherwise, proceed with common error handling\n            var errTempl = _.template(dialogErrorMessageTemplate, {\n                message: 'Failed to save data source.',\n                errorCode: errors[0] ? errors[0].errorCode : null,\n                errorMsg: errors.message,\n                respText: xhr.responseText\n            });\n            dialogs.errorPopup.show(errTempl);\n        }\n    },\n    onCancelClick: function () {\n        if (this.options.cancelFn) {\n            this.options.cancelFn();\n        } else {\n            history.restore(this.historyBackToken);\n        }\n    }\n});","export default \"<div class=\\\"column decorated primary addNewDataSource\\\">\\n\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"content hasFooter\\\">\\n        <div class=\\\"pageHeader\\\">\\n            <div class=\\\"pageHeader-title\\\">\\n                <div class=\\\"pageHeader-title-icon\\\">\\n                    <span class=\\\"icon datasource\\\"></span>\\n                </div>\\n                <div class=\\\"pageHeader-title-text\\\">\\n                    {{ if (!isEditMode) { }}\\n                    {{- i18n['resource.dataSource.title.new'] }}\\n                    {{ } }}\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"body {{ if (supportsTouch) { }}swipeScroll{{ } }}\\\">\\n            <div id=\\\"stepDisplay\\\">\\n                <fieldset class=\\\"row instructions\\\">\\n                    <legend class=\\\"offLeft\\\"><span>{{- i18n[\\\"resource.dataSource.instructions\\\"] }}</span></legend>\\n                    <h2 class=\\\"textAccent02\\\">\\n                        {{ if (isEditMode) { }}\\n                        {{- i18n[\\\"resource.dataSource.instructions.form.header.edit\\\"] }}\\n                        {{ } else { }}\\n                        {{- i18n[\\\"resource.dataSource.instructions1\\\"] }}\\n                        {{ } }}\\n\\n                    </h2>\\n                </fieldset>\\n\\n                <fieldset class=\\\"row inputs oneColumn\\\">\\n                    <legend class=\\\"offLeft\\\"><span>{{- i18n[\\\"resource.dataSource.inputs\\\"] }}</span></legend>\\n                    <div class=\\\"column primary\\\">\\n                        <div class=\\\"content\\\">\\n                            <div class=\\\"header\\\">\\n                                <div class=\\\"title {{ if (isEditMode) { }}disabled{{ } }}\\\">{{- i18n[\\\"resource.dataSource.type\\\"] }}</div>\\n                                <label class=\\\"control select inline\\\" title=\\\"{{- i18n['resource.dataSource.dsType'] }}\\\">\\n                                    <span class=\\\"wrap offLeft\\\">{{- i18n['resource.dataSource.dsType'] }}</span>\\n                                    <select name=\\\"dataSourceType\\\" {{ if (isEditMode) { }}disabled=\\\"disabled\\\"{{ } }}>\\n                                        {{ _.each(dataSourceTypeOptions, function(option) { }}\\n                                        <option value=\\\"{{- option.value }}\\\">{{- option.label }}</option>\\n                                        {{ }); }}\\n                                    </select>\\n                                    <span class=\\\"message warning\\\"></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"body dataSourceBody\\\"></div>\\n                        </div>\\n                    </div>\\n                </fieldset>\\n            </div>\\n        </div>\\n        <div class=\\\"footer \\\">\\n            <fieldset id=\\\"wizardNav\\\">\\n                <button class=\\\"button primary action up\\\" id=\\\"saveBtn\\\"><span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.save'] }}</span><span class=\\\"icon\\\"></span></button>\\n                <button class=\\\"button up action\\\" id=\\\"cancelBtn\\\"><span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.cancel'] }}</span><span class=\\\"icon\\\"></span></button>\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n\";"],"sourceRoot":""}