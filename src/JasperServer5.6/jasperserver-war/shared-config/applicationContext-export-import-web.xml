<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (C) 2005 - 2014 TIBCO Software Inc. All rights reserved.
  ~ http://www.jaspersoft.com.
  ~
  ~ Unless you have purchased  a commercial license agreement from Jaspersoft,
  ~ the following license terms  apply:
  ~
  ~ This program is free software: you can redistribute it and/or  modify
  ~ it under the terms of the GNU Affero General Public License  as
  ~ published by the Free Software Foundation, either version 3 of  the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Affero  General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public  License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       xmlns:util="http://www.springframework.org/schema/util"
       default-lazy-init="true">

    <bean id="exportImportModuleRegister" class="com.jaspersoft.jasperserver.export.modules.ModuleRegisterImpl" scope="prototype">
        <property name="exporterModules">
            <list>
                <ref bean="tenantExporterModule"/>
                <ref bean="authorityExporterModule"/>
                <ref bean="resourceExporterModule"/>
                <ref bean="calendarsExporterModule"/>
                <ref bean="reportJobsExporterModule"/>
                <ref bean="accessEventsExporterModule"/>
            </list>
        </property>
        <property name="importerModules">
            <list>
                <ref bean="tenantImporterModule"/>
                <ref bean="authorityImporterModule"/>
                <ref bean="resourceImporterModule"/>
                <ref bean="calendarsImporterModule"/>
                <ref bean="reportJobsImporterModule"/>
                <ref bean="accessEventsImporterModule"/>
            </list>
        </property>
    </bean>

    <!-- authority  module -->

    <bean id="authorityExporterModule" class="com.jaspersoft.jasperserver.export.modules.auth.AuthorityExporter"
          parent="baseExporterModule" scope="prototype">
        <property name="id" value="authority"/>
        <property name="usersArgument" value="users"/>
        <property name="rolesArgument" value="roles"/>
        <property name="includeRoleUsersArgument" value="role-users"/>
        <property name="includeUsersRolesArgument" value="users-roles"/>
        <property name="configuration" ref="authorityModuleConfiguration"/>
    </bean>

    <bean id="authorityImporterModule" class="com.jaspersoft.jasperserver.export.modules.auth.AuthorityImporter" scope="prototype">
        <property name="id" value="authority"/>
        <property name="configuration" ref="authorityModuleConfiguration"/>
        <property name="updateArg" value="update"/>
        <property name="skipUpdateArg" value="skip-user-update"/>
    </bean>

    <bean id="authorityModuleConfiguration"
          class="com.jaspersoft.jasperserver.export.modules.auth.AuthorityModuleConfiguration" scope="prototype">
        <property name="authorityService" ref="${bean.userAuthorityService}"/>
        <property name="attributeService" ref="profileAttributeServiceTarget"/>
        <property name="roleIndexElementName" value="role"/>
        <property name="userIndexElementName" value="user"/>
        <property name="usersDirName" value="users"/>
        <property name="rolesDirName" value="roles"/>
        <property name="serializer" ref="authorityCastorSerializer"/>
    </bean>

    <bean id="authorityCastorSerializer" class="com.jaspersoft.jasperserver.export.io.CastorSerializer">
        <property name="castorMappings">
            <list>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/auth/User.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/auth/Role.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/common/ProfileAttribute.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/common/TenantQualifiedName.xml</value>
            </list>
        </property>
    </bean>

    <!-- resource module -->

    <bean id="resourceExporterModule" class="com.jaspersoft.jasperserver.export.modules.repository.ResourceExporter" parent="baseExporterModule" scope="prototype">
        <property name="id" value="repositoryResources"/>
        <property name="configuration" ref="resourceModuleConfiguration"/>
        <property name="tenantService" ref="tenantService"/>
        <property name="unavailableExportOperationMessage" value="ji.export.organization.unsupported.operation"/>
        <property name="urisArgument" value="uris"/>
        <property name="permissionsArgument" value="repository-permissions"/>
        <property name="includeSettingsArg" value="include-server-settings"/>
    </bean>

    <bean id="resourceImporterModule" class="com.jaspersoft.jasperserver.export.modules.repository.ResourceImporter" scope="prototype">
        <property name="id" value="repositoryResources"/>
        <property name="configuration" ref="resourceModuleConfiguration"/>
        <property name="tenantService" ref="tenantService"/>
        <property name="prependPathArg" value="prepend-path"/>
        <property name="updateArg" value="update"/>
        <property name="includeSettingsArg" value="include-server-settings"/>
        <property name="skipThemesArgument" value="skip-themes"/>
    </bean>

    <bean id="resourceModuleConfiguration" class="com.jaspersoft.jasperserver.export.modules.repository.ResourceModuleConfiguration" scope="prototype">
        <property name="repository" ref="repositoryService"/>
        <property name="resourcesDirName" value="resources"/>
        <property name="folderDetailsFileName" value=".folder.xml"/>
        <property name="folderIndexElement" value="folder"/>
        <property name="resourceIndexElement" value="resource"/>
        <property name="uriOfSettingsList" value="/properties/GlobalPropertiesList"/>
        <property name="castorBeanMappings" ref="resourceBeanMappings"/>
        <property name="serializer" ref="repositorySerializer"/>
        <property name="resourceDataProviders">
            <map>
                <entry key="fileResourceData" value-ref="fileResourceDataProvider"/>
                <entry key="contentResourceData" value-ref="contentResourceDataProvider"/>
                <entry key="olapUnitViewOptions" value-ref="olapUnitViewOptionsDataProvider"/>
            </map>
        </property>
        <property name="permissionService" ref="objectPermissionServiceUnsecure"/>
        <property name="authorityService" ref="${bean.userAuthorityService}"/>
        <property name="permissionRecipientRole" value="role"/>
        <property name="permissionRecipientUser" value="user"/>
        <property name="reportParametersTranslator"><ref local="defaultReportParametersTranslator"/></property>
        <property name="jdbcDriverService" ref="jdbcDriverService"/>
    </bean>

    <bean id="repositorySerializer" class="com.jaspersoft.jasperserver.export.io.CastorSerializer">
        <property name="castorMappings">
            <list>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/Resource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/JdbcDataSource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/JndiJdbcDataSource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/AwsDataSource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/VirtualDataSource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/BeanDataSource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/CustomDataSource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/Query.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/DataType.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/ListOfValues.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/InputControl.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/FileResource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/ReportUnit.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/ContentResource.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/MondrianConnection.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/XmlaConnection.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/MondrianXmlaDefinition.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/OlapUnit.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/Folder.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/common/TenantQualifiedName.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/repository/ObjectPermission.xml</value>
            </list>
        </property>
    </bean>

    <bean id="fileResourceDataProvider" class="com.jaspersoft.jasperserver.export.modules.repository.FileResourceDataProvider" scope="prototype">
        <property name="filenameSuffix" value=".data"/>
        <property name="repository" ref="repositoryService"/>
    </bean>

    <bean id="contentResourceDataProvider" class="com.jaspersoft.jasperserver.export.modules.repository.ContentResourceDataProvider" scope="prototype">
        <property name="filenameSuffix" value=""/>
        <property name="repository" ref="repositoryService"/>
    </bean>

    <bean id="olapUnitViewOptionsDataProvider" class="com.jaspersoft.jasperserver.export.modules.repository.OlapUnitViewOptionsDataProvider" scope="prototype">
        <property name="filenameSuffix" value=".view.options"/>
    </bean>

    <bean id="resourceBeanMappings" class="com.jaspersoft.jasperserver.api.common.service.impl.ImplementationClassObjectFactoryImpl">
        <property name="objectFactory" ref="objectFactory"/>
        <property name="implementationClassMappings">
            <map>
                <entry key="com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.JdbcReportDataSource"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.JdbcDataSourceBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.JndiJdbcReportDataSource"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.JndiJdbcDataSourceBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.AwsReportDataSource"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.AwsDataSourceBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.VirtualReportDataSource"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.VirtualDataSourceBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.BeanReportDataSource"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.BeanDataSourceBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.CustomReportDataSource"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.CustomDataSourceBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.common.domain.Query"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.QueryBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.common.domain.DataType"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.DataTypeBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.common.domain.ListOfValues"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.ListOfValuesBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.common.domain.InputControl"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.InputControlBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.common.domain.FileResource"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.FileResourceBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.ReportUnit"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.ReportUnitBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.common.domain.ContentResource"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.ContentResourceBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.olap.domain.MondrianConnection"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.MondrianConnectionBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.olap.domain.XMLAConnection"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.XmlaConnectionBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.olap.domain.MondrianXMLADefinition"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.MondrianXmlaDefinitionBean"/>
                <entry key="com.jaspersoft.jasperserver.api.metadata.olap.domain.OlapUnit"
                       value="com.jaspersoft.jasperserver.export.modules.repository.beans.OlapUnitBean"/>
            </map>

        </property>
    </bean>

    <!-- tenant module -->

    <bean name="tenantExporterModule"
          class="com.jaspersoft.jasperserver.export.modules.mt.TenantExporter"
          parent="baseExporterModule" scope="prototype">
        <property name="id"><value>tenants</value></property>
        <property name="moduleConfiguration"><ref bean="tenantModuleConfiguration"/></property>
    </bean>

    <bean name="tenantImporterModule"
          class="com.jaspersoft.jasperserver.export.modules.mt.TenantImporter" scope="prototype">
        <property name="id"><value>tenants</value></property>
        <property name="updateArg" value="update"/>
        <property name="moduleConfiguration"><ref bean="tenantModuleConfiguration"/></property>
    </bean>

    <bean name="tenantModuleConfiguration"
          class="com.jaspersoft.jasperserver.export.modules.mt.TenantModuleConfiguration" scope="prototype">
        <property name="tenantsArgument">
            <value>organizations</value>
        </property>
        <property name="tenantsDirectory">
            <value>organizations</value>
        </property>
        <property name="tenantIndexElement">
            <value>organization</value>
        </property>
        <property name="tenantExportConfiguration">
            <ref bean="defaultTenantExportConfiguration" />
        </property>
        <property name="tenantService">
            <ref bean="tenantService"/>
        </property>
        <property name="tenantSerializer">
            <ref bean="tenantSerializer"/>
        </property>
    </bean>

    <bean id="tenantSerializer" class="com.jaspersoft.jasperserver.export.io.CastorSerializer">
        <property name="castorMappings">
            <list>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/mt/Tenant.xml</value>
            </list>
        </property>
    </bean>

    <bean id="defaultTenantExportConfiguration"
          class="com.jaspersoft.jasperserver.export.modules.mt.DefaultTenantExportConfiguration">
        <property name="qualifiedNameSeparator" value="|" />
        <property name="rootTenantId" value="organizations" />
        <property name="defaultThemeName">
            <util:property-path path="configurationBean.themeDefaultName"/>
        </property>
    </bean>

    <!-- access events -->

    <bean id="accessEventsExporterModule" class="com.jaspersoft.jasperserver.export.modules.logging.access.AccessEventsExporter" parent="baseExporterModule" scope="prototype">
        <property name="id" value="accessEvents"/>
        <property name="accessModuleConfiguration" ref="accessModuleConfiguration"/>
        <property name="maxEventsPerIteration" value="50"/>
        <property name="includeAccessEvents" value="include-access-events"/>
    </bean>

    <bean id="accessEventsImporterModule" class="com.jaspersoft.jasperserver.export.modules.logging.access.AccessEventsImporter" scope="prototype">
        <property name="id" value="accessEvents"/>
        <property name="accessEventsImportHandler" ref="accessEventsImportHandler"/>
        <property name="accessModuleConfiguration" ref="accessModuleConfiguration"/>
        <property name="clientClassFactory" ref="mappingResourceFactory"/>
        <property name="logAccessEventsInterval" value="50"/>
        <property name="includeAccessEvents" value="include-access-events"/>
    </bean>

    <bean id="accessModuleConfiguration" class="com.jaspersoft.jasperserver.export.modules.logging.access.AccessModuleConfiguration" scope="prototype">
        <property name="accessService" ref="accessService"/>
        <property name="accessEventsDirectory" value="accessEvents"/>
        <property name="accessEventIndexElement" value="accessEventsCount"/>
        <property name="serializer" ref="accessEventsSerializer"/>
    </bean>

    <bean id="accessEventsSerializer"  class="com.jaspersoft.jasperserver.export.io.CastorSerializer">
        <property name="castorMappings">
            <list>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/logging/access/AccessEvent.xml</value>
            </list>
        </property>
    </bean>

    <bean id="accessEventsImportHandler" class="com.jaspersoft.jasperserver.export.modules.logging.access.AccessEventsImportHandlerImpl">
        <property name="hibernateRepositoryService" ref="repositoryService"/>
        <property name="userAuthorityService" ref="${bean.userAuthorityService}"/>
    </bean>


    <!-- report jobs -->

    <bean id="reportJobsExporterModule" class="com.jaspersoft.jasperserver.export.modules.scheduling.ReportJobsExporter" parent="baseExporterModule" scope="prototype">
        <property name="id" value="reportJobs"/>
        <property name="configuration" ref="reportJobsConfiguration"/>
        <property name="reportJobsArg" value="report-jobs"/>
        <property name="urisArg" value="uris"/>
    </bean>

    <bean id="reportJobsImporterModule" class="com.jaspersoft.jasperserver.export.modules.scheduling.ReportJobsImporter" scope="prototype">
        <property name="id" value="reportJobs"/>
        <property name="configuration" ref="reportJobsConfiguration"/>
        <property name="prependPathArg" value="prepend-path"/>
    </bean>

    <bean id="reportJobsConfiguration" class="com.jaspersoft.jasperserver.export.modules.scheduling.SchedulingModuleConfiguration" scope="prototype">
        <property name="repository" ref="repositoryService"/>
        <property name="reportScheduler" ref="reportSchedulingService"/>
        <property name="reportJobsScheduler" ref="reportScheduler"/>
        <property name="internalReportScheduler" ref="reportSchedulingInternalService"/>
        <property name="authorityService" ref="${bean.userAuthorityService}"/>
        <property name="serializer" ref="reportJobsSerializer"/>
        <property name="reportJobsDir" value="reportJobs"/>
        <property name="calendarsDir" value="calendars"/>
        <property name="indexReportUnitElement" value="report"/>
        <property name="reportUnitIndexFilename" value="index.xml"/>
        <property name="indexCalendarElement" value="calendar"/>
        <property name="reportParametersTranslator"><ref local="defaultReportParametersTranslator"/></property>
        <property name="allowReportsUnitsUrisOnly"><value type="boolean">false</value></property>
    </bean>

    <bean id="reportJobsSerializer" class="com.jaspersoft.jasperserver.export.io.CastorSerializer">
        <property name="castorMappings">
            <list>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/scheduling/ReportJob.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/scheduling/Calendar.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/scheduling/ReportUnitIndex.xml</value>
                <value>classpath:com/jaspersoft/jasperserver/export/mapping/common/ReportParameterValue.xml</value>
            </list>
        </property>
    </bean>

    <!-- calendars -->
    <bean id="calendarsExporterModule" class="com.jaspersoft.jasperserver.export.modules.scheduling.CalendarsExporter" parent="baseExporterModule" scope="prototype">
        <property name="id" value="calendars"/>
        <property name="configuration" ref="reportJobsConfiguration"/>
        <property name="calendarsArg" value="calendars"/>
    </bean>

    <bean id="calendarsImporterModule" class="com.jaspersoft.jasperserver.export.modules.scheduling.CalendarsImporter" scope="prototype">
        <property name="id" value="calendars"/>
        <property name="configuration" ref="reportJobsConfiguration"/>
        <property name="updateArg" value="update"/>
    </bean>

    <!-- Exporter-Importer -->

    <bean id="baseExporterImporter" class="com.jaspersoft.jasperserver.export.BaseExporterImporter" abstract="true">
   		<property name="indexFilename" value="index.xml"/>
   		<property name="indexRootElementName" value="export"/>
   		<property name="indexModuleElementName" value="module"/>
   		<property name="indexModuleIdAttributeName" value="id"/>
        <property name="moduleRegister" ref="${bean.moduleRegister}"/>
   		<property name="encodingProvider" ref="encodingProvider"/>
   		<property name="propertyElementName" value="property"/>
   		<property name="propertyNameAttribute" value="name"/>
   		<property name="propertyValueAttribute" value="value"/>
      	<property name="jsVersion" value="${property.jsVersion}"/>
   	</bean>

    <bean id="exporterPrototype" class="com.jaspersoft.jasperserver.export.ExporterImpl" scope="prototype" parent="baseExporterImporter">
        <property name="xmlVersion" value="1.0"/>
    </bean>

    <bean id="importerPrototype" class="com.jaspersoft.jasperserver.export.ImporterImpl" scope="prototype" parent="baseExporterImporter"/>

    <!-- path processors -->

    <bean id="zipPathProcessorFactory" class="com.jaspersoft.jasperserver.export.io.SimplePathProcessorFactory">
        <property name="defaultInputProcessor" value="none"/>
        <property name="defaultOutputProcessor" value="zip"/>
        <property name="processors">
            <map>
                <entry key="none"><ref local="identityPathProcessor"/></entry>
                <entry key="zip"><ref local="asciiEscapingPathProcessor"/></entry>
                <entry key="basic"><ref local="identityPathProcessor"/></entry>
                <entry key="file"><ref local="asciiEscapingPathProcessor"/></entry>
            </map>
        </property>
    </bean>

    <bean id="identityPathProcessor" class="com.jaspersoft.jasperserver.export.io.IdentityPathProcessor"/>

	<bean id="asciiEscapingPathProcessor" class="com.jaspersoft.jasperserver.export.io.AsciiEscapingPathProcessor">
		<property name="escapeChar" value="-"/>
	</bean>

	<bean id="fileSeparatorPathProcessor" class="com.jaspersoft.jasperserver.export.io.FileSeparatorPathProcessor"/>

	<bean id="filePathProcessor" class="com.jaspersoft.jasperserver.export.io.PathProcessorChain">
		<property name="processors">
			<list>
				<ref local="asciiEscapingPathProcessor"/>
				<ref local="fileSeparatorPathProcessor"/>
			</list>
		</property>
	</bean>

    <!-- Misc -->

    <bean id="baseExporterModule" class="com.jaspersoft.jasperserver.export.modules.BaseExporterModule" abstract="true">
        <property name="everythingArg" value="everything"/>
    </bean>

    <bean id="defaultReportParametersTranslator" class="com.jaspersoft.jasperserver.export.modules.common.DefaultReportParametersTranslator">
        <property name="repository" ref="repositoryService"/>
        <property name="reportLoadingService" ref="importReportLoadingService"/>
    </bean>

    <bean id="importReportLoadingService" parent="reportLoadingService">
        <property name="repositoryService" ref="repositoryService"/>
    </bean>

    <!-- Services -->

    <bean id="importExportService" class="com.jaspersoft.jasperserver.export.service.impl.ImportExportServiceImpl">
        <lookup-method name="getExporter" bean="exporterPrototype"/>
        <lookup-method name="getImporter" bean="importerPrototype"/>
        <property name="pathProcessorFactory" ref="zipPathProcessorFactory"/>
    </bean>

    <alias name="${bean.importExportService}" alias="synchImportExportService"/>

    <bean id="basicTaskManager" class="com.jaspersoft.jasperserver.remote.services.async.BasicTasksManager"/>

</beans>
