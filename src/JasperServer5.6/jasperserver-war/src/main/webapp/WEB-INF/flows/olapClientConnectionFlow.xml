<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance"
      ns0:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
      start-state="initAction">

    <input name="connectionWrapper"/>
    <input name="currentOlapClientConnection"/>
    <input name="parentFolder"/>
    <input name="isEdit"/>

    <action-state id="initAction">
        <evaluate expression="olapClientConnectionAction"/>
        <transition on="success" to="testMode"/>
    </action-state>

    <decision-state id="testMode">
        <if test="flowScope.connectionWrapper.aloneNewMode" then="chooseConnectionType"/>
        <if test="flowScope.connectionWrapper.subNewMode" then="chooseMondrianSource"/>
        <if test="flowScope.connectionWrapper.subEditMode" then="decideType" else="chooseConnectionType"/>
    </decision-state>

    <!-- add new connection -->
    <view-state id="chooseConnectionType" view="modules/addResource/analysisClientConnection/connectionType" >
        <on-entry>
            <set name="flowScope.prevForm" value="'chooseConnectionType'"/>
        </on-entry>
        <transition on="NextMondrian" to="handleTypeSelection">
            <evaluate expression="olapClientConnectionAction.bindAndValidate">
                <attribute name="validatorMethod" value="validateConnectionType"/>
            </evaluate>
            <evaluate expression="olapClientConnectionAction.bindAndValidate">
                <attribute name="validatorMethod" value="validateNameLabelDesc"/>
            </evaluate>
        </transition>
        <transition on="NextXmla" to="handleTypeSelection">
            <evaluate expression="olapClientConnectionAction.bindAndValidate">
                <attribute name="validatorMethod" value="validateConnectionType"/>
            </evaluate>
            <evaluate expression="olapClientConnectionAction.bindAndValidate">
                <attribute name="validatorMethod" value="validateNameLabelDescAndXmlaSource"/>
            </evaluate>
        </transition>
        <transition on="changeCombo" to="chooseConnectionType">
            <evaluate expression="olapClientConnectionAction.bind"/>
        </transition>
        <transition on="testXMLAConnection" to="testXMLAConnection">
            <evaluate expression="olapClientConnectionAction.bind"/>
        </transition>
        <transition on="Back" to="backFromChooseConnectionType"/>
        <transition on="Cancel" to="cancel"/>
    </view-state>

    <action-state id="testXMLAConnection">
        <evaluate expression="olapClientConnectionAction"/>
        <transition on="success" to="ajaxView"/>
    </action-state>

    <action-state id="handleTypeSelection">
        <evaluate expression="olapClientConnectionAction"/>
        <transition on="success" to="decideType1"/>
        <transition on="error" to="displayError"/>
    </action-state>

    <decision-state id="decideType">
        <if test="flowScope.connectionWrapper.type==flowScope.constants.OlapMondrianConnectionType"
            then="createMondrianConnectionTest"/>
        <if test="flowScope.connectionWrapper.type==flowScope.constants.OlapXmlaConnectionType"
            then="createXmlaConnectionTest" else="displayError"/>
    </decision-state>

     <decision-state id="decideType1">
        <if test="flowScope.connectionWrapper.type==flowScope.constants.OlapMondrianConnectionType"
            then="locateSchemaResource"/>
        <if test="flowScope.connectionWrapper.type==flowScope.constants.OlapXmlaConnectionType"
            then="saveOlapConnection" else="displayError"/>
    </decision-state>

    <!-- mondrian connection -->
    <decision-state id="createMondrianConnectionTest">
        <if test="flowScope.connectionWrapper.subflowMode" then="chooseMondrianSource" else="locateSchemaResource"/>
    </decision-state>

    <!-- reuse existing connection -->
    <view-state id="chooseMondrianSource" view="modules/addResource/analysisClientConnection/analysisClientConnectionMondrianLocate">
        <on-entry>
            <set name="flowScope.prevForm" value="'chooseMondrianSource'"/>
        </on-entry>
        <transition on="next" to="validateSource"/>
        <transition on="back" to="backFromChooseConnectionSource"/>
        <transition on="cancel" to="cancel"/>
        <transition on="changeCombo" to="decideType">
            <evaluate expression="olapClientConnectionAction.bind"/>
        </transition>
    </view-state>

    <action-state id="validateSource">
        <evaluate expression="olapClientConnectionAction.bindAndValidate">
            <attribute name="validatorMethod" value="validateResourceExists"/>
        </evaluate>
        <transition on="success" to="decideMondrianSource"/>
        <transition on="error" to="initAction"/>
    </action-state>

    <decision-state id="decideMondrianSource">
         <if test="flowScope.connectionWrapper.source==flowScope.constants.FieldChoiceLocal and flowScope.connectionWrapper.subflowMode"
            then="chooseConnectionType" else="saveMondrianConnection"/>
    </decision-state>

    <!-- xmla connection -->
    <decision-state id="createXmlaConnectionTest">
        <if test="flowScope.connectionWrapper.subflowMode" then="chooseXmlaSource" else="saveOlapConnection"/>
    </decision-state>

    <!-- reuse existing connection -->
    <view-state id="chooseXmlaSource" view="modules/addResource/analysisClientConnection/analysisClientConnectionXmlLocate">
        <on-entry>
            <set name="flowScope.prevForm" value="'chooseXmlaSource'"/>
        </on-entry>
        <transition on="next" to="decideXmlaSource">
            <evaluate expression="olapClientConnectionAction.bindAndValidate">
                <attribute name="validatorMethod" value="validateResourceExists"/>
            </evaluate>
        </transition>
        <transition on="back" to="backFromChooseConnectionSource"/>
        <transition on="cancel" to="cancel"/>
        <transition on="changeCombo" to="decideType">
            <evaluate expression="olapClientConnectionAction.bind"/>
        </transition>
    </view-state>

    <decision-state id="backFromChooseConnectionSource">
        <if test="flowScope.connectionWrapper.subflowMode" then="back" else="chooseConnectionType"/>
        <!--<if test="flowScope.connectionWrapper.subNewMode" then="cancel" else="chooseConnectionType"/>-->
    </decision-state>

    <decision-state id="backFromChooseConnectionType">
        <if test="flowScope.connectionWrapper.subflowMode" then="chooseMondrianSource" else="back"/>
    </decision-state>

    <decision-state id="decideXmlaSource">
        <if test="flowScope.connectionWrapper.source==flowScope.constants.FieldChoiceLocal" then="chooseConnectionType"
            else="saveXmlaConnection"/>
    </decision-state>

    <decision-state id="backFromCreateXmlaConnection">
        <if test="flowScope.connectionWrapper.subflowMode" then="back" else="chooseConnectionType"/>
        <!--<if test="flowScope.connectionWrapper.subNewMode" then="chooseConnectionType" else="back"/>-->
    </decision-state>

    <!-- mondrian schema resource -->
    <action-state id="locateSchemaResource">
        <evaluate expression="olapClientConnectionAction"/>
        <transition on="success" to="olapSchemaResourceSubFlow"/>
    </action-state>

    <subflow-state id="olapSchemaResourceSubFlow" subflow="fileResourceFlow">
        <input name="fileType" value="'olapMondrianSchema'"/>
        <input name="fileResource" value="flowScope.fileResource"/>
        <input name="masterFlow" value="'olapClientConnection'"/>
        <output name="fileResource"/>
        <transition on="finish" to="saveSchemaResource"/>
        <transition on="cancel" to="cancel"/>
        <transition on="backToSearch" to="backToSearch"/>
        <transition on="back" to="chooseConnectionType"/>
        <transition on="displayError" to="displayError"/>
    </subflow-state>

    <action-state id="saveSchemaResource">
        <evaluate expression="olapClientConnectionAction"/>
        <transition on="success" to="locateDataSource"/>
        <transition on="error" to="displayError"/>
    </action-state>

    <!-- datasource -->
    <decision-state id="decideDataSource">
        <if test="flowScope.dataResource.source == 'CONTENT_REPOSITORY' or flowScope.dataResource.source == 'NONE'"
            then="saveDatasource" else="dataSourceSubFlow"/>
    </decision-state>

    <view-state id="locateDataSource" view="modules/addResource/analysisClientConnection/analysisClientConnectionDataSourceLocate">
        <on-entry>
            <evaluate expression="olapClientConnectionAction"/>
        </on-entry>
        <transition on="back" to="locateSchemaResource"/>
        <transition on="next" to="decideDataSource" >
            <set name="flowScope.dataResource.source" value="requestParameters.source" />
            <set name="flowScope.dataResource.selectedUri" value="requestParameters.selectedUri" />
        </transition>
        <transition on="cancel" to="cancel" />
        <transition on="error" to="displayError"/>
    </view-state>

    <subflow-state id="dataSourceSubFlow" subflow="addDataSourceFlow">
        <input name="masterFlow" value="'olapClientConnection'"/>
        <input name="dataResource" value="flowScope.dataResource"/>
        <output name="dataResource"/>
        <transition on="done" to="saveDatasource"/>
        <transition on="cancel" to="locateDataSource"/>
        <transition on="back" to="locateDataSource"/>
        <transition on="displayError" to="displayError"/>
    </subflow-state>

    <action-state id="saveDatasource">
        <evaluate expression="olapClientConnectionAction"/>
        <transition on="success" to="validateOlapConnectionTest"/>
        <transition on="no" to="dataSourceSubFlow"/>
        <transition on="error" to="displayError"/>
    </action-state>

    <decision-state id="validateOlapConnectionTest">
        <if test="flowScope.connectionWrapper.aloneNewMode" then="saveOlapConnection"/>
        <if test="flowScope.connectionWrapper.aloneEditMode" then="saveOlapConnection" else="saveOlapConnection"/>
    </decision-state>

    <!-- save connection -->
    <decision-state id="saveOlapConnection">
        <if test="flowScope.connectionWrapper.type==flowScope.constants.OlapMondrianConnectionType"
            then="saveMondrianConnection"/>
        <if test="flowScope.connectionWrapper.type==flowScope.constants.OlapXmlaConnectionType"
            then="saveXmlaConnection" else="displayError"/>
    </decision-state>

    <action-state id="saveMondrianConnection">
        <evaluate expression="olapClientConnectionAction"/>
        <transition on="yes" to="backToSearch"/>
        <transition on="success" to="saved"/>
        <transition on="error" to="displayError"/>
    </action-state>

    <action-state id="saveXmlaConnection">
        <evaluate expression="olapClientConnectionAction"/>
        <transition on="yes" to="backToSearch"/>
        <transition on="success" to="saved"/>
        <transition on="error" to="displayError"/>
    </action-state>

    <end-state id="displayError"/>

    <end-state id="back"/>

    <end-state id="cancel" view="flowRedirect:searchFlow?lastMode=true"/>

    <end-state id="saved">
        <output name="connectionWrapper"/>
    </end-state>

    <end-state id="backToSearch" view="flowRedirect:searchFlow"/>

    <!-- exceptions handling -->
    <decision-state id="backFromError">
        <if test="not (flowScope.prevForm == null or flowScope.prevForm == '')" then="${flowScope.prevForm}"
            else="saved"/>
    </decision-state>

    <view-state id="errorPage" view="modules/system/errorPage"/>

    <!-- ajax views -->
    <view-state id="ajaxView" view="ajax/ajaxresponse"/>
    <view-state id="ajaxError" view="ajax/ajaxerror"/>

    <global-transitions>
        <transition on="backFromErrorPage" to="backFromError"/>
        <transition on-exception="java.lang.Throwable" to="errorPage"/>
    </global-transitions>

    <!-- end exceptions handling -->
    <bean-import resource="spring-config.xml"/>
    <bean-import resource="olapClientConnectionBeans.xml"/>
    <bean-import resource="reportDataSourceBeans.xml"/>

</flow>