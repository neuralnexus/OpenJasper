<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
    xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>JasperServer UI application</display-name>
    
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>jasperserver.root</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>
    
    <!-- listener to load the root application context -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext*.xml</param-value>
    </context-param>

    <context-param>
        <param-name>contextClass</param-name>
        <param-value>com.jaspersoft.jasperserver.war.util.JSWebApplicationContext</param-value>
    </context-param>

    <!-- resources initializer -->
    <listener>
      <listener-class>com.tonbeller.tbutils.res.ResourcesFactoryContextListener</listener-class>
    </listener>

    <!-- optional? now in JPivot by default  -->
    <context-param>
      <param-name>contextFactory</param-name>
      <param-value>com.tonbeller.wcf.controller.RequestContextFactoryImpl</param-value>
    </context-param>
    
    <!-- Close JDBC connections on end of session -->
    <listener>
        <listener-class>com.jaspersoft.jasperserver.war.OlapSessionKiller</listener-class>
    </listener>

    <!-- SecurityContextHolder.setStrategyName(MODE_INHERITABLETHREADLOCAL) -->
    <listener>
        <listener-class>com.jaspersoft.jasperserver.war.util.SecurityContextHolderStrategyInitializer</listener-class>
    </listener>

    <listener>
        <display-name>Session mutex</display-name>
        <listener-class>org.springframework.web.util.HttpSessionMutexListener</listener-class>
    </listener>    

    <listener>
        <listener-class>com.jaspersoft.jasperserver.war.util.SpringBeanServletContextPlublisher</listener-class>
    </listener>

    <listener>
        <!-- SESSION REPLICATION -->
        <!-- Replace the default spring listener with the Tolerant listener to enable replication-->
        <!-- listener-class>com.jaspersoft.jasperserver.core.util.TolerantRequestContextListener</listener-class-->
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>        
    </listener>

    <listener>
        <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>

    <!-- SSO -  single sign out listener -->
    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>

    <context-param>
        <param-name>sessionPublishedBeans</param-name>
        <param-value>configurationBean,concreteHeartbeatBean,concreteNavigationActionModelSupport</param-value>
    </context-param>

	<!--  UNCOMMENT FOR SESSION REPLICATION -->
    <!--filter>
        <filter-name>ClusterFilter</filter-name>
        <filter-class>com.jaspersoft.jasperserver.war.TolerantSessionFilter</filter-class>
    </filter-->
    
    <filter>
        <filter-name>p3pFilter</filter-name>
        <filter-class>com.jaspersoft.jasperserver.war.P3PFilter</filter-class>
    </filter>

    <filter>
        <filter-name>characterEncodingProxyFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>characterEncodingFilter</param-value>
        </init-param>
    </filter>
    
    <filter>
        <filter-name>sessionDecoratorProxyFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>sessionDecoratorFilter</param-value>
        </init-param>
    </filter>

    <!-- SSO -  single sign out filter -->
    <filter>
        <filter-name>CAS_Single_Sign_Out_Filter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
        <init-param>
            <param-name>artifactParameterName</param-name>
            <param-value>ticket</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>securityFilter</filter-name>
        <filter-class>org.springframework.security.util.FilterToBeanProxy</filter-class>
        <init-param>
            <param-name>targetBean</param-name>
            <param-value>filterChainProxy</param-value>
        </init-param>
    </filter>
    
    <!-- Start of SiteMesh filter config -->
    <filter>
    <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>
    
   	<!--  UNCOMMENT FOR SESSION REPLICATION -->
    <!--filter-mapping>
        <filter-name>ClusterFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	<distributable/-->
 	   

    <filter-mapping>
        <filter-name>p3pFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>characterEncodingProxyFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sessionDecoratorProxyFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- SSO -  single sign out filter mapping -->
    <filter-mapping>
        <filter-name>CAS_Single_Sign_Out_Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>securityFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>ERROR</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>ERROR</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
    
    <!-- Filter to help parse the file name and extension of uplaoded files-->
     <!--filter>  com.jaspersoft.jasperserver.war.MultipartRequestWrapperFilter takes over the processing
        <filter-name>multiPartHelperFilter</filter-name>
        <filter-class>com.jaspersoft.jasperserver.war.common.UploadMultipartFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>multiPartHelperFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping-->

  <filter>
    <filter-name>JPivotController</filter-name>
     <!-- <filter-class>com.jaspersoft.jasperserver.war.JPivotRequestFilter</filter-class>-->
    <filter-class>com.tonbeller.wcf.controller.RequestFilter</filter-class>

<!-- to avoid double clicking problem in the OLAP view list
    <init-param>
      <param-name>indexJSP</param-name>
      <param-value>/olap/viewOlap.html</param-value>
      <description>forward to this page if session is new</description>
    </init-param>
-->
    <init-param>
      <description>URI of error page</description>
      <param-name>errorJSP</param-name>
      <param-value>/olap/error.html</param-value>
    </init-param>
    <init-param>
      <description>This page is displayed if a the user clicks
        on a query before the previous query has finished</description>
      <param-name>busyJSP</param-name>
      <param-value>/olap/busy.html</param-value>
    </init-param>
    <!--
    <init-param>
      <param-name>forceExtension</param-name>
      <param-value>.faces</param-value>
      <description>replace .jsp with .faces</description>
    </init-param>
    -->
  </filter>

  <filter-mapping>
    <filter-name>JPivotController</filter-name>
    <url-pattern>/olap/viewOlap.html</url-pattern>
  </filter-mapping>

    <filter> <!--  -->
        <filter-name>StaticFilesCacheControlFilter</filter-name>
        <filter-class>com.jaspersoft.jasperserver.war.StaticFilesCacheControlFilter</filter-class>
        <init-param>
            <param-name>urlEndsWith</param-name>
            <param-value>.js .htm</param-value>
        </init-param>
        <!--<init-param>-->
            <!--<param-name>urlStartsWith</param-name>-->
            <!--<param-value>/rest_v2/bundles</param-value>-->
        <!--</init-param>-->
        <init-param>
            <param-name>excludePageFromCacheRegex</param-name>
            <param-value>/index\.htm</param-value>
        </init-param>
        <init-param>
            <param-name>expiresAfterAccessInSecs</param-name>
            <param-value>86400</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>StaticFilesCacheControlFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- dispatcher servlet for the application -->
    <servlet>
        <servlet-name>jasperserver</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/jasperserver-*.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/flow.html/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/fileview/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/reportimage/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/reportresource/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/jrpxml/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/bif/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/client/visualize.js</url-pattern>
    </servlet-mapping>
<!--
    &lt;!&ndash; DWR support &ndash;&gt;
    <servlet>
        <servlet-name>dwr</servlet-name>
        <servlet-class>org.directwebremoting.spring.DwrSpringServlet</servlet-class>
        <init-param>
            <param-name>debug</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>crossDomainSessionSecurity</param-name>
            <param-value>false</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>dwr</servlet-name>
        <url-pattern>/dwr/*</url-pattern>
    </servlet-mapping>
-->

  <!-- MondrianXmlaServlet replaced with JasperXmlaServlet -->
  <!--
  <servlet>
    <servlet-name>MondrianXmlaServlet</servlet-name>
    <servlet-class>mondrian.xmla.impl.DefaultXmlaServlet</servlet-class>
    <init-param>
      <param-name>DataSourcesConfig</param-name>
      <param-value>datasources.xml</param-value>
    </init-param>
  </servlet>
  -->

  <!-- XML for Analysis Servlet -->
  <servlet>
    <servlet-name>JasperXmlaServlet</servlet-name>
    <servlet-class>com.jaspersoft.jasperserver.war.xmla.XmlaServletImpl</servlet-class>
    <load-on-startup>50</load-on-startup> 
  </servlet>

  <servlet-mapping>
    <servlet-name>JasperXmlaServlet</servlet-name>
    <url-pattern>/xmla</url-pattern>
  </servlet-mapping>

  <!-- for drillthrough -->
  
  <servlet>
    <servlet-name>JasperDrillThroughServlet</servlet-name>
    <servlet-class>com.jaspersoft.jasperserver.war.CSVServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>JasperDrillThroughServlet</servlet-name>
    <url-pattern>/olap/drillthrough.csv</url-pattern>
  </servlet-mapping>

  <!-- jfreechart provided servlet -->
  <servlet>
    <servlet-name>DisplayChart</servlet-name>
    <servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
  </servlet>

  <!-- jfreechart provided servlet -->
  <servlet>
    <description>Serves up chart images for OLAP printing to PDF and Excel.</description>
    <servlet-name>GetChart</servlet-name>
    <!--display-name>GetChart</display-name-->
    <servlet-class>com.jaspersoft.jasperserver.war.OlapGetChart</servlet-class>
  </servlet>
  <servlet>
    <description>Generate PDF and Excel files for download based on OLAP model.</description>
    <servlet-name>Print</servlet-name>
    <!--display-name>Print</display-name-->
    
    <!-- Use JPivot PrintServlet which has been customized -->
    
    <servlet-class>com.tonbeller.jpivot.print.PrintServlet</servlet-class>
    <!-- <servlet-class>com.jaspersoft.jasperserver.war.OlapPrint</servlet-class> -->
  </servlet>

  <servlet-mapping>
    <servlet-name>DisplayChart</servlet-name>
    <url-pattern>/DisplayChart</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Print</servlet-name>
    <url-pattern>/olap/Print</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>GetChart</servlet-name>
    <url-pattern>/GetChart</url-pattern>
  </servlet-mapping>

    <!-- web services support -->
    
    <!-- webService Axis2 support START -->
    <servlet>
        <servlet-name>Axis2Servlet</servlet-name>
        <!--display-name>Apache-Axis2 Servlet</display-name-->
        <servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
    <!--
      <init-param>
            <param-name>repository</param-name>
            <param-value>/WEB-INF</param-value>
        </init-param>
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>Axis2Servlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
    <!-- webService Axis2 support END -->


 <!-- REST support START -->
    <servlet>
        <servlet-name>RESTServlet</servlet-name>
        <!--display-name>Apache-Axis2 Servlet</display-name-->
        <servlet-class>com.jaspersoft.jasperserver.rest.RESTServlet</servlet-class>
    <!--
      <init-param>
            <param-name>repository</param-name>
            <param-value>/WEB-INF</param-value>
        </init-param>
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>RESTServlet</servlet-name>
        <!--<url-pattern>/rest/*</url-pattern>-->
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>JerseyREST</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.PostReplaceFilter</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.config.property.WadlGeneratorConfig</param-name>
            <param-value>com.jaspersoft.jasperserver.jaxrs.wadl.JasperServerWadlGeneratorConfig</param-value>
        </init-param>
        <!--Enable to log request/responces-->
        <!--<init-param>-->
            <!--<param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>-->
            <!--<param-value>com.sun.jersey.api.container.filter.LoggingFilter</param-value>-->
        <!--</init-param>-->
        <!--<init-param>-->
            <!--<param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>-->
            <!--<param-value>com.sun.jersey.api.container.filter.LoggingFilter</param-value>-->
        <!--</init-param>-->
        <load-on-startup>1</load-on-startup>
   </servlet>
    <servlet-mapping>
        <servlet-name>JerseyREST</servlet-name>
        <url-pattern>/rest_v2/*</url-pattern>
    </servlet-mapping>
    <!-- REST support END -->
    
    <!--App Themes START-->
    <servlet>
        <servlet-name>AppThemeServlet</servlet-name>
        <servlet-class>com.jaspersoft.jasperserver.war.themes.ThemeResolverServlet</servlet-class>
        <init-param>
            <param-name>expiresAfterAccessInSecs</param-name>
            <param-value>86400</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>AppThemeServlet</servlet-name>
        <url-pattern>/_themes/*</url-pattern>
    </servlet-mapping>
    <!--App Themes END-->

    <session-config>
        <!-- Default to 20 minute session timeouts -->
        <session-timeout>20</session-timeout>
    </session-config>

    <jsp-config>
    
        <taglib>
            <taglib-uri>/WEB-INF/jasperserver.tld</taglib-uri>
            <taglib-location>/WEB-INF/jasperserver.tld</taglib-location>
        </taglib> 

        <taglib>
             <taglib-uri>/spring</taglib-uri>
             <taglib-location>/WEB-INF/spring.tld</taglib-location>
        </taglib>

        <taglib>
          <taglib-uri>http://www.tonbeller.com/wcf</taglib-uri>
          <taglib-location>/WEB-INF/wcf/wcf-tags.tld</taglib-location>
        </taglib>

        <taglib>
          <taglib-uri>http://www.tonbeller.com/jpivot</taglib-uri>
          <taglib-location>/WEB-INF/jpivot/jpivot-tags.tld</taglib-location>
        </taglib>

    </jsp-config>

    <resource-ref>
    <description>JasperServer Metadata repository</description>
        <res-ref-name>${metadata.jndi}</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    <resource-ref>
    <description>SugarCRM example database</description>
        <res-ref-name>${test.jndi}</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    <resource-ref>
    <description>Foodmart database</description>
        <res-ref-name>${foodmart.jndi}</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    <welcome-file-list>
        <welcome-file>index.htm</welcome-file>
    </welcome-file-list>
   
    <!-- currently the W3C havent settled on a media type for WSDL;
    http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
    for now we go with the basic 'it's XML' response -->
  <mime-mapping>
    <extension>wsdl</extension>
     <mime-type>text/xml</mime-type>
  </mime-mapping>
  

  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

  <mime-mapping>
    <extension>png</extension>
    <mime-type>image/png</mime-type>
  </mime-mapping>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>JasperServerWebApp</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<user-data-constraint>
			<!--  SSL disabled -->
			<transport-guarantee>NONE</transport-guarantee>   
			<!--  SSL enabled 
			<transport-guarantee>CONFIDENTIAL</transport-guarantee>   -->
		</user-data-constraint>
	</security-constraint>  
<!--
	This constraint disables the listed HTTP methods, which are not used by JS
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Forbidden</web-resource-name>
			<url-pattern>/*</url-pattern>
			<http-method>HEAD</http-method>
			<http-method>CONNECT</http-method>
			<http-method>COPY</http-method>
			<http-method>LOCK</http-method>
			<http-method>MKCOL</http-method>
			<http-method>OPTIONS</http-method>
			<http-method>PATCH</http-method>
			<http-method>PROPFIND</http-method>
			<http-method>PROPPATCH</http-method>
			<http-method>SEARCH</http-method>
			<http-method>TRACE</http-method>
			<http-method>UNLOCK</http-method>
		</web-resource-collection>
	</security-constraint>
-->

   <context-param>
        <param-name>Owasp.CsrfGuard.Config</param-name>
         <param-value>WEB-INF/esapi/Owasp.CsrfGuard.properties</param-value>
    </context-param>
    <context-param>
        <param-name>Owasp.CsrfGuard.Config.Print</param-name>
        <param-value>true</param-value>
    </context-param>
    <listener>
        <listener-class>org.owasp.csrfguard.CsrfGuardHttpSessionListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.owasp.csrfguard.CsrfGuardServletContextListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>GetEncryptionKey</servlet-name>
        <servlet-class>com.jaspersoft.jasperserver.api.security.encryption.GetEncryptionKey</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>JavaScriptServlet</servlet-name>
        <servlet-class>org.owasp.csrfguard.servlet.JavaScriptServlet</servlet-class>
        <init-param>
            <param-name>source-file</param-name>
            <param-value>WEB-INF/esapi/Owasp.CsrfGuard.js</param-value>
        </init-param>
        <init-param>
            <param-name>inject-into-forms</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>inject-into-attributes</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>domain-strict</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>referer-pattern</param-name>
            <param-value>.*</param-value>
        </init-param>
        <init-param>
            <param-name>x-requested-with</param-name>
            <param-value>AJAXRequest</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>GetEncryptionKey</servlet-name>
        <url-pattern>/GetEncryptionKey</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
       <servlet-name>JavaScriptServlet</servlet-name>
       <url-pattern>/JavaScriptServlet</url-pattern>
	</servlet-mapping>

    <error-page>
      <error-code>404</error-code>
      <location>/404.html</location>
    </error-page>

    <error-page>
      <error-code>500</error-code>
      <location>/500.html</location>
    </error-page>

    <mime-mapping>
        <extension>ico</extension>
        <mime-type>image/x-icon</mime-type>
    </mime-mapping>

    <!-- Web fonts MIME types declaration -->
    <mime-mapping>
        <extension>svg</extension>
        <mime-type>image/svg+xml</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>ttf</extension>
        <mime-type>application/x-font-truetype</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>eot</extension>
        <mime-type>application/vnd.ms-fontobject</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>woff</extension>
        <mime-type>application/font-woff</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>otf</extension>
        <mime-type>application/font-sfnt</mime-type>
    </mime-mapping>
    <!-- End of web fonts -->

</web-app>

