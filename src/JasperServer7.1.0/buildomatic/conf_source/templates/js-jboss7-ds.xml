<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2005 - 2018 TIBCO Software Inc.
  ~ http://www.jaspersoft.com.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<datasources>
    <!--
        http://bugzilla.jaspersoft.com/show_bug.cgi?id=24621

        2013-09-25 thorick
                    A couple of surprising facts about JBoss EAP6/AS7 'IronJacamar'
                    Connection Pools:
                    1.  no matter what you specify for <validate-in-match> it is forced to 'TRUE' at runtime
                    2.  if you have validation on (and it's ALWAYS on by #1 above)
                          you MUST provide a validation mechanism,
                          if you DO NOT, then once the Connections are gone,
                            they are never coming back, even when the DBMS service is restored.

                    For JBoss we choose SQL Statement validation.
                    We set <validate-on-match> to true for clarity (setting it to 'false' will not actually set it to false).


                    Also:  if you do not specify a max pool size, the default value is apparently 20.

    -->

    <datasource jta="false" jndi-name="java:/${js.jndi}" pool-name="${js.dbName}" enabled="true" use-ccm="false">
        <connection-url>${js.jdbcUrl}</connection-url>
        <driver>${maven.jdbc.artifactId}-${maven.jdbc.version}.jar</driver>
        <security>
            <user-name>${js.dbUsername}</user-name>
            <password>${escapeXML:js.dbPassword}</password>
        </security>
        <pool>
            <min-pool-size>5</min-pool-size>
            <max-pool-size>50</max-pool-size>
            <prefill>true</prefill>
	</pool>
	<validation>
            <validate-on-match>false</validate-on-match>
            <background-validation>false</background-validation>
            <check-valid-connection-sql>${jdbcTestTableQuery}</check-valid-connection-sql>
        </validation>
        <statement>
            <share-prepared-statements>false</share-prepared-statements>
        </statement>
    </datasource>
    <datasource jta="false" jndi-name="java:/${foodmart.jndi}" pool-name="${foodmart.dbName}" enabled="true" use-ccm="false">
        <connection-url>${foodmart.jdbcUrl}</connection-url>
        <driver>${maven.jdbc.artifactId}-${maven.jdbc.version}.jar</driver>
        <security>
            <user-name>${foodmart.dbUsername}</user-name>
            <password>${escapeXML:foodmart.dbPassword}</password>
        </security>
        <pool>
            <min-pool-size>5</min-pool-size>
            <max-pool-size>50</max-pool-size>
            <prefill>true</prefill>
	</pool>
	<validation>
            <validate-on-match>false</validate-on-match>
            <background-validation>false</background-validation>
            <check-valid-connection-sql>${jdbcTestTableQuery}</check-valid-connection-sql>
        </validation>
        <statement>
            <share-prepared-statements>false</share-prepared-statements>
        </statement>
    </datasource>
    <datasource jta="false" jndi-name="java:/${sugarcrm.jndi}" pool-name="${sugarcrm.dbName}" enabled="true" use-ccm="false">
        <connection-url>${sugarcrm.jdbcUrl}</connection-url>
        <driver>${maven.jdbc.artifactId}-${maven.jdbc.version}.jar</driver>
        <security>
            <user-name>${sugarcrm.dbUsername}</user-name>
            <password>${escapeXML:sugarcrm.dbPassword}</password>
        </security>
        <pool>
            <min-pool-size>5</min-pool-size>
            <max-pool-size>50</max-pool-size>
            <prefill>true</prefill>
	</pool>
	<validation>
            <validate-on-match>false</validate-on-match>
            <background-validation>false</background-validation>
            <check-valid-connection-sql>${jdbcTestTableQuery}</check-valid-connection-sql>
        </validation>
        <statement>
            <share-prepared-statements>false</share-prepared-statements>
        </statement>
    </datasource>
</datasources>
