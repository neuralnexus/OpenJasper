function invokeUserAction(e,t){var n=orgModule.userActionFactory[e](t);n.invokeAction()}function invokeUserManagerAction(e,t){var n=orgModule.userManager.actionFactory[e](t);n.invokeAction()}function isLoggedInUserSelected(){var e=orgModule.entityList.getSelectedEntities(),t=orgModule.userManager.options.currentUser;return e.length>0&&!!e.detect(function(e){return e.getNameWithTenant()==t})}function canAddUser(){return orgModule.manager.tenantsTree?null!=orgModule.manager.tenantsTree.getTenant():!0}function canEnableAll(){return orgModule.entityList.getSelectedEntities().length>0}function canDisableAll(){return orgModule.entityList.getSelectedEntities().length>0&&!isLoggedInUserSelected()}function canDeleteAll(){return orgModule.entityList.getSelectedEntities().length>0&&!isLoggedInUserSelected()}function canDeleteUser(){return orgModule.entityList.getSelectedEntities().length>0}orgModule.userManager={Event:{USERS_ENABLED:"users:enabled",USERS_DISABLED:"users:disabled"},Action:{ENABLE_ALL:"enableAll",DISABLE_ALL:"disableAll"},initialize:function(e){function t(e){var t=e.memo.inputData.users;orgModule.properties.isEditMode&&orgModule.properties.changeMode(!1),1==t.length&&orgModule.entityList.selectEntity(t[0].getNameWithTenant())}webHelpModule.setCurrentContext("admin"),layoutModule.resizeOnClient("folders","users","properties");var n=_.extend({},e,localContext.userMngInitOptions,{removeContextMenuTreePlugin:!0});orgModule.userManager.options=n,orgModule.manager.initialize(n),orgModule.manager.entityJsonToObject=function(e){return new orgModule.User(e)},orgModule.manager.relatedEntityJsonToObject=function(e){return new orgModule.Role(e)},this.userList.initialize({toolbarModel:this.actionModel,text:orgModule.manager.state.text}),orgModule.addDialog.show=function(e){this.addDialog.show(e)}.bind(this),orgModule.addDialog.hide=function(e){this.addDialog.hide(e)}.bind(this),this.properties.initialize(n),this.addDialog.initialize(),orgModule.observe("users:enabled",t.bindAsEventListener(this)),orgModule.observe("users:disabled",t.bindAsEventListener(this)),orgModule.observe("entity:deleted",function(){orgModule.properties.hide()}),orgModule.observe("entities:deleted",function(){orgModule.properties.hide()}),orgModule.observe("server:unavailable",function(e){var t=orgModule.manager.tenantsTree,n=t?t.getOrganization().id:null;new orgModule.User({userName:"",tenantId:n}).navigateToManager()}.bindAsEventListener(this)),isProVersion()||orgModule.manager.reloadEntities()},actionModel:{ADD:{buttonId:"addNewUserBtn",action:invokeClientAction,actionArgs:"create",test:canAddUser},ENABLE:{buttonId:"enableAllUsersBtn",action:invokeUserManagerAction,actionArgs:"enableAllUsers",test:canEnableAll},DISABLE:{buttonId:"disableAllUsersBtn",action:invokeUserManagerAction,actionArgs:"disableAllUsers",test:canDisableAll},DELETE:{buttonId:"deleteAllUsersBtn",action:invokeClientAction,actionArgs:"deleteAll",test:canDeleteAll}},validators:{}},"undefined"==typeof require&&document.observe("dom:loaded",orgModule.userManager.initialize.bind(orgModule.userManager));