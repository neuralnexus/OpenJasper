var ControlValidator=Class.create({initialize:function(t,a,i,e,n){if(this.id=t,this.controlToValidate=a,this.event=i,this.text=n,this.errorMessage=e,this.eventEvaluation=!1,this.dependencies=[],this.validationSummary=null,this.state=ControlValidator.State.UNKNOWN,!a&&!$(a))throw new Error("ControlValidator: Cannot find control with id : "+this.controlToValidate);if(i&&i.length>0){var s=this;$(a).observe(i,function(t){return s.evaluateIsValid(!0),s.isInvalid()?(s.highlight(),!1):void 0})}},getId:function(){return this.id},isValid:function(){return this.state==ControlValidator.State.SUCCESS},isInvalid:function(){return this.state==ControlValidator.State.UNSUCCESS},isEventEvaluation:function(){return this.eventEvaluation},getState:function(){return this.state},setState:function(t){this.state=t,this.refresh()},setDependencies:function(t){this.dependencies=t},getValue:function(t){var a=$(t);if(!a)throw new Error("ControlValidator.getValue: Cannot find control with id : "+this.controlToValidate);if("INPUT"==a.tagName){if("text"==a.type||"password"==a.type)return a.value;throw new Error('Input type="'+a.type+'" is not supported.')}throw new Error("Control "+a.tagName+" is not supported.")},highlight:function(){var t=function(t){return function(){try{var a=$(t);a.focus(),a.select()}catch(i){}}};setTimeout(t(this.controlToValidate),50)},getErrorMessage:function(){return this.errorMessage},refresh:function(){var t=$(this.id);t&&(t.innerHTML="",this.state==ControlValidator.State.UNSUCCESS?(t.style.visibility="visible",this.text&&this.text.length>0?t.innerHTML=this.text:this.errorMessage&&this.errorMessage.length>0&&(t.innerHTML=this.errorMessage)):t.style.visibility="hidden"),this.validationSummary&&this.validationSummary.refresh()},setValidationSummary:function(t){this.validationSummary=t},evaluateIsValid:function(){},onsuccess:function(){},onunsuccess:function(){}});ControlValidator.State={UNSUCCESS:0,SUCCESS:1,IN_PROGRESS:3,UNKNOWN:4};var RequiredFieldValidator=Class.create(ControlValidator,{evaluateIsValid:function(t){this.eventEvaluation=t;var a=this.getValue(this.controlToValidate);return a.blank()?(this.setState(ControlValidator.State.UNSUCCESS),this.onunsuccess(),!1):(this.setState(ControlValidator.State.SUCCESS),this.onsuccess(),!0)}}),RegularExpressionValidator=Class.create(ControlValidator,{initialize:function(t,a,i,e,n,s,o){if(t(a,e,n,s,o),!i)throw new Error("Validation expression cannot be null.");this.validationExpression=i},evaluateIsValid:function(t){this.eventEvaluation=t;var a=this.getValue(this.controlToValidate),i=this.validationExpression.exec(a);return null==i&&0===a.length||null!=i&&a==i[0]?(this.setState(ControlValidator.State.SUCCESS),this.onsuccess(),!0):(this.setState(ControlValidator.State.UNSUCCESS),this.onunsuccess(),!1)}}),CompareValidator=Class.create(ControlValidator,{initialize:function(t,a,i,e,n,s,o,r,l){if(t(a,e,n,o,r),this.operator=i,this.controlToCompare=s,this.notValidateIfEmpty=void 0===l?!0:l,!this.operator)throw new Error("Operator cannot be null.");if(!this.controlToCompare||!$(s))throw new Error("Control to compare cannot be null.")},evaluateIsValid:function(t){this.eventEvaluation=t;var a=this.getValue(this.controlToValidate),i=this.getValue(this.controlToCompare),e=!0;return(this.notValidateIfEmpty?a.blank():0)||(this.operator==CompareValidator.Operator.EQUALS?e=a==i:this.operator==CompareValidator.Operator.NOT_EQUALS&&(e=a!=i)),e?(this.setState(ControlValidator.State.SUCCESS),this.onsuccess(),!0):(this.setState(ControlValidator.State.UNSUCCESS),this.onunsuccess(),!1)}});CompareValidator.Operator={EQUALS:1,NOT_EQUALS:2};var ValidationSummary=Class.create({initialize:function(t){this.id=t,this.validators=[],$(this.id).innerHTML="<ul></ul>"},registrValidator:function(t){this.validators.push(t),t.setValidationSummary(this)},refresh:function(){var t=$(this.id);if(t){var a="<ul>";this.validators.each(function(t){t.isInvalid()&&(a+="<li>"+t.getErrorMessage()+"</li>")}),a+="</ul>",t.innerHTML=a}}}),ValidationStack=Class.create({initialize:function(){this.validators=[]},addValidator:function(t){this.validators.push(t);for(var a=this.validators.length,i=0;a>i;i++){var e=this.validators[i],n=this.validators[i+1];e.mainSuccessHandler||(e.mainSuccessHandler=e.onsuccess),e.mainUnsuccessHandler||(e.mainUnsuccessHandler=e.onunsuccess);var s=e.mainSuccessHandler,o=e.mainUnsuccessHandler;n?(e.onsuccess=this._getEvalNextFn(e,n,s),e.onunsuccess=this._getEvalNextFn(e,n,o)):(e.onsuccess=this._getSuccessFn(e,s),e.onunsuccess=this._getUnsuccessFn(e,o))}},_getEvalNextFn:function(t,a,i){return function(){i&&i(),t.isEventEvaluation()||a.evaluateIsValid()}},_getSuccessFn:function(t,a){var i=this;return function(){if(a&&a(),!t.isEventEvaluation()){var e=i.getState()==ControlValidator.State.SUCCESS?i.onsuccess:i.onunsuccess;e()}}},_getUnsuccessFn:function(t,a){var i=this;return function(){a&&a(),t.isEventEvaluation()||i.onunsuccess()}},getState:function(){var t,a=[],i=[];return this.validators.each(function(e){var n=e.getState()==ControlValidator.State.IN_PROGRESS,s=e.getState()==ControlValidator.State.UNKNOWN,o=e.getState()==ControlValidator.State.SUCCESS,r=e.getState()==ControlValidator.State.UNSUCCESS;n?t=ControlValidator.State.IN_PROGRESS:s?t=ControlValidator.State.UNKNOWN:o?a.push(e):r&&i.push(e)}),t?t:a.length==this.validators.length?ControlValidator.State.SUCCESS:ControlValidator.State.UNSUCCESS},evaluateIsValid:function(){var t=this.validators.length;t>0&&this.validators[0].evaluateIsValid()},hasUnuccess:function(){var t=!1;return this.validators.each(function(a){var i=a.getState()==ControlValidator.State.UNSUCCESS;if(i)throw t=!0,$break}),t},onsuccess:function(){},onunsuccess:function(){}}),ValidationChain=Class.create(ValidationStack,{initialize:function(t,a){if(this.controlToValidate=t,this.event=a,this.validators=[],!this.controlToValidate||!$(this.controlToValidate))throw new Error("Cannot find control with id : "+this.controlToValidate)},addValidator:function(t){var a=this;if(this.controlToValidate!=t.controlToValidate)throw new Error("Validation chain connot be created for different controls");$(this.controlToValidate).observe(this.event,function(){a.validators[0].evaluateIsValid()}),this.validators.push(t);for(var i=this.validators.length,e=0;i>e;e++){var n=this.validators[e],s=this.validators[e+1];n.mainSuccessHandler||(n.mainSuccessHandler=n.onsuccess),n.mainUnsuccessHandler||(n.mainUnsuccessHandler=n.onunsuccess);var o=n.mainSuccessHandler,r=n.mainUnsuccessHandler;if(s){var l=function(t,i){return function(){i&&i(),a.onunsuccess()}}(e,r);n.onsuccess=this._getEvalNextFn(n,s,o),n.onunsuccess=l}else n.onsuccess=this._getSuccessFn(n,o),n.onunsuccess=this._getUnsuccessFn(n,r)}}});