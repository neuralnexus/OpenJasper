define(["require","exports","module","jquery","underscore","bundle!all","runtime_dependencies/js-sdk/src/jrs.configs","backbone","text!../../template/editor/parametersTabTemplate.htm","../../../controls/controls.base","../../../namespace/namespace","../../../controls/controls.options","../../../controls/controls.controller"],function(e,t,o){var r=e("jquery"),n=e("underscore"),s=e("bundle!all"),i=e("runtime_dependencies/js-sdk/src/jrs.configs"),l=e("backbone"),a=e("text!../../template/editor/parametersTabTemplate.htm"),p=e("../../../controls/controls.base"),c=p.ControlsBase,d=e("../../../namespace/namespace"),u=d.JRS;e("../../../controls/controls.options"),e("../../../controls/controls.controller"),n.extend(c,i.inputControlsConstants),o.exports=l.View.extend({initialize:function(e){this.options=n.extend({},e),this.listenTo(this.model,"change:source",this.sourceChange),r(document).on("viewmodel:values:changed",n.bind(this.viewModelValuesChange,this))},render:function(){this.setElement(r(n.template(a,{i18n:s,config:i})))},saveAsDialogButtonSaveClick:function(){var e=this,t=this.reportOptionsDialog.input.getValue(),o=this.model.controlsController.getViewModel().get("selection"),n=t===this.reportOptionsDialog.optionNameToOverwrite;r.when(this.reportOptions.add(this.reportOptions.optionsUrl||this.reportOptions.url,t,o,n)).done(function(){e.reportOptionsDialog.hideWarning();var t=e.reportOptions.getElem().parent();0===t.length&&(t=e.$el.find(".saveCurrentValuesContainer"),t.prepend(e.reportOptions.getElem())),e.reportOptionsDialog.hide(),delete e.reportOptionsDialog.optionNameToOverwrite}).fail(function(o){try{var r=JSON.parse(o.responseText);"report.options.dialog.confirm.message"===r.errorCode&&!n&&(e.reportOptionsDialog.optionNameToOverwrite=t),e.reportOptionsDialog.showWarning(r.message)}catch(e){}})},sourceChange:function(e,t){var o=t&&t.reportUnitURI,r=this.model.get("source").parameters;if(r){var n=r.parameterValues;for(var s in n)n.hasOwnProperty(s)&&null===n[s]&&delete n[s];this.reportOptions&&(this.reportOptions.url=void 0),this.model.controlsController=new u.Controls.Controller({reportUri:o,reportOptionUri:"",preSelectedData:n});var i=this;this.model.controlsController.fetchControlsStructure(n).done(function(){i.trigger("IC_Displayed")}).fail(function(){i.trigger("failedToGet_IC")})}},viewModelValuesChange:function(){this.model.set("source",{reportUnitURI:this.model.get("source").reportUnitURI,parameters:{parameterValues:this.model.controlsController.getViewModel().get("selection")}},{validate:!1,silent:!0})}})});