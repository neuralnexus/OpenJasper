define(["require","exports","module","underscore","jquery","bundle!all","../../resource/resource.locate","../enum/mongoJdbcFileSourceTypes","../view/CustomDataSourceView","../model/MongoDbJdbcDataSourceModel","text!../template/mongoDbJdbcSpecificTemplate.htm","text!../template/mongoDbJdbcFileLocationSectionTemplate.htm","text!runtime_dependencies/js-sdk/src/common/templates/components.pickers.htm"],function(e,t,o){var i=e("underscore"),n=e("jquery"),r=e("bundle!all"),a=e("../../resource/resource.locate"),s=e("../enum/mongoJdbcFileSourceTypes"),c=e("../view/CustomDataSourceView"),l=e("../model/MongoDbJdbcDataSourceModel"),d=e("text!../template/mongoDbJdbcSpecificTemplate.htm"),m=e("text!../template/mongoDbJdbcFileLocationSectionTemplate.htm"),u=e("text!runtime_dependencies/js-sdk/src/common/templates/components.pickers.htm");o.exports=c.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.mongoJdbc.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.mongoJdbc.page.title.edit",modelConstructor:l,browseButton:!1,events:function(){var e=i.extend({},c.prototype.events);return e["change [name=fileSourceType]"]="changeFileSourceType",e["change [name=autoSchemaDefinition]"]="changeAutoSchemaDefinition",e},initialize:function(e){c.prototype.initialize.apply(this,arguments),this.listenTo(this.model,"change:serverFileName",this.adjustFileSystemConnectButton)},changeFileSourceType:function(){i.defer(i.bind(function(){this.renderFileLocationSection()},this))},changeAutoSchemaDefinition:function(){i.defer(i.bind(function(){this.renderFileLocationSection()},this))},render:function(){return this.$el.empty(),this.renderMongoDbSpecificSection(),this.renderFileLocationSection(),this.renderTimezoneSection(),this.renderTestConnectionSection(),this.$el.find("[name=serverAddress]").focus(),this},validationMethodOnSaveClick:function(e){!this.model.get("parentFolderUri")&&this.model.set("parentFolderUri","/"),!this.model.get("label")&&this.model.set("label",n("[name=dataSourceType] option:selected").text());var t=this;this.model.save({},{dryRun:!0}).fail(function(e){var o=!1;try{o=JSON.parse(e.responseText)}catch(e){}var n=i.isArray(o)?o:[o];i.each(n,function(e){e&&e.errorCode&&e.parameters&&("illegal.parameter.value.error"===e.errorCode&&"resourceReference.uri"===e.parameters[0]?t.fieldIsInvalid(t,"repositoryFileName",r["resource.file.invalid.path"],"name"):"invalid.server.file.system.path"===e.errorCode&&"textDataSource.propertyMap[fileName]"===e.parameters[0]&&t.fieldIsInvalid(t,"serverFileName",r["resource.file.invalid.path"],"name"))})}).done(e)},templateData:function(){var e=i.extend({},s);return this.model.isLocalFileSystemAccessAllowed()||delete e.SERVER_FILE_SYSTEM,i.extend(c.prototype.templateData.apply(this,arguments),{fileSourceTypeOptions:e})},renderMongoDbSpecificSection:function(){this.$el.append(i.template(d,this.templateData()))},renderFileLocationSection:function(){this.renderOrAddAnyBlock(this.$el.find("[name=fileLocationContainer]"),i.template(m,this.templateData())),this.browseButton&&(this.browseButton.remove(),this.browseButton=!1),"repository"!==this.model.get("fileSourceType")||this.model.get("autoSchemaDefinition")||(this.browseButton=a.initialize({i18n:r,template:u,resourceInput:this.$el.find("[name=repositoryFileName]")[0],browseButton:this.$el.find("[name=repositoryBrowserButton]")[0],providerId:"fileResourceBaseTreeDataProvider",dialogTitle:r["resource.Add.Files.Title"],selectLeavesOnly:!0,onChange:i.bind(function(e){this.model.set("repositoryFileName",e),this.model.validate({repositoryFileName:e})},this)}))}})});