define(["require","exports","module","underscore","runtime_dependencies/js-sdk/src/common/component/dialog/AlertDialog","../view/JdbcDataSourceView","../view/BaseDataSourceView","../model/AwsDataSourceModel","../view/dialog/UploadJdbcDriverDialog","../../dynamicTree/dynamicTree.utils","../../core/core.events.bis","bundle!jasperserver_messages","text!../template/awsSpecificTemplate.htm","settings!awsSettings","../util/settingsUtility"],function(e,t,s){var i=e("underscore"),r=e("runtime_dependencies/js-sdk/src/common/component/dialog/AlertDialog"),a=e("../view/JdbcDataSourceView"),o=e("../view/BaseDataSourceView"),n=e("../model/AwsDataSourceModel"),d=e("../view/dialog/UploadJdbcDriverDialog"),l=e("../../dynamicTree/dynamicTree.utils"),c=e("../../core/core.events.bis"),h=e("bundle!jasperserver_messages"),u=e("text!../template/awsSpecificTemplate.htm"),p=e("settings!awsSettings"),v=e("../util/settingsUtility");s.exports=a.extend({PAGE_TITLE_NEW_MESSAGE_CODE:"resource.datasource.aws.page.title.new",PAGE_TITLE_EDIT_MESSAGE_CODE:"resource.datasource.aws.page.title.edit",modelConstructor:n,events:function(){var e={};return i.extend(e,a.prototype.events),e["change input[name='credentialsType']"]="changeCredentialsType",e["click #findAwsDataSources"]="refreshAwsDataSourceTree",e},initialize:function(e){o.prototype.initialize.apply(this,arguments),this.deepDefaults=v.deepDefaults(e,{awsSettings:p}),this.listenTo(this.model,"change:credentialsType",this.onCredentialsTypeChange),this.listenTo(this.model,"change:driverClass",this.changeUploadDriverButtonState),this.listenTo(this.model,"change",this.updateInput),this.listenTo(this.model.drivers,"change add",this.recheckDriver)},changeCredentialsType:function(){var e=this.$("input[name='credentialsType']:checked").val();this.model.set("credentialsType",e)},recheckDriver:function(){this.model.validate({driverClass:this.model.get("driverClass")}),this.changeUploadDriverButtonState()},changeUploadDriverButtonState:function(){var e=this.$("#driverUploadButton");if(""===this.model.get("driverClass"))c.disable(e[0]);else{c.enable(e[0]);var t=this.model.drivers.getDriverByClass(this.model.get("driverClass"));e.find(".wrap").text(h[t&&t.get("available")?"resource.dataSource.jdbc.upload.editDriverButton":"resource.dataSource.jdbc.upload.addDriverButton"])}},initDriverUploadDialog:function(){var e=this,t=this.model.drivers.getDriverByClass(this.model.get("driverClass"));this.driverUploadDialog=new d({driverAvailable:!(!t||!t.get("available")),driverClass:this.model.get("driverClass")}),this.driverUploadDialog.on("driverUpload",function(t){e.model.drivers.markDriverAsAvailable(t.jdbcDriverClass),i.defer(i.bind(e.model.validate,e.model))})},updateInput:function(){var e=i.keys(this.model.changedAttributes()),t=["accessKey","secretKey","roleArn","connectionUrl","driverClass","dbName"],s=this;i.each(i.intersection(e,t),function(e){var t=s.model.get(e);s.$("[name='"+e+"']").val()!==t&&s.$("[name='"+e+"']").val(t)})},onCredentialsTypeChange:function(){var e=this.model.get("credentialsType")===n.credentialsType.EC2;this.$("#aws_settings")[e?"hide":"show"](),e&&this.showAwsDsTree(this.model.getFullDbTreePath())},refreshAwsDataSourceTree:function(e){e.preventDefault(),this.showAwsDsTree("/")},render:function(){return this.$el.empty(),this.renderTimezoneSection(),this.renderAwsSpecificSection(),this.renderTestConnectionSection(),this.initDataSourceTree(),(this.options.isEditMode||this.model.get("credentialsType")===n.credentialsType.EC2)&&this.showAwsDsTree(this.model.getFullDbTreePath()),this},showAwsDsTree:function(e){this.model.validate({accessKey:this.model.get("accessKey"),secretKey:this.model.get("secretKey")}),this.model.isValid("secretKey")&&this.model.isValid("accessKey")&&this.awsDataSourceTree.showTreePrefetchNodes(e||"/")},templateData:function(){var e=a.prototype.templateData.apply(this,arguments);return i.extend(e,{credentialsType:n.credentialsType,awsRegions:this.deepDefaults.awsSettings.awsRegions,disableAwsDefaults:!this.deepDefaults.awsSettings.isEc2Instance||this.deepDefaults.awsSettings.suppressEc2CredentialsWarnings}),e},renderAwsSpecificSection:function(){this.$el.append(i.template(u,this.templateData())),this.changeUploadDriverButtonState()},initDataSourceTree:function(){var e=this.options.isEditMode,t=this,s={hideLoader:!0,bShowRoot:!1,treeId:"awsDataSourceTree",providerId:"awsDataSourceTreeDataProvider",selectLeavesOnly:!0,additionalParams:function(){return{arn:t.model.get("roleArn"),awsAccessKey:t.model.get("accessKey"),awsSecretKey:t.model.get("secretKey"),region:t.model.get("region"),datasourceUri:t.model.get("uri")}}};this.awsDataSourceTree=l.createRepositoryTree("awsDataSourceTree",s),this.awsDataSourceTree.httpErrorHandler=function(e){var t,s=!1;return-1===e.responseText.indexOf("AWS Access Key is invalid")&&-1===e.responseText.indexOf("The security token included in the request is invalid")||(s=h["error.aws.key.is.invalid"]),!1!==s||-1===e.responseText.indexOf("AWS Secret Key is invalid")&&-1===e.responseText.indexOf("The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method")||(s=h["error.aws.secret.key.is.invalid"]),!1===s&&-1!==e.responseText.indexOf("is not authorized to perform")&&(s=h["error.aws.arn.is.invalid"]),!1===s&&-1!==e.responseText.indexOf("The security token included in the request is invalid")&&(s=h["error.security.token.is.invalid"]),!!s&&(t=new r({modal:!0}),t.setMessage(s),t.open(),!0)},this.awsDataSourceTree.observe("leaf:selected",function(s){var i=s.memo.node.param;if("awsDb"===i.type&&!e){var r=i.extra,a=r.dbUri.split("/");t.model.set({connectionUrlTemplate:r.jdbcTemplate,driverClass:r.jdbcDriverClass,dbName:r.dBName,dbHost:r.dnsAddress,dbPort:r.dbPort,sName:r.dBName,dbService:a[1],dbInstanceIdentifier:a[2]}),t.model.validate({driverClass:t.model.get("driverClass")})}}),this.awsDataSourceTree.observe("tree:loaded",function(){t.model.getFullDbTreePath()&&t.awsDataSourceTree.openAndSelectNode(t.model.getFullDbTreePath(),function(){e=!1})})},remove:function(){this.awsDataSourceTree&&this.awsDataSourceTree.stopObserving(),a.prototype.remove.apply(this,arguments)}})});