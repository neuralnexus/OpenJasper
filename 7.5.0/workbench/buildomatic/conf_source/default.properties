#
# Copyright (C) 2005 - 2019 TIBCO Software Inc. All rights reserved.
# http://www.jaspersoft.com.
#
# Unless you have purchased a commercial license agreement from Jaspersoft,
# the following license terms apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

# This is a file containing properties that are not platform-specific,
# but can safely be set to defaults (for now).
# For this to support all possible configuration, some things may have to have more config hooks
#
# TODO
# configure quartz.web.deployment.uri
# configure quartz.mail.*
# 
# default web app names
webAppNameCE = jasperserver
webAppNamePro = jasperserver-pro

# war file source name used when copying
# (should not be changed)
webAppNameSrcCE = jasperserver
webAppNameSrcPro = jasperserver-pro

# to run maven in offline mode, set to true
maven.offline = false

# default location of maven local repository
maven-localrepo-path = $\{user.home\}/.m2/repository

# JNDI names; these should never change
js.jndi=jdbc/jasperserver
sugarcrm.jndi=jdbc/sugarcrm
foodmart.jndi=jdbc/foodmart

# use the same users and passwords for everything
js.dbUsername = ${dbUsername}
js.dbPassword = ${dbPassword}
sugarcrm.dbUsername = ${dbUsername}
sugarcrm.dbPassword = ${dbPassword}
foodmart.dbUsername = ${dbUsername}
foodmart.dbPassword = ${dbPassword}

# used by context.xml to set defaultAutoCommit for postgres
# set to blank if it hasn't already been set
js.extraParams=

# used only for oracle(this user have to be created)
dba.user=sys
dba.password=password
dba.role=as SYSDBA


# settings for quartz to send mail, used in js.quartz.properties
quartz.mail.sender.host=mail.example.com
quartz.mail.sender.port=25
quartz.mail.sender.protocol=smtp
quartz.mail.sender.username=admin
quartz.mail.sender.password=password
quartz.mail.sender.from=admin@example.com
quartz.web.deployment.uri=http://localhost:8080/jasperserver-pro

# property settings for unit-tests
test.foodmart.upperCaseNames=false
test.sugarcrm.upperCaseNames=false

# remote-tests settings 
remote.test.host=localhost
remote.test.port=8080
remote.test.app-context-path-ce=jasperserver
remote.test.app-context-path-pro=jasperserver-pro

# docFlex settings for Public API generation
# docFlex is a non-included commercial product
# docFlexDir=c:/bin/docflex
docFlexDir=/opt/docflex-javadoc-1.6
docFlexVer=1.6

# flag used to skip of JDBC driver deploying during deployment process.
deployJDBCDriver=true

#Diagnostic configuration
diagnostic.jmx.usePlatformServer = false
# change this value if you have more than one app server on the same machine running JRS
diagnostic.jmx.port = 10990
test.diagnostic.jmx.port = 10999
# change this if you have more than one instance of JRS on the same app server (i.e. more than one JRS web app)
diagnostic.jmx.name = jasperserver
# change this to your RMI registry host name or IP, if you use a separate one
diagnostic.jmx.rmiHost = localhost

#AWS data source configuration
#Enable or disable creating of AWD Data Source security group.
aws.db.security.group.changes.enabled=true

# Db Security Group Name. Need to be overridden if server(where instance is running) is out of scope Amazon to have
#unique group name for this server.
aws.db.security.group.name=JRSSecurityGroup
aws.db.security.group.description=JasperReports Server Security Group

# Ingress Public Ip address of server that will be added in Db Security Group to have access to target Db instance
# that contains this Group.
aws.db.security.group.ingressPublicIp=

# Property, that control whether to suppress Warning if IAM role not properly configured in EC2 environment
aws.db.security.group.suppressEc2CredentialsWarnings=false

# flag s to enable or disable Monitoring and heart beat options.
jrs.config.enable.audit_monitoring=false
jrs.config.enable.audit.records=false
jrs.config.enable.monitoring.records=false
jrs.config.enable.heartbeat=true
jrs.config.enable.heartbeat.askForPermission=true
jrs.config.enable.heartbeat.permissionGranted=false

#flag which control whether to use by default optimized version of scripts in runtime
optimize.javascript=true

# default PhantomJS location
headless.browser=
#default external renderer session time
phantomjs.max.session.time=

#flag if tibcoDrivers are available for source build or not
#only applies for builds inside Jaspersoft TIBCO 
#default setting : true 
#if set to false, tibco driver dependencies are ignored
tibco.driver.available=true
SKIP_TEST_ARG=ignored

#source distribution:
#flag if fafj is used as maven dependencies or if it is pre-deployed
#to original folders
#if set to true, fafj dependencies and handling are ignored
disable.fafj=true
#(pro only) initialization for additional driver repository, see sample_conf/<db-type>_master.properties for configuration
tibco-driver-path=${repo-path}
#(pro only) by default tibco drivers are not deployed
deploy-tibco-drivers=false

# Repo FTP access
ftp.enabled=false

# If you are using an oracle 12c, you should set dbScriptVersion=oracle12c in order to use specific supermart-update script for oracle 12c
dbScriptVersion=

# Set the version of generated artifacts. If not set, will use current git branch name
#buildArtifactVersionName
# Set the version of FAF to be used in webapp. If not set, will use the value set for 'buildArtifactVersionName'
#fafBuildArtifactVersionName