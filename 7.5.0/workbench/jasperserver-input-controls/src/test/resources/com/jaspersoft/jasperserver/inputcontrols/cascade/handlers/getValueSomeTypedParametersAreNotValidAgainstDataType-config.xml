<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2005 - 2019 TIBCO Software Inc. All rights reserved.
  ~ http://www.jaspersoft.com.
  ~
  ~ Unless you have purchased a commercial license agreement from Jaspersoft,
  ~ the following license terms apply:
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <import resource="getValueSomeDefaultValuesAreNotValidAgainstDataType-config.xml"/>

    <bean id="getValueSomeTypedParametersAreNotValidAgainstDataType" parent="getValueSomeDefaultValuesAreNotValidAgainstDataType">
        <constructor-arg index="0">
            <map merge="true">
                <entry key-ref="QUERY_EXECUTOR" value-ref="queryExecutor"/>
                <entry key-ref="TYPED_PARAMS_MAP" value-ref="typedParameters"/>
                <entry key-ref="EXPECTED_RESULT" value-ref="expectedResult"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="typedParameters" class="java.util.HashMap">
        <constructor-arg index="0">
            <map value-type="java.util.Collection">
                <entry key="order">
                    <list>
                        <value type="java.lang.Integer">123</value>
                        <value type="java.lang.Integer">234</value>
                        <value type="java.lang.Integer">345</value>
                        <value type="java.lang.Integer">456</value>
                    </list>
                </entry>
            </map>
        </constructor-arg>
    </bean>

</beans>