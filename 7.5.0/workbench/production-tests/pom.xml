<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2005 - 2019 TIBCO Software Inc. All rights reserved.
  ~ http://www.jaspersoft.com.
  ~
  ~ Unless you have purchased a commercial license agreement from Jaspersoft,
  ~ the following license terms apply:
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jaspersoft.jasperserver.api.integrationTest</groupId>
    <artifactId>jasperserver-api-integration-test</artifactId>
    <packaging>jar</packaging>
    <name>Jasper Server Integration Tests</name>
    <url>http://www.jaspersoft.com</url>
    <parent>
        <groupId>com.jaspersoft.jasperserver</groupId>
        <artifactId>server</artifactId>
        <version>${buildArtifactVersionName}</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>com.jaspersoft.jasperserver.api.metadata.impl</groupId>
            <artifactId>jasperserver-repository-hibernate</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver.api.common.impl</groupId>
            <artifactId>jasperserver-api-common-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver.api.metadata.impl</groupId>
            <artifactId>jasperserver-api-metadata-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver.api.engine.impl</groupId>
            <artifactId>jasperserver-api-engine-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver.api.externalAuth.impl</groupId>
            <artifactId>jasperserver-api-externalAuth-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver</groupId>
            <artifactId>jasperserver-export-tool</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver</groupId>
            <artifactId>jasperserver-common-ws</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver</groupId>
            <artifactId>jasperserver-search</artifactId>
        </dependency>
         <dependency>
            <groupId>com.jaspersoft.jasperserver</groupId>
            <artifactId>jasperserver-remote-services</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver.crypto</groupId>
            <artifactId>js-crypto</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver</groupId>
            <artifactId>jasperserver-custom-datasources</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>2.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <version>2.2.4</version>
        </dependency>
        <!-- This artifact is a wrapper for a dynamically generated POM that contains the JDBC driver dependency.
             It replaces the dependency with property placeholders like "${repository.database.driver.groupId}"
             which make it impossible to use it as a dependency.
        -->
        <dependency>
            <groupId>com.jaspersoft.jasperserver</groupId>
            <artifactId>jdbc-dep</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <!--The SugarCRM database is assumed to be in MySQL,
        so we still need this to run reports and OLAP connections during the test-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>3.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
            <optional>true</optional>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
            <version>2.0.8</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.castor</groupId>
            <artifactId>castor-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.castor</groupId>
            <artifactId>castor-xml</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
	<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring.security.version}</version>
            <!--<type>test-jar</type>-->
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-remoting</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jdbc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context-support</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-support</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-test</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-expression</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver</groupId>
            <artifactId>jasperserver-war</artifactId>
            <version>${buildArtifactVersionName}</version>
            <type>war</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- COMMENT: TESTNG: not currently using the testng-spring classes -->
        <!-- <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng-spring</artifactId>
            <version>4.7</version>
            <scope>test</scope>
        </dependency> -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jaspersoft.jasperserver</groupId>
            <artifactId>jasperserver-util</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.plugin.version}</version>
                <executions>
                    <execution>
                        <id>extract theme files</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <includeGroupIds>com.jaspersoft.jasperserver</includeGroupIds>
                            <includeArtifactIds>jasperserver-war</includeArtifactIds>
                            <includeTypes>war</includeTypes>
                            <excludeTransitive>false</excludeTransitive>
                            <includes>themes/</includes>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                            <!--<artifactItems>-->
                                <!--<artifactItem>-->
                                    <!--<groupId>com.jaspersoft.jasperserver</groupId>-->
                                    <!--<artifactId>jasperserver-war</artifactId>-->
                                    <!--<version>${project.version}</version>-->
                                    <!--<type>war</type>-->
                                    <!--<overWrite>true</overWrite>-->
                                <!--</artifactItem>-->
                            <!--</artifactItems>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- use config collector -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>enumerate</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <tasks>
                                <property name="project.version" value="${project.version}"/>
                                <property name="base_folder" value="${project.build.testOutputDirectory}"/>
                                <property name="output_folder" value="${project.build.testOutputDirectory}"/>
                                <echo>COMMENT: About to call: ant build.xml for integration-tests to list theme files</echo>
                                <ant antfile="build.xml" inheritall="true" inheritrefs="true">
                                    <target name="list_theme_files"/>
                                </ant>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <tasks>
                                <!--pass through props to ant file -->
                                <property name="js-path" value="${js-path}"/>
                                <property name="js-pro-path" value="${js-pro-path}"/>
                                <property name="platform-path" value="${platform-path}"/>
                                <property name="target" value="${project.build.directory}/test-classes"/>
                                <ant antfile="${js-path}/build-config.xml" inheritall="true" inheritrefs="true">
                                    <property name="module" value="ce.production-tests"/>
                                </ant>
                                <!-- vfs-providers.xml must be deleted to prevent duplicate registration of VFS providers (from generated-classes and from the JAR on the classpath. -->
                                <delete file="${js-path}/production-tests/target/generated-classes/cobertura/META-INF/vfs-providers.xml"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-esapi</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <tasks>
                                <!--pass through props to ant file -->
                                <property name="js-path" value="${js-path}"/>
                                <property name="js-pro-path" value="${js-pro-path}"/>
                                <property name="platform-path" value="${platform-path}"/>
                                <property name="target" value="${project.build.directory}/test-classes/esapi"/>
                                <ant antfile="${js-path}/build-config.xml" inheritall="true" inheritrefs="true">
                                    <property name="module" value="ce.esapi"/>
                                </ant>
                                <!-- vfs-providers.xml must be deleted to prevent duplicate registration of VFS providers (from generated-classes and from the JAR on the classpath. -->
                                <delete file="${js-path}/production-tests/target/generated-classes/cobertura/META-INF/vfs-providers.xml"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>${skipUnitTestDir}</skip>
                    <environmentVariables>
                        <ks>${project.build.directory}/test-classes</ks>
                        <ksp>${project.build.directory}/test-classes</ksp>
                    </environmentVariables>
                    <argLine>${argLine} </argLine>
<!--                     <argLine>-Xms512m -Xmx1024m -XX:PermSize=32m -XX:MaxPermSize=128m -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</argLine>-->
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>testng-no-tests.xml</suiteXmlFile>
                            </suiteXmlFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>it-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITSuite}</skip>
                            <suiteXmlFiles>
                                <suiteXmlFile>testng-production-tests-ce.xml</suiteXmlFile>
                            </suiteXmlFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>sso-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITSuite}</skip>
                            <suiteXmlFiles>
                                <suiteXmlFile>testng-production-sso-tests-ce.xml</suiteXmlFile>
                            </suiteXmlFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>production-data</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>${skipDataSuite}</skip>
                            <suiteXmlFiles>
                                <suiteXmlFile>testng-production-data-ce.xml</suiteXmlFile>
                            </suiteXmlFiles>
                            <environmentVariables>
                                <ks>${data.ks}</ks>
                                <ksp>${data.ksp}</ksp>
                            </environmentVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <!-- need to preserve the data file between subsequent runs -->
                    <destFile>jacoco-${maven.build.timestamp}.exec</destFile>
                    <dataFile>jacoco-${maven.build.timestamp}.exec</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report-integration</id>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                </rule>
                                <rule>
                                    <element>PACKAGE</element>
                                </rule>
                                <rule>
                                    <element>CLASS</element>
                                </rule>
                                <rule>
                                    <element>SOURCEFILE</element>
                                </rule>
                                <rule>
                                    <element>METHOD</element>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
			<plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                </plugin>
                <plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
			</plugins>
		</pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>build-ce</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <skipITSuite>true</skipITSuite>
                <skipDataSuite>true</skipDataSuite>
                <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
            </properties>
        </profile>
        <profile>
            <id>env-dev</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>dev</value>
                </property>
            </activation>
            <properties>
                <skipITSuite>false</skipITSuite>
                <skipDataSuite>false</skipDataSuite>
                <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
                <data.ks>${user.home}</data.ks>
                <data.ksp>${user.home}</data.ksp>
            </properties>
        </profile>
        <profile>
            <id>env-ci</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>ci</value>
                </property>
            </activation>
            <properties>
                <skipITSuite>false</skipITSuite>
                <skipDataSuite>false</skipDataSuite>
                <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
                <data.ks>${project.build.directory}/test-classes</data.ks>
                <data.ksp>${project.build.directory}/test-classes</data.ksp>
            </properties>
        </profile>
    </profiles>
</project>
