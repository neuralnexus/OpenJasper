#
# Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved.
# http://www.jaspersoft.com.
#
# Unless you have purchased a commercial license agreement from Jaspersoft,
# the following license terms apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

# enable or disable auditing monitoring feature
feature.audit_monitoring.enabled=${jrs.config.enable.audit_monitoring}

# Enable or disable Auditing
audit.records.enabled=${jrs.config.enable.audit.records}

# Enable or disable Monitoring
monitoring.records.enabled=${jrs.config.enable.monitoring.records}

# Enable or disable HeartBeat
heartbeat.enabled=${jrs.config.enable.heartbeat}
heartbeat.askForPermission.enabled=${jrs.config.enable.heartbeat.askForPermission}
heartbeat.permissionGranted.enabled=${jrs.config.enable.heartbeat.permissionGranted}

# Max upload file size across application in bytes
# -1 - size not limited
file.upload.max.size=-1

# Control default value of javascript optimization in runtime
javascript.optimize=${optimize.javascript}

# Path to Chrome/Chromium executable, required for dashboard and visual components export
# Example (chromium-headless package installed in CentOS 7): chrome.path=/usr/lib64/chromium-browser/headless_shell
chrome.path=${chrome.path}

# Max time in seconds while the Chrome page for dashboard export will be active
# If not set, system default value of 150 is used
# Example: chrome.page.timeout=300
chrome.page.timeout=${chrome.page.timeout}

# Base url of the server, accessible by local browser
# Used for Dashboard export and Scheduling
# By default, it is determined from request, set this property in order to work with scheduled
# jobs without logging in even once or to use some custom URL
# Example: deploy.base.local.url=http://localhost:8080/jasperserver-pro
deploy.base.local.url=

# Control links in hypermedia documents
# for example: deploy.base.url=http://bi.example.com
# right now works only for home page
# if empty then use request url
deploy.base.url=

## New external auth tenant creation: user config
new.tenant.user.name.1=jasperadmin
new.tenant.user.fullname.1=jasperadmin
# To encrypt the user password, set new.tenant.user.password.1=${tenant.user.pass} here.
# Then, in master properties, uncomment encrypt=true, set tenant.user.pass=<Your Password> and
# propsToEncrypt=tenant.user.pass.  Run in buildomatic folder: ant refresh-config. Find the encrypted
# password in buildomatic master.properties and in /build_conf/default/js.config.properties
new.tenant.user.password.1=jasperadmin
new.tenant.user.email.1=

# Repo FTP access
ftp.enabled=${ftp.enabled}

# JasperReports IO service URL
jrio.url=${jrio.url}

scalableQueryEngine.enabled = ${scalableQueryEngine.enabled}
scalableQueryEngine.url = ${scalableQueryEngine.url}
scalableQueryEngine.dataSourceTypes=com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.JdbcReportDataSource,com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.JndiJdbcReportDataSource,com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.CustomReportDataSource,com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.AwsReportDataSource,com.jaspersoft.jasperserver.api.metadata.jasperreports.domain.AzureSqlReportDataSource
scalableQueryEngine.livenessCheck.url = /actuator/health
scalableQueryEngine.livenessCheck.periodSeconds = 30
scalableQueryEngine.recover.enabled = false

#Defines the socket timeout (SO_TIMEOUT) in milliseconds, which is the timeout for waiting for data or, put differently, a maximum period inactivity between two consecutive data packets).
#A timeout value of zero is interpreted as an infinite timeout. A negative value is interpreted as undefined (system default).
scalableQueryEngine.http.read.timeout=240000

#Returns the timeout in milliseconds used when requesting a connection from the connection manager. A timeout value of zero is interpreted as an infinite timeout.
#A timeout value of zero is interpreted as an infinite timeout. A negative value is interpreted as undefined (system default).#/** A integer parameter name to set the connection request timeout (millis) */
scalableQueryEngine.http.connectionrequest.timeout=120000

# A integer parameter name to set max connection number. Defines the overall connection limit for a connection pool. 10 by default is if not set
scalableQueryEngine.http.maxConnections=1000
scalableQueryEngine.http.maxConnectionsPerRoute=100

# Determines the timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout.
# A timeout value of zero is interpreted as an infinite timeout.
# A negative value is interpreted as undefined (system default).
scalableQueryEngine.http.connect.timeout=120000

scalableQueryEngine.circuitBreaker.disabled = true